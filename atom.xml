<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Allever Blog</title>
  <subtitle>Android Developer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://devallever.github.io/"/>
  <updated>2017-08-16T13:28:47.002Z</updated>
  <id>https://devallever.github.io/</id>
  
  <author>
    <name>Allever</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android WebView使用及与JavaScript互调</title>
    <link href="https://devallever.github.io/2017/08/16/android-webview-js/"/>
    <id>https://devallever.github.io/2017/08/16/android-webview-js/</id>
    <published>2017-08-16T12:33:40.000Z</published>
    <updated>2017-08-16T13:28:47.002Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WebView基本使用"><a href="#WebView基本使用" class="headerlink" title="WebView基本使用"></a>WebView基本使用</h1><h2 id="在布局中使用控件"><a href="#在布局中使用控件" class="headerlink" title="在布局中使用控件"></a>在布局中使用控件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;WebView</div><div class="line">	android:id=&quot;@+id/id_web_test_2_wb&quot;</div><div class="line">	android:layout_width=&quot;match_parent&quot;</div><div class="line">	android:layout_height=&quot;match_parent&quot;/&gt;</div></pre></td></tr></table></figure>
<h2 id="在代码中"><a href="#在代码中" class="headerlink" title="在代码中"></a>在代码中</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">private void initWebView() &#123;</div><div class="line">	webView = (WebView)findViewById(R.id.id_web_test_2_wb);</div><div class="line">	//不跳转到其他浏览器</div><div class="line">	webView.setWebViewClient(new WebViewClient() &#123;</div><div class="line">		@Override</div><div class="line">		public boolean shouldOverrideUrlLoading(WebView view, String url) &#123;</div><div class="line">			view.loadUrl(url);</div><div class="line">			return true;</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">	WebSettings settings = webView.getSettings();</div><div class="line">	//支持JS</div><div class="line">	settings.setJavaScriptEnabled(true);</div><div class="line">	//加载本地html文件</div><div class="line">	webView.loadUrl(&quot;file:///android_asset/JavaAndJavaScriptCall.html&quot;);</div><div class="line">	//加载网页</div><div class="line">	//webView.loadUrl(&quot;https://www.baidu.com/&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>监听返回键<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</div><div class="line">	// TODO Auto-generated method stub</div><div class="line">	if ((keyCode == KeyEvent.KEYCODE_BACK) &amp;&amp;   webView.canGoBack()) &#123;</div><div class="line">		webView.goBack();</div><div class="line">		return true;</div><div class="line">	&#125;</div><div class="line">	return super.onKeyDown(keyCode, event);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="原生-Java-与JavaScript互调"><a href="#原生-Java-与JavaScript互调" class="headerlink" title="原生(Java)与JavaScript互调"></a>原生(Java)与JavaScript互调</h1><p>例如加载这个本地html<br>在输入框中随便输入东西，然后点击确定，调用js方法，下面显示欢迎xxxx<br>点击网页中的按钮，调用原生方法。toast一个。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/allsample/web-js.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h2 id="html页面"><a href="#html页面" class="headerlink" title="html页面"></a>html页面</h2><p>在main目录下新建assets文件夹，在assets目录下新建JavaAndJavaScriptCall.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&gt;</div><div class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line"></div><div class="line">    function javaCallJs(arg)&#123;</div><div class="line">         document.getElementById(&quot;content&quot;).innerHTML =</div><div class="line">             (&quot;欢迎：&quot;+arg );</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    &lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;div id=&quot;content&quot;&gt; 请在上方输入您的用户名&lt;/div&gt;</div><div class="line">&lt;input type=&quot;button&quot; value=&quot;点击Android被调用&quot; onclick=&quot;window.Android.showToast(&apos;JS中传来的参数&apos;)&quot;/&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<h2 id="原生布局"><a href="#原生布局" class="headerlink" title="原生布局"></a>原生布局</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class="line">    android:id=&quot;@+id/ll_root&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:orientation=&quot;vertical&quot;&gt;</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot;</div><div class="line">        android:padding=&quot;20dp&quot;</div><div class="line">        android:background=&quot;#000088&quot;&gt;</div><div class="line">        &lt;EditText</div><div class="line">            android:id=&quot;@+id/et_user&quot;</div><div class="line">            android:layout_width=&quot;0dp&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:hint=&quot;输入WebView中要显示的用户名&quot;</div><div class="line">            android:background=&quot;#008800&quot;</div><div class="line">            android:textSize=&quot;16sp&quot;</div><div class="line">            android:layout_weight=&quot;1&quot;/&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:layout_marginLeft=&quot;40dp&quot;</div><div class="line">            android:layout_marginRight=&quot;20dp&quot;</div><div class="line">            android:textSize=&quot;16sp&quot;</div><div class="line">            android:text=&quot;确定&quot;</div><div class="line">            android:onClick=&quot;click&quot;/&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">    &lt;WebView</div><div class="line">        android:id=&quot;@+id/id_web_test_2_wb&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;match_parent&quot;/&gt;</div><div class="line"></div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure>
<p>一看就懂，不解释。</p>
<h2 id="加载本地html"><a href="#加载本地html" class="headerlink" title="加载本地html"></a>加载本地html</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">webView.loadUrl(&quot;file:///android_asset/JavaAndJavaScriptCall.html&quot;);</div></pre></td></tr></table></figure>
<h2 id="调用JavaScript方法"><a href="#调用JavaScript方法" class="headerlink" title="调用JavaScript方法"></a>调用JavaScript方法</h2><p>在点击确定之后触发调用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//java调用JS方法</div><div class="line">webView.loadUrl(&quot;javascript:javaCallJs(&quot; + &quot;&apos;&quot; + et_user.getText().toString()+&quot;&apos;&quot;+&quot;)&quot;);</div></pre></td></tr></table></figure></p>
<p>这里比较难看，log出来的url是这样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">javascript:javaCallJs(&apos;inputValue&apos;)</div></pre></td></tr></table></figure></p>
<p>javaCallJs()就是JavaScript代码中的方法名，里面是参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">function javaCallJs(arg)&#123;</div><div class="line">	document.getElementById(&quot;content&quot;).innerHTML =</div><div class="line">	(&quot;欢迎：&quot;+arg );</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<h2 id="JavaScript调用原生方法"><a href="#JavaScript调用原生方法" class="headerlink" title="JavaScript调用原生方法"></a>JavaScript调用原生方法</h2><p>通常会建一个类用来封装被JavaScript调用的方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">private class JSInterface &#123;</div><div class="line">//JS需要调用的方法</div><div class="line">	@JavascriptInterface</div><div class="line">	public void showToast(String arg)&#123;</div><div class="line">		Toast.makeText(WebTest2Activity.this,arg,Toast.LENGTH_SHORT).show();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>使用 @JavascriptInterface标注的方法就是被JavaScript调用的方法</p>
<p>然后设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">webView.addJavascriptInterface(new JSInterface(),&quot;Android&quot;);</div></pre></td></tr></table></figure></p>
<p>Android是随便起的，是JavaScript中的对象名，<br>源码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">    * @param object the Java object to inject into this WebView&apos;s JavaScript</div><div class="line">    *               context. Null values are ignored.</div><div class="line">    * @param name the name used to expose the object in JavaScript</div><div class="line">    */</div><div class="line">public void addJavascriptInterface(Object object, String name) &#123;</div><div class="line">	checkThread();</div><div class="line">	mProvider.addJavascriptInterface(object, name);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>再看一下html中的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot; value=&quot;点击Android被调用&quot; onclick=&quot;window.Android.showToast(&apos;JS中传来的参数&apos;)&quot;/&gt;</div></pre></td></tr></table></figure></p>
<p>其中Android就是webview添加JavaScript接口时指定的JavaScript对象名<br>当点击html中按钮时，就会调用showToast()方法弹出Toast</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;WebView基本使用&quot;&gt;&lt;a href=&quot;#WebView基本使用&quot; class=&quot;headerlink&quot; title=&quot;WebView基本使用&quot;&gt;&lt;/a&gt;WebView基本使用&lt;/h1&gt;&lt;h2 id=&quot;在布局中使用控件&quot;&gt;&lt;a href=&quot;#在布局中使用控件&quot;
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="WebView" scheme="https://devallever.github.io/tags/WebView/"/>
    
      <category term="JavaScript" scheme="https://devallever.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Android 拖拽基本使用</title>
    <link href="https://devallever.github.io/2017/08/15/android-drag-basic-use/"/>
    <id>https://devallever.github.io/2017/08/15/android-drag-basic-use/</id>
    <published>2017-08-15T13:27:03.000Z</published>
    <updated>2017-08-15T13:47:11.598Z</updated>
    
    <content type="html"><![CDATA[<h1 id="onDragListener-简介"><a href="#onDragListener-简介" class="headerlink" title="onDragListener 简介"></a>onDragListener 简介</h1><p>使用Android拖放框架，你可以允许用户使用图形化的拖拽手势将数据从一个视图移动到另一个视图。这个框架包括一个拖拽事件类、拖放侦听器和帮助器方法和类。<br>尽管该框架主要是为数据移动设计的，但您可以将其用于其他UI操作。例如，当用户拖动一个颜色图标到另一个图标上时，你可以创建一个混合颜色的应用程序。</p>
<h1 id="最基本的使用姿势"><a href="#最基本的使用姿势" class="headerlink" title="最基本的使用姿势"></a>最基本的使用姿势</h1><h2 id="设置监听"><a href="#设置监听" class="headerlink" title="设置监听"></a>设置监听</h2><p>需要监听拖拽事件的区域设置监听<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rl_destination.setOnDragListener(this);//RelativeLayout</div></pre></td></tr></table></figure></p>
<h2 id="重写onDrag"><a href="#重写onDrag" class="headerlink" title="重写onDrag"></a>重写onDrag</h2><p>这是最重要的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public boolean onDrag(View v, DragEvent event) &#123;</div><div class="line">	return true;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>必须返回true,才能退拽</p>
<p>event封装了各种事件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">int action = event.getAction();</div><div class="line">switch (action)&#123;</div><div class="line">	case DragEvent.ACTION_DRAG_STARTED:</div><div class="line">		//Toast.makeText(TargetItemSelectedTestActivity.this, &quot;开始拖动&quot;, Toast.LENGTH_LONG).show();</div><div class="line">		break;</div><div class="line">	case DragEvent.ACTION_DRAG_ENTERED:</div><div class="line">		//Toast.makeText(TargetItemSelectedTestActivity.this, &quot;进入目标区域&quot;, Toast.LENGTH_LONG).show();</div><div class="line">		//这里可以改变目标区域的背景色</div><div class="line">		break;</div><div class="line">	case DragEvent.ACTION_DRAG_EXITED:</div><div class="line">		//Toast.makeText(TargetItemSelectedTestActivity.this, &quot;离开目标区域&quot;, Toast.LENGTH_LONG).show();</div><div class="line">		break;</div><div class="line"></div><div class="line">	case DragEvent.ACTION_DROP:</div><div class="line">		//Toast.makeText(TargetItemSelectedTestActivity.this, &quot;放手&quot;, Toast.LENGTH_LONG).show();</div><div class="line">		break;</div><div class="line">	case DragEvent.ACTION_DRAG_LOCATION:</div><div class="line">		//Ignore the event</div><div class="line">		break;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="开始拖拽"><a href="#开始拖拽" class="headerlink" title="开始拖拽"></a>开始拖拽</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">targetView.startDrag(null,new View.DragShadowBuilder(targetView),null,0);</div></pre></td></tr></table></figure>
<p>这样就可以有拖拽效果了.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;onDragListener-简介&quot;&gt;&lt;a href=&quot;#onDragListener-简介&quot; class=&quot;headerlink&quot; title=&quot;onDragListener 简介&quot;&gt;&lt;/a&gt;onDragListener 简介&lt;/h1&gt;&lt;p&gt;使用Android拖
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="DragListener" scheme="https://devallever.github.io/tags/DragListener/"/>
    
  </entry>
  
  <entry>
    <title>Android 修改App语言</title>
    <link href="https://devallever.github.io/2017/08/09/android-language-setting/"/>
    <id>https://devallever.github.io/2017/08/09/android-language-setting/</id>
    <published>2017-08-09T13:38:09.000Z</published>
    <updated>2017-08-09T13:54:54.357Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义资源文件"><a href="#定义资源文件" class="headerlink" title="定义资源文件"></a>定义资源文件</h1><p>在res目录下创建<br>values    默认<br>values-en    英文<br>values-zh    中文<br>分别存放不同的语言资源</p>
<h1 id="保存语言设置"><a href="#保存语言设置" class="headerlink" title="保存语言设置"></a>保存语言设置</h1><p>可以用SharePreference保存语言设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">public static void setLanAtr(String language)&#123;</div><div class="line">	SharedPreferences sharedPreferences = MyApplication.getInstance().getSharedPreferences(&quot;setting_share&quot;, 0);</div><div class="line">	SharedPreferences.Editor editor = sharedPreferences.edit();</div><div class="line">	editor.putString(&quot;language&quot;,language);</div><div class="line">	editor.commit();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>另外相应的可以获取语言设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public static String getLanAtr()&#123;</div><div class="line">	SharedPreferences sharedPreferences = MyApplication.getInstance().getSharedPreferences(&quot;setting_share&quot;, 0);</div><div class="line">	String lanAtr = sharedPreferences.getString(&quot;language&quot;, Contants.LANGUAGE_CHINESE);</div><div class="line">	return  lanAtr;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h1><p>在BaseActivity或者Application中开启全局语言设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Utils.changeAppLanguage(getResources(), SharePreferencesUtil.getLanAtr());</div></pre></td></tr></table></figure></p>
<p>重点:changeAppLanguage()方法如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">public static void changeAppLanguage(Resources resources, String lanAtr)&#123;</div><div class="line">	Configuration configuration = resources.getConfiguration();</div><div class="line">	DisplayMetrics displayMetrics = resources.getDisplayMetrics();</div><div class="line">	if (lanAtr.equals(Contants.LANGUAGE_ENGLISH))&#123;</div><div class="line">		configuration.locale = Locale.ENGLISH;</div><div class="line">	&#125;else &#123;</div><div class="line">		configuration.locale = Locale.CHINESE;</div><div class="line">	&#125;</div><div class="line">	resources.updateConfiguration(configuration,displayMetrics);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;定义资源文件&quot;&gt;&lt;a href=&quot;#定义资源文件&quot; class=&quot;headerlink&quot; title=&quot;定义资源文件&quot;&gt;&lt;/a&gt;定义资源文件&lt;/h1&gt;&lt;p&gt;在res目录下创建&lt;br&gt;values    默认&lt;br&gt;values-en    英文&lt;br&gt;values
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="Language" scheme="https://devallever.github.io/tags/Language/"/>
    
  </entry>
  
  <entry>
    <title>SwipeMenuListView 基本使用</title>
    <link href="https://devallever.github.io/2017/08/09/android-swipemenulistview-basic-use/"/>
    <id>https://devallever.github.io/2017/08/09/android-swipemenulistview-basic-use/</id>
    <published>2017-08-09T12:47:15.000Z</published>
    <updated>2017-08-09T13:06:13.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SwipeMenuListView简介"><a href="#SwipeMenuListView简介" class="headerlink" title="SwipeMenuListView简介"></a>SwipeMenuListView简介</h1><p>一个带侧滑删除的ListView</p>
<blockquote>
<p>github地址: <a href="https://github.com/baoyongzhang/SwipeMenuListView" target="_blank" rel="external">https://github.com/baoyongzhang/SwipeMenuListView</a></p>
</blockquote>
<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><p>添加依赖<br>android studio中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile &apos;com.baoyz.swipemenulistview:library:1.3.0&apos;</div></pre></td></tr></table></figure></p>
<p>eclipse中下载相应jar包</p>
<p>使用方式和ListView是一样的,在listView的基础上有更多设置<br>在布局中引用控件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;com.baoyz.swipemenulistview.SwipeMenuListView</div><div class="line">	android:id=&quot;@+id/share_manage_user_ls&quot;</div><div class="line">	android:layout_width=&quot;match_parent&quot;</div><div class="line">	android:layout_height=&quot;wrap_content&quot;/&gt;</div></pre></td></tr></table></figure></p>
<p>Adapter跟普通ListView的adapter是一样的,不多说了<br>然后就是在代码中设置菜单<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">SwipeMenuCreator swipeMenuCreator = new SwipeMenuCreator() &#123;</div><div class="line">	@Override</div><div class="line">	public void create(SwipeMenu menu) &#123;</div><div class="line">		SwipeMenuItem swipeMenuItem = new SwipeMenuItem(getApplicationContext());</div><div class="line">		swipeMenuItem.setBackground(R.color.app_red);</div><div class="line">		//swipeMenuItem.setTitleColor(R.color.white);</div><div class="line">		swipeMenuItem.setTitleColor(Color.WHITE);</div><div class="line">		swipeMenuItem.setWidth(DisplayUtil.dip2px(ShareManageActivity.this,90));</div><div class="line">		swipeMenuItem.setTitle(R.string.delete);</div><div class="line">		swipeMenuItem.setTitleSize(18);</div><div class="line">		menu.addMenuItem(swipeMenuItem);</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">mSwipeMenuListView.setMenuCreator(swipeMenuCreator);</div></pre></td></tr></table></figure></p>
<p>创建SwipeMenuCreator对象,在方法体中创建SwipeMenuItem对象,然后把这个对象添加到Menu对象中,有多少个菜单就添加多少个SwipeMenuItem.比如这个菜单中就仅有一个删除菜单项.SwipeMenu对象方法根据名字就知道干什么用的了.</p>
<p>设置菜单项的监听<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//设置监听</div><div class="line">mSwipeMenuListView.setOnMenuItemClickListener(new SwipeMenuListView.OnMenuItemClickListener() &#123;</div><div class="line">	@Override</div><div class="line">	public boolean onMenuItemClick(final int position, SwipeMenu menu, int index) &#123;</div><div class="line">		switch (index)&#123;</div><div class="line">			case 0:</div><div class="line">				break;</div><div class="line">		&#125;</div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>根据position判断选择的是哪一项,从左到右为: 0 1 2….<br>好了,这个最简单的使用就这么多了.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SwipeMenuListView简介&quot;&gt;&lt;a href=&quot;#SwipeMenuListView简介&quot; class=&quot;headerlink&quot; title=&quot;SwipeMenuListView简介&quot;&gt;&lt;/a&gt;SwipeMenuListView简介&lt;/h1&gt;&lt;p&gt;一个
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="SwipeMenuListView" scheme="https://devallever.github.io/tags/SwipeMenuListView/"/>
    
  </entry>
  
  <entry>
    <title>Android Seekbar调节系统音量</title>
    <link href="https://devallever.github.io/2017/08/09/android-seekbar-and-volume/"/>
    <id>https://devallever.github.io/2017/08/09/android-seekbar-and-volume/</id>
    <published>2017-08-09T09:28:01.000Z</published>
    <updated>2017-08-09T09:45:51.648Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SeekBar简介"><a href="#SeekBar简介" class="headerlink" title="SeekBar简介"></a>SeekBar简介</h1><p>就是拖动的进度条, 可以用来调节音量</p>
<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><p>需要两张图片,一张是背景,一张是选中的]时候的样式,<br>还有一张图片,用来显示当前进度的指示图标<br>这些可用用图片,亦可以永drawable绘图</p>
<h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><p>volume_control_bg.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line"></div><div class="line">&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line">    &lt;item</div><div class="line">        android:id=&quot;@android:id/background&quot;</div><div class="line">        android:drawable=&quot;@drawable/set_voice_bar_nor&quot; /&gt;</div><div class="line">    &lt;item</div><div class="line">        android:id=&quot;@android:id/progress&quot;</div><div class="line">        android:drawable=&quot;@drawable/set_voice_bar_sel&quot; /&gt;</div><div class="line">&lt;/layer-list&gt;</div></pre></td></tr></table></figure></p>
<p>控制点volume_control_point.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:shape=&quot;oval&quot;&gt;</div><div class="line"></div><div class="line">    &lt;solid</div><div class="line">        android:color=&quot;@color/white&quot;/&gt;</div><div class="line">    &lt;size</div><div class="line">        android:width=&quot;15dp&quot;</div><div class="line">        android:height=&quot;15dp&quot;/&gt;</div><div class="line">    &lt;stroke</div><div class="line">        android:color=&quot;@color/code_blue&quot;</div><div class="line">        android:width=&quot;2dp&quot;/&gt;</div><div class="line"></div><div class="line">&lt;/shape&gt;</div></pre></td></tr></table></figure></p>
<h2 id="使用SeekBar"><a href="#使用SeekBar" class="headerlink" title="使用SeekBar"></a>使用SeekBar</h2><p>在布局文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;SeekBar</div><div class="line">	android:id=&quot;@+id/setting_volume_control_sb&quot;</div><div class="line">	android:layout_width=&quot;200dp&quot;</div><div class="line">	android:layout_height=&quot;wrap_content&quot;</div><div class="line">	android:layout_centerVertical=&quot;true&quot;</div><div class="line">	android:layout_toLeftOf=&quot;@id/setting_loud_iv&quot;</div><div class="line">	android:thumb=&quot;@drawable/volume_control_point&quot;</div><div class="line">	android:thumbOffset=&quot;0dp&quot;</div><div class="line">	android:maxHeight=&quot;2dp&quot;</div><div class="line">	android:minHeight=&quot;2dp&quot;</div><div class="line">	android:progressDrawable=&quot;@drawable/volume_control_bg&quot;</div><div class="line">/&gt;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>thumb:指定控制点<br>progressDrawable:指定背景<br>maxHeight:指定图片最大高度</p>
</blockquote>
<p>在代码中,不用任何操作,就可以看到该空间,并拖动了</p>
<h2 id="控制音量"><a href="#控制音量" class="headerlink" title="控制音量"></a>控制音量</h2><p>首先获取AudioManager,用来管理音量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mAudioManager = (AudioManager)getSystemService(AUDIO_SERVICE);</div></pre></td></tr></table></figure></p>
<p>获取最大音量和当前音量设置给seekbar<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int maxVolume = mAudioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC);//获取媒体声音最大值</div><div class="line">seekBar.setMax(maxVolume);</div><div class="line">int currentVolume = mAudioManager.getStreamVolume(AudioManager.STREAM_MUSIC);</div><div class="line">seekBar.setProgress(currentVolume);//设置当前进度</div></pre></td></tr></table></figure></p>
<p>监听seekbar的拖动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() &#123;</div><div class="line">	@Override</div><div class="line">	public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) &#123;</div><div class="line">		if(fromUser)&#123;</div><div class="line">		//设置媒体音量</div><div class="line">			mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, progress, 0);</div><div class="line">			int currentVolume = mAudioManager.getStreamVolume(AudioManager.STREAM_MUSIC);</div><div class="line">			seekBar.setProgress(currentVolume);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void onStartTrackingTouch(SeekBar seekBar) &#123;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void onStopTrackingTouch(SeekBar seekBar) &#123;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>监听系统音量变化<br>当系统音量改变时,会发送广播,因此需要定义广播接收器监听广播<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">private class VolumeReceiver extends BroadcastReceiver&#123;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public void onReceive(Context context, Intent intent) &#123;</div><div class="line">		if(intent.getAction().equals(&quot;android.media.VOLUME_CHANGED_ACTION&quot;))&#123;</div><div class="line">		int currentVolume = mAudioManager.getStreamVolume(AudioManager.STREAM_MUSIC);</div><div class="line">		seekBar.setProgress(currentVolume);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SeekBar简介&quot;&gt;&lt;a href=&quot;#SeekBar简介&quot; class=&quot;headerlink&quot; title=&quot;SeekBar简介&quot;&gt;&lt;/a&gt;SeekBar简介&lt;/h1&gt;&lt;p&gt;就是拖动的进度条, 可以用来调节音量&lt;/p&gt;
&lt;h1 id=&quot;基本使用&quot;&gt;&lt;a hr
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="SeekBar" scheme="https://devallever.github.io/tags/SeekBar/"/>
    
  </entry>
  
  <entry>
    <title>Android ExpandableListView基础用法</title>
    <link href="https://devallever.github.io/2017/08/09/android-expandablelistview-basic-use/"/>
    <id>https://devallever.github.io/2017/08/09/android-expandablelistview-basic-use/</id>
    <published>2017-08-09T08:28:24.000Z</published>
    <updated>2017-08-09T09:13:33.946Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ExpandableListView简介"><a href="#ExpandableListView简介" class="headerlink" title="ExpandableListView简介"></a>ExpandableListView简介</h1><p>可以折叠的ListView</p>
<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><p>使用方法和ListView大同小异,都是需要item的布局,需要adapter<br>But:<br>ExpandableListView需要父Item布局,需要子Item布局.Adapter需要的是BaseExpandableListAdapter<br>下面以一个好友分组的例子总结一下用法</p>
<h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>分组Item布局<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">     android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;wrap_content&quot;</div><div class="line">    android:padding=&quot;10dp&quot;</div><div class="line">    android:background=&quot;@color/color_green_50&quot;&gt;</div><div class="line">    &lt;RelativeLayout</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;&gt;</div><div class="line">        &lt;ImageView</div><div class="line">            android:id=&quot;@+id/id_friendgroup_item_parent_iv_expand&quot;</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:src=&quot;@mipmap/ic_unexpanded&quot;/&gt;</div><div class="line">        &lt;TextView</div><div class="line">            android:id=&quot;@+id/id_friendgroup_item_parent_tv_friendgroup_name&quot;</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">            android:layout_toRightOf=&quot;@id/id_friendgroup_item_parent_iv_expand&quot;</div><div class="line">            android:text=&quot;我的好友&quot;</div><div class="line">            android:layout_centerVertical=&quot;true&quot;</div><div class="line">            android:textSize=&quot;18sp&quot;</div><div class="line">            android:textColor=&quot;@color/colorPrimary&quot;/&gt;</div><div class="line">        &lt;TextView</div><div class="line">            android:id=&quot;@+id/id_friendgroup_item_parent_tv_friend_count&quot;</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:text=&quot;0&quot;</div><div class="line">            android:layout_marginRight=&quot;5dp&quot;</div><div class="line">            android:textSize=&quot;18sp&quot;</div><div class="line">            android:textColor=&quot;@color/colorGray_500&quot;</div><div class="line">            android:layout_centerVertical=&quot;true&quot;</div><div class="line">            android:layout_alignParentRight=&quot;true&quot;/&gt;</div><div class="line">    &lt;/RelativeLayout&gt;</div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure></p>
<p>效果图:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/expandablelistview/group_item.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>好友Item布局<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;wrap_content&quot;</div><div class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</div><div class="line">    &gt;</div><div class="line"></div><div class="line">    &lt;RelativeLayout</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:padding=&quot;10dp&quot;&gt;</div><div class="line"></div><div class="line">        &lt;de.hdodenhof.circleimageview.CircleImageView</div><div class="line">            android:id=&quot;@+id/id_friendgroup_item_child_iv_head&quot;</div><div class="line">            android:layout_width=&quot;56dp&quot;</div><div class="line">            android:layout_height=&quot;56dp&quot;</div><div class="line">            app:civ_border_width=&quot;0.5dp&quot;</div><div class="line">            app:civ_border_color=&quot;#fff&quot;</div><div class="line">            android:src=&quot;@mipmap/winchen&quot;/&gt;</div><div class="line"></div><div class="line">        &lt;TextView</div><div class="line">            android:id=&quot;@+id/id_friendgroup_item_child_tv_nickname&quot;</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:text=&quot;Nickname&quot;</div><div class="line">            android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">            android:textColor=&quot;@color/black_deep&quot;</div><div class="line">            android:textSize=&quot;18sp&quot;</div><div class="line">            android:layout_toRightOf=&quot;@id/id_friendgroup_item_child_iv_head&quot;/&gt;</div><div class="line">        &lt;TextView</div><div class="line">            android:id=&quot;@+id/id_friendgroup_item_child_tv_signature&quot;</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:text=&quot;Signature&quot;</div><div class="line">            android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">            android:layout_marginTop=&quot;4dp&quot;</div><div class="line">            android:maxLines=&quot;1&quot;</div><div class="line">            android:ellipsize=&quot;end&quot;</div><div class="line">            android:layout_below=&quot;@id/id_friendgroup_item_child_tv_nickname&quot;</div><div class="line">            android:layout_toRightOf=&quot;@id/id_friendgroup_item_child_iv_head&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure></p>
<p>效果图:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/expandablelistview/user_item.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h2 id="封装数据"><a href="#封装数据" class="headerlink" title="封装数据"></a>封装数据</h2><p>FriendGroupItem<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">public class FriendGroupItem &#123;</div><div class="line">    private String id;</div><div class="line">    private String friendgroup_name;</div><div class="line">    private List&lt;FriendItem&gt; list_friend;</div><div class="line">    public String getId() &#123;</div><div class="line">        return id;</div><div class="line">    &#125;</div><div class="line">    public void setId(String id) &#123;</div><div class="line">        this.id = id;</div><div class="line">    &#125;</div><div class="line">    public String getFriendgroup_name() &#123;</div><div class="line">        return friendgroup_name;</div><div class="line">    &#125;</div><div class="line">    public void setFriendgroup_name(String friendgroup_name) &#123;</div><div class="line">        this.friendgroup_name = friendgroup_name;</div><div class="line">    &#125;</div><div class="line">    public List&lt;FriendItem&gt; getList_friend() &#123;</div><div class="line">        return list_friend;</div><div class="line">    &#125;</div><div class="line">    public void setList_friend(List&lt;FriendItem&gt; list_friend) &#123;</div><div class="line">        this.list_friend = list_friend;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>FriendGroupItem<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">public class FriendItem  &#123;</div><div class="line">    private String sortLetters;  //显示数据拼音的首字母</div><div class="line">    private String user_id;</div><div class="line">    private String nickname;</div><div class="line">    private String username;</div><div class="line">    private String user_head_path;</div><div class="line">    private String signature;</div><div class="line">    public String getUser_id() &#123;</div><div class="line">        return user_id;</div><div class="line">    &#125;</div><div class="line">    public void setUser_id(String user_id) &#123;</div><div class="line">        this.user_id = user_id;</div><div class="line">    &#125;</div><div class="line">    public String getNickname() &#123;</div><div class="line">        return nickname;</div><div class="line">    &#125;</div><div class="line">    public void setNickname(String nickname) &#123;</div><div class="line">        this.nickname = nickname;</div><div class="line">    &#125;</div><div class="line">    public String getUser_head_path() &#123;</div><div class="line">        return user_head_path;</div><div class="line">    &#125;</div><div class="line">    public void setUser_head_path(String user_head_path) &#123;</div><div class="line">        this.user_head_path = user_head_path;</div><div class="line">    &#125;</div><div class="line">    public String getSignature() &#123;</div><div class="line">        return signature;</div><div class="line">    &#125;</div><div class="line">    public void setSignature(String signature) &#123;</div><div class="line">        this.signature = signature;</div><div class="line">    &#125;</div><div class="line">    public void setUsername(String username)&#123;</div><div class="line">        this.username = username;</div><div class="line">    &#125;</div><div class="line">    public String getUsername()&#123;</div><div class="line">        return this.username;</div><div class="line">    &#125;</div><div class="line">    public String getSortLetters() &#123;</div><div class="line">        return sortLetters;</div><div class="line">    &#125;</div><div class="line">    public void setSortLetters(String sortLetters) &#123;</div><div class="line">        this.sortLetters = sortLetters;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Adapter适配器"><a href="#Adapter适配器" class="headerlink" title="Adapter适配器"></a>Adapter适配器</h2><p>FriendGroupItemExpandableBaseAdapter<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Created by Allever on 2016/6/14.</div><div class="line"> * 好友分组项适配器</div><div class="line"> */</div><div class="line">public class FriendGroupItemExpandableBaseAdapter extends BaseExpandableListAdapter &#123;</div><div class="line"></div><div class="line">    private Context context;</div><div class="line">    private LayoutInflater inflater;</div><div class="line">    private List&lt;FriendGroupItem&gt; list_friendgroupItem;</div><div class="line"></div><div class="line">    public FriendGroupItemExpandableBaseAdapter(Context context, List&lt;FriendGroupItem&gt; list_friendgroupItem)&#123;</div><div class="line">        this.context = context;</div><div class="line">        this.list_friendgroupItem = list_friendgroupItem;</div><div class="line">        inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    @Override</div><div class="line">    public View getGroupView(int parentPosition, boolean isExpanded, View convertView, ViewGroup parent) &#123;</div><div class="line">        FriendGroupItem friendGroupItem = list_friendgroupItem.get(parentPosition);</div><div class="line">        View view;</div><div class="line">        ParentViewHolder parentViewHolder;</div><div class="line">        if (convertView == null)&#123;</div><div class="line">            view = inflater.inflate(R.layout.friendgroup_item_parent,parent,false);</div><div class="line">            parentViewHolder = new ParentViewHolder();</div><div class="line">            parentViewHolder.tv_friendgroup_name = (TextView)view.findViewById(R.id.id_friendgroup_item_parent_tv_friendgroup_name);</div><div class="line">            parentViewHolder.iv_expand = (ImageView)view.findViewById(R.id.id_friendgroup_item_parent_iv_expand);</div><div class="line">            parentViewHolder.tv_friend_count = (TextView)view.findViewById(R.id.id_friendgroup_item_parent_tv_friend_count);</div><div class="line">            view.setTag(parentViewHolder);</div><div class="line">        &#125;else&#123;</div><div class="line">            view  = convertView;</div><div class="line">            parentViewHolder = (ParentViewHolder)view.getTag();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        //判断isExpanded就可以控制是按下还是关闭，同时更换图片</div><div class="line">        if (isExpanded)&#123;</div><div class="line">            parentViewHolder.iv_expand.setImageDrawable(context.getResources().getDrawable(R.mipmap.ic_expanded));</div><div class="line">        &#125;else&#123;</div><div class="line">            parentViewHolder.iv_expand.setImageDrawable(context.getResources().getDrawable(R.mipmap.ic_unexpanded));</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        parentViewHolder.tv_friend_count.setText(friendGroupItem.getList_friend().size()+&quot;&quot;);</div><div class="line">        parentViewHolder.tv_friendgroup_name.setText(friendGroupItem.getFriendgroup_name());</div><div class="line">        return view;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public View getChildView(int parentPosition, int childPosition, boolean b, View convertView, ViewGroup parent) &#123;</div><div class="line">        FriendItem friendItem = list_friendgroupItem.get(parentPosition).getList_friend().get(childPosition);</div><div class="line">        View view;</div><div class="line">        ChildViewHolder childViewHolder;</div><div class="line">        if(convertView == null)&#123;</div><div class="line">            view = inflater.inflate(R.layout.friendgroup_item_child,parent,false);</div><div class="line">            childViewHolder = new ChildViewHolder();</div><div class="line">            childViewHolder.iv_head = (CircleImageView)view.findViewById(R.id.id_friendgroup_item_child_iv_head);</div><div class="line">            childViewHolder.tv_nickname = (TextView)view.findViewById(R.id.id_friendgroup_item_child_tv_nickname);</div><div class="line">            childViewHolder.tv_signature = (TextView)view.findViewById(R.id.id_friendgroup_item_child_tv_signature);</div><div class="line">            view.setTag(childViewHolder);</div><div class="line">        &#125;else&#123;</div><div class="line">            view = convertView;</div><div class="line">            childViewHolder = (ChildViewHolder)view.getTag();</div><div class="line">        &#125;</div><div class="line">        Glide.with(context)</div><div class="line">                .load(WebUtil.HTTP_ADDRESS + friendItem.getUser_head_path())</div><div class="line">                .into(childViewHolder.iv_head);</div><div class="line">        childViewHolder.tv_nickname.setText(friendItem.getNickname());</div><div class="line">        childViewHolder.tv_signature.setText(friendItem.getSignature());</div><div class="line">        return view;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private class ParentViewHolder&#123;</div><div class="line">        ImageView iv_expand;</div><div class="line">        TextView tv_friendgroup_name;</div><div class="line">        TextView tv_friend_count;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private class ChildViewHolder&#123;</div><div class="line">        CircleImageView iv_head;</div><div class="line">        TextView tv_nickname;</div><div class="line">        TextView tv_signature;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int getGroupCount() &#123;</div><div class="line">        return list_friendgroupItem.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int getChildrenCount(int parentPosition) &#123;</div><div class="line">        return list_friendgroupItem.get(parentPosition).getList_friend().size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public Object getGroup(int parengPosition) &#123;</div><div class="line">        return list_friendgroupItem.get(parengPosition);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public Object getChild(int parentPosition, int childPosition) &#123;</div><div class="line">        return list_friendgroupItem.get(parentPosition).getList_friend().get(childPosition);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public long getGroupId(int parentPosition) &#123;</div><div class="line">        return parentPosition;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public long getChildId(int parentPosition, int childPosition) &#123;</div><div class="line">        return childPosition;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean hasStableIds() &#123;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    @Override</div><div class="line">    public boolean isChildSelectable(int i, int i1) &#123;</div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>继承自BaseExpandableListAdapter,重写里面几个方法, 看方法名就知道该方法是干什么的了,如果你熟悉ListView的话. 方法中很多都是成对存在的.根据方法名返回相应的值.重点就是getChildView()方法和getGroupView()方法;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public View getGroupView(int parentPosition, boolean isExpanded, View convertView, ViewGroup parent) &#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public View getChildView(int parentPosition, int childPosition, boolean b, View convertView, ViewGroup parent) &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>参数含义在上面已经标明了.</p>
<h2 id="使用ExpandableListView"><a href="#使用ExpandableListView" class="headerlink" title="使用ExpandableListView"></a>使用ExpandableListView</h2><p>在布局文件中使用该控件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;ExpandableListView</div><div class="line">	android:id=&quot;@+id/id_contact_fg2_expandable_listview&quot;</div><div class="line">	android:layout_width=&quot;match_parent&quot;</div><div class="line">	android:layout_height=&quot;match_parent&quot;&gt;</div><div class="line">&lt;/ExpandableListView&gt;</div></pre></td></tr></table></figure></p>
<p>在代码中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">expandableListView = (ExpandableListView)view.findViewById(R.id.id_contact_fg2_expandable_listview);</div><div class="line">expandableListView.setGroupIndicator(null); //设置指示器隐藏</div><div class="line"></div><div class="line">friendGroupItemExpandableBaseAdapter = new FriendGroupItemExpandableBaseAdapter(getActivity(),list_friendgroupItem);</div><div class="line">expandableListView.setAdapter(friendGroupItemExpandableBaseAdapter);</div><div class="line"></div><div class="line">//设置监听器</div><div class="line">expandableListView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() &#123;</div><div class="line">	@Override</div><div class="line">	public boolean onChildClick(ExpandableListView expandableListView, View view, int parentPosition, int childPosition, long l) &#123;</div><div class="line">		Intent intent = new Intent(getActivity(), UserDataDetailActivity.class);</div><div class="line">		intent.putExtra(&quot;username&quot;, list_friendgroupItem.get(parentPosition).getList_friend().get(childPosition).getUsername());</div><div class="line">		startActivity(intent);</div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>效果图:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/expandablelistview/review.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ExpandableListView简介&quot;&gt;&lt;a href=&quot;#ExpandableListView简介&quot; class=&quot;headerlink&quot; title=&quot;ExpandableListView简介&quot;&gt;&lt;/a&gt;ExpandableListView简介&lt;/h1&gt;&lt;
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="ExpandableListView" scheme="https://devallever.github.io/tags/ExpandableListView/"/>
    
  </entry>
  
  <entry>
    <title>Android 零碎知识点和技巧</title>
    <link href="https://devallever.github.io/2017/08/06/android-piece-knowledge/"/>
    <id>https://devallever.github.io/2017/08/06/android-piece-knowledge/</id>
    <published>2017-08-06T04:24:45.000Z</published>
    <updated>2017-09-02T03:18:07.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HttpUrlConnection传递数据"><a href="#HttpUrlConnection传递数据" class="headerlink" title="HttpUrlConnection传递数据"></a>HttpUrlConnection传递数据</h1><p>关键代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">URL url = new URL(&quot;http://119.23.30.121:80/JFitness/userController/getUserInfo&quot;);</div><div class="line">HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();</div><div class="line">//设置每次传输的流大小</div><div class="line">httpURLConnection.setChunkedStreamingMode(128 * 1024); //128K</div><div class="line">//允许输入输出流</div><div class="line">httpURLConnection.setDoInput(true);</div><div class="line">httpURLConnection.setDoOutput(true);</div><div class="line">httpURLConnection.setUseCaches(false);</div><div class="line">httpURLConnection.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json&quot;);</div><div class="line">httpURLConnection.connect();</div><div class="line"></div><div class="line">// POST请求</div><div class="line">DataOutputStream out = new DataOutputStream(httpURLConnection.getOutputStream());</div><div class="line">//JSONObject obj = new JSONObject();</div><div class="line">//String json = java.net.URLEncoder.encode(obj.toString(), &quot;utf-8&quot;);</div><div class="line">String json = &quot;&#123;\n&quot; +</div><div class="line">        &quot;\t\&quot;xid\&quot;:\&quot;9875642\&quot;\n&quot; +</div><div class="line">        &quot;&#125;&quot;;</div><div class="line">out.writeBytes(json);</div><div class="line">out.flush();</div><div class="line">out.close();</div><div class="line">// 读取响应</div><div class="line">BufferedReader reader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));</div><div class="line">String lines;</div><div class="line">StringBuffer sb = new StringBuffer(&quot;&quot;);</div><div class="line">while ((lines = reader.readLine()) != null) &#123;</div><div class="line">    lines = URLDecoder.decode(lines, &quot;utf-8&quot;);</div><div class="line">    sb.append(lines);</div><div class="line">&#125;</div><div class="line">System.out.println(sb);</div><div class="line">Log.d(TAG, &quot;get user info = &quot; + sb);</div><div class="line">reader.close();</div><div class="line">// 断开连接</div><div class="line">httpURLConnection.disconnect();</div></pre></td></tr></table></figure></p>
<p>注意设置请求头数据格式为json<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">httpURLConnection.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json&quot;);</div></pre></td></tr></table></figure></p>
<h1 id="使用JsonObject创建json字符串"><a href="#使用JsonObject创建json字符串" class="headerlink" title="使用JsonObject创建json字符串"></a>使用JsonObject创建json字符串</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">private void createJson()&#123;</div><div class="line">    JSONObject jsonObj = new JSONObject();</div><div class="line">    try &#123;</div><div class="line">        jsonObj.put(&quot;key_1&quot;,1);</div><div class="line">        jsonObj.put(&quot;key_2&quot;,&quot;value&quot;);</div><div class="line">        jsonObj.put(&quot;key_3&quot;,false);</div><div class="line">        jsonObj.put(&quot;key_4&quot;,0.3f);</div><div class="line">        jsonObj.put(&quot;key_5&quot;,3L);</div><div class="line">        jsonObj.put(&quot;key_6&quot;,new Object());</div><div class="line">        jsonObj.put(&quot;key_7&quot;,new ArrayList&lt;&gt;());</div><div class="line">        Log.d(TAG, &quot;createJson:  = \n&quot; + jsonObj.toString());</div><div class="line">    &#125;catch (Exception e)&#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>打印结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;key_1&quot;:1,&quot;key_2&quot;:&quot;value&quot;,&quot;key_3&quot;:false,&quot;key_4&quot;:0.30000001192092896,&quot;key_5&quot;:3,&quot;key_6&quot;:&quot;java.lang.Object@f94f4ed&quot;,&quot;key_7&quot;:&quot;[]&quot;&#125;</div></pre></td></tr></table></figure></p>
<h1 id="获取外部存储路径"><a href="#获取外部存储路径" class="headerlink" title="获取外部存储路径"></a>获取外部存储路径</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String dirType = Environment.DIRECTORY_DOWNLOADS;//或其他</div><div class="line">String dir = Environment.getExternalStoragePublicDirectory(dirType).getPath() + &quot;/&quot;;</div></pre></td></tr></table></figure>
<h1 id="根据Url获取文件名"><a href="#根据Url获取文件名" class="headerlink" title="根据Url获取文件名"></a>根据Url获取文件名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String url = &quot;https://github.com/devallever/MyCoolWeather/blob/master/app/simpleWeather.apk&quot;;</div><div class="line">String fileName = url.substring(url.lastIndexOf(&quot;/&quot;)).split(&quot;/&quot;)[1];//不带&quot;/&quot;</div></pre></td></tr></table></figure>
<p>打印结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">onCreate: fileName = simpleWeather.apk</div></pre></td></tr></table></figure></p>
<h1 id="判断第一次启动"><a href="#判断第一次启动" class="headerlink" title="判断第一次启动"></a>判断第一次启动</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//第一次启动</div><div class="line">SharedPreferences sharedPreferences = getSharedPreferences(&quot;setting&quot;,MODE_PRIVATE);</div><div class="line">boolean first_lanch = sharedPreferences.getBoolean(&quot;first_lanch&quot;,true);</div><div class="line">if(first_lanch)&#123;</div><div class="line">	Toast.makeText(this,&quot;第一次启动&quot;,Toast.LENGTH_LONG).show();</div><div class="line">	sharedPreferences.edit().putBoolean(&quot;first_lanch&quot;, false).commit</div><div class="line">&#125;else &#123;</div><div class="line">	Toast.makeText(this,&quot;不是第一次启动&quot;,Toast.LENGTH_LONG).show();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="ViewPager设置手势监听和页面触摸监听"><a href="#ViewPager设置手势监听和页面触摸监听" class="headerlink" title="ViewPager设置手势监听和页面触摸监听"></a>ViewPager设置手势监听和页面触摸监听</h1><p>创建个手势监听器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">private int verticalMinistance = 100;            //水平最小识别距离</div><div class="line">private int minVelocity = 10;            //最小识别速度</div><div class="line">private GestureDetector.OnGestureListener onGestureListener = new GestureDetector.SimpleOnGestureListener() &#123;</div><div class="line">    @Override</div><div class="line">    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) &#123;</div><div class="line">        if (e1.getX() - e2.getX() &gt; verticalMinistance &amp;&amp; Math.abs(velocityX) &gt; minVelocity) &#123;</div><div class="line">            showToast(&quot;left&quot;);</div><div class="line">        &#125; else if (e2.getX() - e1.getX() &gt; verticalMinistance &amp;&amp; Math.abs(velocityX) &gt; minVelocity) &#123;</div><div class="line">            showToast(&quot;right&quot;);</div><div class="line">        &#125; else if (e1.getY() - e2.getY() &gt; verticalMinistance &amp;&amp; Math.abs(velocityY) &gt; minVelocity) &#123;</div><div class="line">            showToast(&quot;up&quot;);</div><div class="line">        &#125; else if (e2.getY() - e1.getY() &gt; verticalMinistance &amp;&amp; Math.abs(velocityY) &gt; minVelocity) &#123;</div><div class="line">            showToast(&quot;down&quot;);</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean onDown(MotionEvent e) &#123;</div><div class="line">        return  true;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>其中,onDown()必须返回true, 否则onFling()不起效<br>然后创建GestureDetector对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mGestureDetector = new GestureDetector(this,onGestureListener);</div></pre></td></tr></table></figure></p>
<p>最后设置触摸监听,把事件交给手势监听器处理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mViewPager.setOnTouchListener(new View.OnTouchListener() &#123;</div><div class="line">	@Override</div><div class="line">	public boolean onTouch(View view, MotionEvent motionEvent) &#123;</div><div class="line">		//把触摸事件交给手势</div><div class="line">		mGestureDetector.onTouchEvent(motionEvent);</div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h1 id="LinearLayout从右到左排列"><a href="#LinearLayout从右到左排列" class="headerlink" title="LinearLayout从右到左排列"></a>LinearLayout从右到左排列</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:gravity=&quot;right&quot;</div></pre></td></tr></table></figure>
<h1 id="使用较高API的方法"><a href="#使用较高API的方法" class="headerlink" title="使用较高API的方法"></a>使用较高API的方法</h1><p>例如canvas.drawRoundRect()是minSDK21以上的方法要使用的话在方法上添加标注，然后在代码中判断当前sdk版本，进行不同的处理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">@TargetApi(Build.VERSION_CODES.LOLLIPOP)</div><div class="line">@Override</div><div class="line">protected void onDraw(Canvas canvas) &#123;</div><div class="line">	super.onDraw(canvas);</div><div class="line">	if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</div><div class="line">		canvas.drawRoundRect();</div><div class="line">	&#125;else&#123;</div><div class="line">		canvas.drawRect();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="ListView-RecyclerView-的单选效果"><a href="#ListView-RecyclerView-的单选效果" class="headerlink" title="ListView(RecyclerView)的单选效果"></a>ListView(RecyclerView)的单选效果</h1><p>在Adapter中公开一个方法,传入选中的position,然后刷新<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public void setSelected(int selectedPosition)&#123;</div><div class="line">	mSelectedPosition = selectedPosition;</div><div class="line">	notifyDataSetChanged();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>listView设置选项监听,在监听回调方法中,记录选中的position,调用上面方法setSelected()</p>
<p>在getView方法中判断position是否为mSelectedPosition,然后进行相应操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">if (mSelectedPosition == position)&#123;</div><div class="line">	deviceListViewHolder.iv_select.setVisibility(View.VISIBLE);</div><div class="line">	deviceListViewHolder.tv_device_name.setTextColor(context.getResources().getColor(R.color.code_blue));</div><div class="line">&#125;else &#123;</div><div class="line">	deviceListViewHolder.iv_select.setVisibility(View.INVISIBLE);</div><div class="line">	deviceListViewHolder.tv_device_name.setTextColor(context.getResources().getColor(R.color.gray));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="EditText相关"><a href="#EditText相关" class="headerlink" title="EditText相关"></a>EditText相关</h1><h2 id="光标颜色"><a href="#光标颜色" class="headerlink" title="光标颜色"></a>光标颜色</h2><p>在使用EditText的XML 文件中加入一个属性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:textCursorDrawable=&quot;@null&quot;</div></pre></td></tr></table></figure></p>
<p>android:textCursorDrawable   这个属性是用来控制光标颜色的，”@null”   是作用是让光标颜色和text color一样<br>比如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:textCursorDrawable=&quot;@color/black_color&quot;</div></pre></td></tr></table></figure></p>
<p>就可以设置成黑色。pad上面很多光标颜色和背景色一样。    </p>
<h1 id="TextView相关"><a href="#TextView相关" class="headerlink" title="TextView相关"></a>TextView相关</h1><p>##　更改字体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">textView.setTypeface(Typeface.createFromAsset(context.getAssets(), &quot;font/Shket-Regular_0.016.otf&quot;));</div></pre></td></tr></table></figure></p>
<p>字体文件放在/asset/font目录下</p>
<h2 id="设置行距"><a href="#设置行距" class="headerlink" title="设置行距"></a>设置行距</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:lineSpacingExtra=&quot;4dp&quot;</div></pre></td></tr></table></figure>
<h2 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:textStyle=&quot;bold|italic&quot;</div></pre></td></tr></table></figure>
<h1 id="修改语言"><a href="#修改语言" class="headerlink" title="修改语言"></a>修改语言</h1><h1 id="全屏显示"><a href="#全屏显示" class="headerlink" title="全屏显示"></a>全屏显示</h1><h1 id="强制横屏"><a href="#强制横屏" class="headerlink" title="强制横屏"></a>强制横屏</h1><p>在AndroidManifest.xml中设置,在Activity节点中添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">android:screenOrientation=&quot;landscape&quot; //锁定横屏</div><div class="line">android:screenOrientation=&quot;portrait&quot;	//锁定竖屏</div><div class="line"></div><div class="line">//例如</div><div class="line">&lt;activity android:name=&quot;.BaseActivity&quot;</div><div class="line">	android:screenOrientation=&quot;landscape&quot;&gt;</div><div class="line">&lt;/activity&gt;</div></pre></td></tr></table></figure></p>
<p>或者在代码中添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);</div><div class="line">setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);</div></pre></td></tr></table></figure></p>
<p>在setContentView()方法之前</p>
<h1 id="透明状态栏"><a href="#透明状态栏" class="headerlink" title="透明状态栏"></a>透明状态栏</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HttpUrlConnection传递数据&quot;&gt;&lt;a href=&quot;#HttpUrlConnection传递数据&quot; class=&quot;headerlink&quot; title=&quot;HttpUrlConnection传递数据&quot;&gt;&lt;/a&gt;HttpUrlConnection传递数据&lt;/
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android 根据一系列坐标点绘制贝塞尔曲线</title>
    <link href="https://devallever.github.io/2017/07/30/custom-bezier-line/"/>
    <id>https://devallever.github.io/2017/07/30/custom-bezier-line/</id>
    <published>2017-07-30T08:54:18.000Z</published>
    <updated>2017-08-15T13:24:15.058Z</updated>
    
    <content type="html"><![CDATA[<h1 id="功能概述："><a href="#功能概述：" class="headerlink" title="功能概述："></a>功能概述：</h1><p>给定一系列坐标，绘制它的贝塞尔曲线，并有渐变效果，如图:</p>
<p>第一版：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/line-01.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>第二版：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/Screenshot_20170810-205520.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>第三版：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/line-03.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h1 id="详细实现"><a href="#详细实现" class="headerlink" title="详细实现"></a>详细实现</h1><h2 id="把一般坐标转为-Android中的视图坐标"><a href="#把一般坐标转为-Android中的视图坐标" class="headerlink" title="把一般坐标转为 Android中的视图坐标"></a>把一般坐标转为 Android中的视图坐标</h2><p>因为现实中的坐标和Android中的坐标是不同的，Android中向下为Y轴正方向<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">List&lt;PointF&gt; oldPointF1 = new ArrayList&lt;&gt;();</div><div class="line">oldPointF1.add(new PointF(1, 100));</div><div class="line">oldPointF1.add(new PointF(2, 200));</div><div class="line">oldPointF1.add(new PointF(3, 150));</div><div class="line">oldPointF1.add(new PointF(4, 200));</div><div class="line">oldPointF1.add(new PointF(5, 50));</div><div class="line">oldPointF1.add(new PointF(6, 150));</div><div class="line">oldPointF1.add(new PointF(7, 100));</div><div class="line">oldPointF1.add(new PointF(8, 200));</div><div class="line">oldPointF1.add(new PointF(9, 100));</div><div class="line">oldPointF1.add(new PointF(10, 150));</div><div class="line">oldPointF1.add(new PointF(11, 50));</div><div class="line">oldPointF1.add(new PointF(12, 100));</div><div class="line">List&lt;PointF&gt; pointFs1 = changePoint(oldPointF1);</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 把一般坐标转为 Android中的视图坐标**/</div><div class="line">private List&lt;PointF&gt; changePoint(List&lt;PointF&gt; oldPointFs)&#123;</div><div class="line">    List&lt;PointF&gt; pointFs = new ArrayList&lt;&gt;();</div><div class="line">    //间隔，减去某个值是为了空出多余空间，为了画线以外，还要写坐标轴的值，除以坐标轴最大值(这里设为定值)</div><div class="line">    //相当于缩小图像</div><div class="line">    int intervalX = (getMeasuredWidth()-20)/12;</div><div class="line">    int intervalY = (getMeasuredHeight()-20)/250;</div><div class="line">    int height = getMeasuredHeight();</div><div class="line">    PointF p;</div><div class="line">    float x;</div><div class="line">    float y;</div><div class="line">    for (PointF pointF: oldPointFs)&#123;</div><div class="line">        //最后的正负值是左移右移</div><div class="line">        x = pointF.x * intervalX + 0;</div><div class="line">        y = height - pointF.y * intervalY - 100;</div><div class="line">        p = new PointF(x, y);</div><div class="line">        pointFs.add(p);</div><div class="line">    &#125;</div><div class="line">    return pointFs;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="计算控制点"><a href="#计算控制点" class="headerlink" title="计算控制点"></a>计算控制点</h2><p>参考文章：<a href="http://www.zheng-hang.com/?id=43" target="_blank" rel="external">根据多个点使用canvas贝赛尔曲线画一条平滑的曲线</a></p>
<p>在这里仅把求控制点公式转换成java代码<br>首先封装控制点类：ControlPoint.java<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line">package com.allever.bicycle.chartTest;</div><div class="line"></div><div class="line">import android.graphics.PointF;</div><div class="line"></div><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by allever on 17-7-27.</div><div class="line"> */</div><div class="line"></div><div class="line">public class ControlPoint &#123;</div><div class="line">    private PointF conPoint1;</div><div class="line">    private PointF conPoint2;</div><div class="line"></div><div class="line">    public ControlPoint(PointF p1, PointF p2)&#123;</div><div class="line">        this.conPoint1 = p1;</div><div class="line">        this.conPoint2 = p2;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public PointF getConPoint1() &#123;</div><div class="line">        return conPoint1;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setConPoint1(PointF conPoint1) &#123;</div><div class="line">        this.conPoint1 = conPoint1;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public PointF getConPoint2() &#123;</div><div class="line">        return conPoint2;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setConPoint2(PointF conPoint2) &#123;</div><div class="line">        this.conPoint2 = conPoint2;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static List&lt;ControlPoint&gt; getControlPointList(List&lt;PointF&gt; pointFs)&#123;</div><div class="line">        List&lt;ControlPoint&gt; controlPoints = new ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">        PointF p1;</div><div class="line">        PointF p2;</div><div class="line">        float conP1x;</div><div class="line">        float conP1y;</div><div class="line">        float conP2x;</div><div class="line">        float conP2y;</div><div class="line">        for (int i=0; i&lt;pointFs.size()-1;i++)&#123;</div><div class="line"></div><div class="line">            if (i == 0)&#123;</div><div class="line">                //第一断1曲线 控制点</div><div class="line">                conP1x = pointFs.get(i).x + (pointFs.get(i + 1).x-pointFs.get(i).x)/4;</div><div class="line">                conP1y = pointFs.get(i).y + (pointFs.get(i + 1).y-pointFs.get(i).y)/4;</div><div class="line"></div><div class="line">                conP2x = pointFs.get(i+1).x - (pointFs.get(i + 2).x - pointFs.get(i).x)/4;</div><div class="line">                conP2y = pointFs.get(i+1).y - (pointFs.get(i + 2).y - pointFs.get(i).y)/4;</div><div class="line"></div><div class="line">            &#125;else if (i == pointFs.size() - 2)&#123;</div><div class="line">                //最后一段曲线 控制点</div><div class="line">                conP1x = pointFs.get(i).x + (pointFs.get(i + 1).x-pointFs.get(i - 1).x)/4;</div><div class="line">                conP1y = pointFs.get(i).y + (pointFs.get(i + 1).y-pointFs.get(i - 1).y)/4;</div><div class="line"></div><div class="line">                conP2x = pointFs.get(i+1).x - (pointFs.get(i + 1).x - pointFs.get(i).x)/4;</div><div class="line">                conP2y = pointFs.get(i+1).y - (pointFs.get(i + 1).y - pointFs.get(i).y)/4;</div><div class="line">            &#125;else &#123;</div><div class="line">                conP1x = pointFs.get(i).x + (pointFs.get(i + 1).x-pointFs.get(i - 1).x)/4;</div><div class="line">                conP1y = pointFs.get(i).y + (pointFs.get(i + 1).y-pointFs.get(i - 1).y)/4;</div><div class="line"></div><div class="line">                conP2x = pointFs.get(i+1).x - (pointFs.get(i + 2).x - pointFs.get(i).x)/4;</div><div class="line">                conP2y = pointFs.get(i+1).y - (pointFs.get(i + 2).y - pointFs.get(i).y)/4;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            p1 = new PointF(conP1x,conP1y);</div><div class="line">            p2 = new PointF(conP2x,conP2y);</div><div class="line"></div><div class="line">            ControlPoint controlPoint = new ControlPoint(p1, p2);</div><div class="line">            controlPoints.add(controlPoint);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        return controlPoints;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其中getControlPointList()方法用来求每一断贝塞尔曲线的控制点，需要传入点坐标的List。一段曲线有两个控制点，因为使用三阶贝塞尔曲线，把每一段的控制点(两个)放到List中返回。<br>这里进行了判断，是因为第一段和左后一段求控制点与其他断有区别。可以查看上面文章公式。</p>
<h3 id="绘制贝塞尔曲线"><a href="#绘制贝塞尔曲线" class="headerlink" title="绘制贝塞尔曲线"></a>绘制贝塞尔曲线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">Path mPath1 = new Path();</div><div class="line">//贝塞尔曲线获取控制点</div><div class="line">List&lt;ControlPoint&gt; controlPoints1 = ControlPoint.getControlPointList(pointFs1);</div><div class="line">for (int i=0; i&lt;controlPoints1.size(); i++)&#123;</div><div class="line">    if (i == 0)&#123;</div><div class="line">        mPath1.moveTo(pointFs1.get(i).x,pointFs1.get(i).y);</div><div class="line">    &#125;</div><div class="line">    //画三价贝塞尔曲线</div><div class="line">    mPath1.cubicTo(</div><div class="line">            controlPoints1.get(i).getConPoint1().x,controlPoints1.get(i).getConPoint1().y,</div><div class="line">            controlPoints1.get(i).getConPoint2().x,controlPoints1.get(i).getConPoint2().y,</div><div class="line">            pointFs1.get(i+1).x, pointFs1.get(i+1).y</div><div class="line">    );</div><div class="line">&#125;</div><div class="line">LinearGradient mLinearGradient = new LinearGradient(</div><div class="line">        0,</div><div class="line">        0,</div><div class="line">        0,</div><div class="line">        getMeasuredHeight(),</div><div class="line">        new int[]&#123;</div><div class="line">                0xffffffff,</div><div class="line">                getResources().getColor(R.color.cyan),</div><div class="line">                getResources().getColor(R.color.colorPrimary),</div><div class="line">                getResources().getColor(R.color.colorPrimary),</div><div class="line">                getResources().getColor(R.color.colorPrimary)&#125;,</div><div class="line">        null,</div><div class="line">        Shader.TileMode.CLAMP</div><div class="line">);</div><div class="line">mPaint.setShader(mLinearGradient);</div><div class="line"></div><div class="line">canvas.drawPath(mPath1,mPaint);</div><div class="line">canvas.save();</div></pre></td></tr></table></figure>
<h3 id="颜色渐变"><a href="#颜色渐变" class="headerlink" title="颜色渐变"></a>颜色渐变</h3><p>把画笔paint设置线性渐变LinearGradient，查看该构造方法，可以知道，<br>第一个参数，0，为x中开始渐变<br>第二个参数，0，为y轴开始渐变<br>第三个参数。0，为x轴结束渐变<br>第四个参数，为y轴结束渐变，<br>这里这样设置就是只在y轴上渐变<br>颜色数组：<br>依次是从上到下的渐变颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">LinearGradient mLinearGradient = new LinearGradient(</div><div class="line">        0,</div><div class="line">        0,</div><div class="line">        0,</div><div class="line">        getMeasuredHeight(),</div><div class="line">        new int[]&#123;</div><div class="line">                0xffffffff,</div><div class="line">                getResources().getColor(R.color.cyan),</div><div class="line">                getResources().getColor(R.color.colorPrimary),</div><div class="line">                getResources().getColor(R.color.colorPrimary),</div><div class="line">                getResources().getColor(R.color.colorPrimary)&#125;,</div><div class="line">        null,</div><div class="line">        Shader.TileMode.CLAMP</div><div class="line">);</div><div class="line">mPaint.setShader(mLinearGradient);</div></pre></td></tr></table></figure></p>
<h3 id="绘制坐标和分割线"><a href="#绘制坐标和分割线" class="headerlink" title="绘制坐标和分割线"></a>绘制坐标和分割线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">//画分割线和纵坐标</div><div class="line">Paint linePaint = new Paint();</div><div class="line">linePaint.setColor(0x66cccccc);</div><div class="line">linePaint.setTextSize(40f);</div><div class="line">//画5条分割线</div><div class="line">for (int i=0; i&lt;5; i++)&#123;</div><div class="line">    canvas.drawLine(90, getMeasuredHeight()-((getMeasuredHeight()/6) * i) - 140, getMeasuredWidth(), getMeasuredHeight()-((getMeasuredHeight()/6) * i) - 140,linePaint);</div><div class="line">    canvas.drawText(45*i+&quot;&quot;,10, getMeasuredHeight()-((getMeasuredHeight()/6) * i) - 130,linePaint);</div><div class="line">    canvas.save();</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">//画横坐标</div><div class="line">linePaint.setTextSize(30f);</div><div class="line">for (int i=0; i&lt;12; i++)&#123;</div><div class="line">    canvas.drawText((i+1)+&quot;:00&quot;, (getMeasuredWidth())/13*i + 100, getMeasuredHeight()-((getMeasuredHeight()/5) * 0) - 60, linePaint);</div><div class="line">    canvas.save();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="第二版更新"><a href="#第二版更新" class="headerlink" title="第二版更新"></a>第二版更新</h1><p>可以设置数据，曲线数量</p>
<h2 id="曲线数据封装"><a href="#曲线数据封装" class="headerlink" title="曲线数据封装"></a>曲线数据封装</h2><p>LineDataSet.java<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">public class LineDataSet &#123;</div><div class="line">    private int color;</div><div class="line">    private int[] gradientColors;</div><div class="line">    private List&lt;PointF&gt; oldPointFsList;</div><div class="line"></div><div class="line">    public int getColor() &#123;</div><div class="line">        return color;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setColor(int color) &#123;</div><div class="line">        this.color = color;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int[] getGradientColors() &#123;</div><div class="line">        return gradientColors;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setGradientColors(int[] gradientColors) &#123;</div><div class="line">        this.gradientColors = gradientColors;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public List&lt;PointF&gt; getOldPointFsList() &#123;</div><div class="line">        return oldPointFsList;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setOldPointFsList(List&lt;PointF&gt; oldPointFsList) &#123;</div><div class="line">        this.oldPointFsList = oldPointFsList;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>color: 指定曲线颜色<br>grandientColors: 颜色数组,用来设定渐变效果<br>oldPointFsList: 坐标点的集合</p>
</blockquote>
<h2 id="定义公开方法"><a href="#定义公开方法" class="headerlink" title="定义公开方法"></a>定义公开方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 添加数据</div><div class="line"> * @param lineDataSet 曲线参数集**/</div><div class="line">public void addLineData(LineDataSet lineDataSet)&#123;</div><div class="line">    mLineDataSetList.add(lineDataSet);</div><div class="line">    invalidate();</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void removeLine(LineDataSet lineDataSet)&#123;</div><div class="line">    mLineDataSetList.remove(lineDataSet);</div><div class="line">    invalidate();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>mLineDataSetList: 是曲线参数集合, 用来存储每一条曲线.</p>
</blockquote>
<h2 id="循环绘制曲线"><a href="#循环绘制曲线" class="headerlink" title="循环绘制曲线"></a>循环绘制曲线</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">        //循环绘制曲线------------------------------------------------------------------------</div><div class="line">mBezierPaint.setStyle(Paint.Style.STROKE);</div><div class="line">mBezierPaint.setStrokeWidth(10f);//设置线宽</div><div class="line">mBezierPaint.setAntiAlias(true);//去除锯齿</div><div class="line"></div><div class="line">/**</div><div class="line">* 根据给定参数绘制曲线</div><div class="line">* **/</div><div class="line">for (int position=0; position &lt; mLineDataSetList.size(); position++)&#123;</div><div class="line">	List&lt;PointF&gt; pointFList = changePoint(mLineDataSetList.get(position).getOldPointFsList());</div><div class="line">	List&lt;ControlPoint&gt; controlPoints = ControlPoint.getControlPointList(pointFList);</div><div class="line">	Path linePath = new Path();</div><div class="line">	for (int i =0; i&lt;controlPoints.size(); i++)&#123;</div><div class="line">		if (i == 0)&#123;</div><div class="line">			linePath.moveTo(pointFList.get(i).x,pointFList.get(i).y);</div><div class="line">		&#125;</div><div class="line">		//画三价贝塞尔曲线</div><div class="line">		linePath.cubicTo(</div><div class="line">			controlPoints.get(i).getConPoint1().x,controlPoints.get(i).getConPoint1().y,</div><div class="line">			controlPoints.get(i).getConPoint2().x,controlPoints.get(i).getConPoint2().y,</div><div class="line">			pointFList.get(i+1).x, pointFList.get(i+1).y</div><div class="line">		);</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	//设置颜色和渐变</div><div class="line">	int lineColor = mLineDataSetList.get(position).getColor();</div><div class="line">	mBezierPaint.setColor(lineColor);</div><div class="line">	LinearGradient mLinearGradient = null;</div><div class="line">	if (mLineDataSetList.get(position).getGradientColors() != null)&#123;</div><div class="line">		//设置渐变</div><div class="line">		mLinearGradient = new LinearGradient(</div><div class="line">			0,</div><div class="line">			0,</div><div class="line">			0,</div><div class="line">			getMeasuredHeight(),</div><div class="line">			mLineDataSetList.get(position).getGradientColors(),</div><div class="line">			null,</div><div class="line">			Shader.TileMode.CLAMP</div><div class="line">		);</div><div class="line">	&#125;else &#123;</div><div class="line">		mLinearGradient = new LinearGradient(</div><div class="line">			0,</div><div class="line">			0,</div><div class="line">			0,</div><div class="line">			getMeasuredHeight(),</div><div class="line">			new int[]&#123;lineColor,lineColor,lineColor,lineColor,lineColor&#125;,</div><div class="line">			null,</div><div class="line">			Shader.TileMode.CLAMP);</div><div class="line">	&#125;</div><div class="line">	mBezierPaint.setShader(mLinearGradient);</div><div class="line">	canvas.drawPath(linePath,mBezierPaint);</div><div class="line">	canvas.save();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>首先根据mLineDataSetList.size()数量决定绘制多少条曲线<br>首先, 把原来坐标转换为Android视图坐标<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">List&lt;PointF&gt; pointFList = changePoint(mLineDataSetList.get(position).getOldPointFsList());</div></pre></td></tr></table></figure></p>
<p>更新后的转换方法如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">    /**</div><div class="line">     * 把一般坐标转为 Android中的视图坐标**/</div><div class="line">    private List&lt;PointF&gt; changePoint(List&lt;PointF&gt; oldPointFs)&#123;</div><div class="line">        List&lt;PointF&gt; pointFs = new ArrayList&lt;&gt;();</div><div class="line">        //间隔，减去某个值是为了空出多余空间，为了画线以外，还要写坐标轴的值，除以坐标轴最大值</div><div class="line">        //相当于缩小图像</div><div class="line">        float intervalX = (getMeasuredWidth() - mMarginLeftRight * 2f)/11f;</div><div class="line">        //float intervalY = (getMeasuredHeight() - mMarginTopBottom * 2f)/200f; 原始</div><div class="line">        float intervalY = (getMeasuredHeight() - mMarginTopBottom * 2f)/200f-0.4f;</div><div class="line">        Log.d(TAG, &quot;intervalX = &quot; + intervalX);</div><div class="line">        Log.d(TAG, &quot;intervalY = &quot; + intervalY);</div><div class="line">        int height = getMeasuredHeight();</div><div class="line">        Log.d(TAG, &quot;width = &quot; + getMeasuredWidth());</div><div class="line">        Log.d(TAG, &quot;height = &quot; +getMeasuredHeight());</div><div class="line">        PointF p;</div><div class="line">        float x;</div><div class="line">        float y;</div><div class="line">        for (int i = 0; i&lt; oldPointFs.size(); i++)&#123;</div><div class="line">            PointF pointF = oldPointFs.get(i);</div><div class="line">            //最后的正负值是左移右移</div><div class="line">            x = (pointF.x-1) * intervalX + mMarginLeftRight;</div><div class="line">            //y = height - mMarginTopBottom - intervalY*pointF.y; 原始</div><div class="line">            y = height - mMarginTopBottom - intervalY*pointF.y - 30f;</div><div class="line">            p = new PointF(x, y);</div><div class="line">            pointFs.add(p);</div><div class="line">            Log.d(TAG, &quot;oldX = &quot; + pointF.x + &quot;\toldY = &quot; + pointF.y);</div><div class="line">            Log.d(TAG, &quot;newX = &quot; + x + &quot;\tnewY = &quot; + y);</div><div class="line">        &#125;</div><div class="line">/*        for (PointF pointF: oldPointFs)&#123;</div><div class="line"></div><div class="line">        &#125;*/</div><div class="line">        return pointFs;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>然后根据转换后的坐标算出每一段贝塞尔曲线的控制点,以三阶曲线为例,一段曲线有两个控制点<br>然后绘制贝塞尔曲线路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">for (int i =0; i&lt;controlPoints.size(); i++)&#123;</div><div class="line">	if (i == 0)&#123;</div><div class="line">		linePath.moveTo(pointFList.get(i).x,pointFList.get(i).y);</div><div class="line">	&#125;</div><div class="line">	//画三价贝塞尔曲线</div><div class="line">	linePath.cubicTo(</div><div class="line">		controlPoints.get(i).getConPoint1().x,controlPoints.get(i).getConPoint1().y,</div><div class="line">		controlPoints.get(i).getConPoint2().x,controlPoints.get(i).getConPoint2().y,</div><div class="line">		pointFList.get(i+1).x,</div><div class="line">		pointFList.get(i+1).y</div><div class="line">	);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>cubicT()的方法为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Add a cubic bezier from the last point, approaching control points</div><div class="line"> * (x1,y1) and (x2,y2), and ending at (x3,y3). If no moveTo() call has been</div><div class="line"> * made for this contour, the first point is automatically set to (0,0).</div><div class="line"> *</div><div class="line"> * @param x1 The x-coordinate of the 1st control point on a cubic curve</div><div class="line"> * @param y1 The y-coordinate of the 1st control point on a cubic curve</div><div class="line"> * @param x2 The x-coordinate of the 2nd control point on a cubic curve</div><div class="line"> * @param y2 The y-coordinate of the 2nd control point on a cubic curve</div><div class="line"> * @param x3 The x-coordinate of the end point on a cubic curve</div><div class="line"> * @param y3 The y-coordinate of the end point on a cubic curve</div><div class="line"> */</div><div class="line">public void cubicTo(float x1, float y1, float x2, float y2,</div><div class="line">                    float x3, float y3) &#123;</div><div class="line">    isSimplePath = false;</div><div class="line">    native_cubicTo(mNativePath, x1, y1, x2, y2, x3, y3);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>看参数解析是需要两个控制点,和一个结束点,因为一段曲线有两个点连接.一个起点,一个终点,这里的第三个坐标值就是终点坐标.</p>
<p>接着根据LineDataSet设置曲线的渐变和颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">//设置颜色和渐变</div><div class="line">int lineColor = mLineDataSetList.get(position).getColor();</div><div class="line">mBezierPaint.setColor(lineColor);</div><div class="line">LinearGradient mLinearGradient = null;</div><div class="line">if (mLineDataSetList.get(position).getGradientColors() != null)&#123;</div><div class="line">//设置渐变</div><div class="line">	mLinearGradient = new LinearGradient(</div><div class="line">		0,</div><div class="line">		0,</div><div class="line">		0,</div><div class="line">		getMeasuredHeight(),</div><div class="line">		mLineDataSetList.get(position).getGradientColors(),</div><div class="line">		null,</div><div class="line">		Shader.TileMode.CLAMP</div><div class="line">	);</div><div class="line">&#125;else &#123;</div><div class="line">	mLinearGradient = new LinearGradient(</div><div class="line">		0,</div><div class="line">		0,</div><div class="line">		0,</div><div class="line">		getMeasuredHeight(),</div><div class="line">		new int[]&#123;lineColor,lineColor,lineColor,lineColor,lineColor&#125;,</div><div class="line">		null,</div><div class="line">		Shader.TileMode.CLAMP);</div><div class="line">&#125;</div><div class="line">mBezierPaint.setShader(mLinearGradient);</div></pre></td></tr></table></figure></p>
<p>因为可能不需要设置曲线渐变,所以对数组进行判空处理,有设置渐变的就用设置的,没有设置渐变的就去原来颜色做渐变</p>
<p>最后绘制贝塞尔曲线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">canvas.drawPath(linePath,mBezierPaint);</div><div class="line">canvas.save();</div></pre></td></tr></table></figure></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>在布局中引用控件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;com.allever.bicycle.chartTest.LineChartView</div><div class="line">	android:id=&quot;@+id/id_custom_line_chart_view_activity_line_chart_view&quot;</div><div class="line">	android:layout_width=&quot;450dp&quot;</div><div class="line">	android:layout_height=&quot;250dp&quot;</div><div class="line">	android:layout_alignParentBottom=&quot;true&quot;/&gt;</div></pre></td></tr></table></figure></p>
<p>在代码中设置曲线参数:坐标,颜色,渐变色数组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line">public void initData()&#123;</div><div class="line">    List&lt;PointF&gt; speedPoint = new ArrayList&lt;&gt;();</div><div class="line">    speedPoint.add(new PointF(1, 190));</div><div class="line">    speedPoint.add(new PointF(2, 70));</div><div class="line">    speedPoint.add(new PointF(3, 190));</div><div class="line">    speedPoint.add(new PointF(4, 70));</div><div class="line">    speedPoint.add(new PointF(5, 190));</div><div class="line">    speedPoint.add(new PointF(6, 70));</div><div class="line">    speedPoint.add(new PointF(7, 190));</div><div class="line">    speedPoint.add(new PointF(8, 70));</div><div class="line">    speedPoint.add(new PointF(9, 190));</div><div class="line">    speedPoint.add(new PointF(10, 70));</div><div class="line">    speedPoint.add(new PointF(11, 190));</div><div class="line">    speedPoint.add(new PointF(12, 70));</div><div class="line">    mSpeedLineDataSet = new LineDataSet();</div><div class="line">    mSpeedLineDataSet.setOldPointFsList(speedPoint);</div><div class="line">    mSpeedLineDataSet.setColor(getResources().getColor(R.color.colorPrimary));</div><div class="line">    mSpeedLineDataSet.setGradientColors(new int[]&#123;</div><div class="line">            0xffffffff,</div><div class="line">            getResources().getColor(R.color.cyan),</div><div class="line">            getResources().getColor(R.color.colorPrimary),</div><div class="line">            getResources().getColor(R.color.colorPrimary),</div><div class="line">            getResources().getColor(R.color.colorPrimary)&#125;);</div><div class="line">    mLineChartView.addLineData(mSpeedLineDataSet);</div><div class="line"></div><div class="line"></div><div class="line">    List&lt;PointF&gt; runSpeedPoint = new ArrayList&lt;&gt;();</div><div class="line">    runSpeedPoint.add(new PointF(1, 50));</div><div class="line">    runSpeedPoint.add(new PointF(2, 200));</div><div class="line">    runSpeedPoint.add(new PointF(3, 10));</div><div class="line">    runSpeedPoint.add(new PointF(4, 200));</div><div class="line">    runSpeedPoint.add(new PointF(5, 10));</div><div class="line">    runSpeedPoint.add(new PointF(6, 200));</div><div class="line">    runSpeedPoint.add(new PointF(7, 10));</div><div class="line">    runSpeedPoint.add(new PointF(8, 200));</div><div class="line">    runSpeedPoint.add(new PointF(9, 10));</div><div class="line">    runSpeedPoint.add(new PointF(10, 200));</div><div class="line">    runSpeedPoint.add(new PointF(11, 10));</div><div class="line">    runSpeedPoint.add(new PointF(12, 50));</div><div class="line">    mRunSpeedLineDataSet = new LineDataSet();</div><div class="line">    mRunSpeedLineDataSet.setOldPointFsList(runSpeedPoint);</div><div class="line">    mRunSpeedLineDataSet.setColor(Color.YELLOW);</div><div class="line">    mRunSpeedLineDataSet.setGradientColors(new int[]&#123;</div><div class="line">            0xffffffff,</div><div class="line">            Color.GREEN,</div><div class="line">            Color.YELLOW,</div><div class="line">            Color.YELLOW,</div><div class="line">            Color.YELLOW&#125;);</div><div class="line">    mLineChartView.addLineData(mRunSpeedLineDataSet);</div><div class="line"></div><div class="line"></div><div class="line">    List&lt;PointF&gt; oppositionPoint = new ArrayList&lt;&gt;();</div><div class="line">    oppositionPoint.add(new PointF(1, 100));</div><div class="line">    oppositionPoint.add(new PointF(2, 150));</div><div class="line">    oppositionPoint.add(new PointF(3, 30));</div><div class="line">    oppositionPoint.add(new PointF(4, 60));</div><div class="line">    oppositionPoint.add(new PointF(5, 80));</div><div class="line">    oppositionPoint.add(new PointF(6, 130));</div><div class="line">    oppositionPoint.add(new PointF(7, 200));</div><div class="line">    oppositionPoint.add(new PointF(8, 160));</div><div class="line">    oppositionPoint.add(new PointF(9, 20));</div><div class="line">    oppositionPoint.add(new PointF(10, 85));</div><div class="line">    oppositionPoint.add(new PointF(11, 200));</div><div class="line">    oppositionPoint.add(new PointF(12, 70));</div><div class="line">    mOppositionLineDataSet = new LineDataSet();</div><div class="line">    mOppositionLineDataSet.setOldPointFsList(oppositionPoint);</div><div class="line">    mOppositionLineDataSet.setColor(getResources().getColor(R.color.colorAccent));</div><div class="line">    mLineChartView.addLineData(mOppositionLineDataSet);</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    List&lt;PointF&gt; powerPoint = new ArrayList&lt;&gt;();</div><div class="line">    powerPoint.add(new PointF(1, 100));</div><div class="line">    powerPoint.add(new PointF(2, 140));</div><div class="line">    powerPoint.add(new PointF(3, 100));</div><div class="line">    powerPoint.add(new PointF(4, 140));</div><div class="line">    powerPoint.add(new PointF(5, 100));</div><div class="line">    powerPoint.add(new PointF(6, 140));</div><div class="line">    powerPoint.add(new PointF(7, 100));</div><div class="line">    powerPoint.add(new PointF(8, 140));</div><div class="line">    powerPoint.add(new PointF(9, 100));</div><div class="line">    powerPoint.add(new PointF(10, 140));</div><div class="line">    powerPoint.add(new PointF(11, 100));</div><div class="line">    powerPoint.add(new PointF(12, 140));</div><div class="line">    mPowerLineDataSet = new LineDataSet();</div><div class="line">    mPowerLineDataSet.setOldPointFsList(powerPoint);</div><div class="line">    mPowerLineDataSet.setColor(Color.RED);</div><div class="line">    mPowerLineDataSet.setGradientColors(new int[]&#123;</div><div class="line">            0xffffffff,</div><div class="line">            Color.RED,</div><div class="line">            Color.RED,</div><div class="line">            Color.RED,</div><div class="line">            Color.RED&#125;);</div><div class="line">    mLineChartView.addLineData(mPowerLineDataSet);</div><div class="line"></div><div class="line"></div><div class="line">    List&lt;PointF&gt; heartPoint = new ArrayList&lt;&gt;();</div><div class="line">    heartPoint.add(new PointF(1, 30));</div><div class="line">    heartPoint.add(new PointF(2, 170));</div><div class="line">    heartPoint.add(new PointF(3, 30));</div><div class="line">    heartPoint.add(new PointF(4, 170));</div><div class="line">    heartPoint.add(new PointF(5, 30));</div><div class="line">    heartPoint.add(new PointF(6, 170));</div><div class="line">    heartPoint.add(new PointF(7, 30));</div><div class="line">    heartPoint.add(new PointF(8, 170));</div><div class="line">    heartPoint.add(new PointF(9, 30));</div><div class="line">    heartPoint.add(new PointF(10, 170));</div><div class="line">    heartPoint.add(new PointF(11, 30));</div><div class="line">    heartPoint.add(new PointF(12, 170));</div><div class="line">    mHeartLineDataSet = new LineDataSet();</div><div class="line">    mHeartLineDataSet.setOldPointFsList(heartPoint);</div><div class="line">    mHeartLineDataSet.setColor(Color.BLUE);</div><div class="line">    mHeartLineDataSet.setGradientColors(new int[]&#123;</div><div class="line">            0xffffffff,</div><div class="line">            Color.BLUE,</div><div class="line">            Color.BLUE,</div><div class="line">            Color.BLUE,</div><div class="line">            Color.BLUE&#125;);</div><div class="line">    mLineChartView.addLineData(mHeartLineDataSet);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果图:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/Screenshot_20170810-205520.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h1 id="第三版更新"><a href="#第三版更新" class="headerlink" title="第三版更新"></a>第三版更新</h1><p>可以设置坐标, 触控显示竖线和弹出Y值</p>
<h2 id="绘制不同坐标轴的曲线"><a href="#绘制不同坐标轴的曲线" class="headerlink" title="绘制不同坐标轴的曲线"></a>绘制不同坐标轴的曲线</h2><p>我的思路: 首先就是取消纵坐标的显示(横坐标一样的)，因为在一个界面绘制不同坐标系的图形，纵坐标显示是没意义的。<br>首先需要知道这条曲线一系列坐标中，纵坐标的最大值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">for (int i = 0; i &lt; oldPointFs.size(); i++)&#123;</div><div class="line">	yValue = oldPointFs.get(i).y;</div><div class="line">	if (maxValueY &lt; yValue) </div><div class="line">		maxValueY = yValue+ (yValue*0.1f);//最大值调高一点为了让曲线碰不到最高那条线，总保持一定距离</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>然后根据这个最大值求出间隔<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">float</span> intervalX = (getMeasuredWidth() - mMarginLeftRight * <span class="number">2f</span>)/<span class="number">11f</span>;</div><div class="line"><span class="comment">//float intervalY = (getMeasuredHeight() - mMarginTopBottom * 2f)/200f; 原始</span></div><div class="line"><span class="keyword">float</span> intervalY = (getMeasuredHeight() - mMarginTopBottom * <span class="number">2f</span>)/maxValueY-<span class="number">0f</span>;</div></pre></td></tr></table></figure></p>
<p>这样的曲线不论纵坐标是多少，都不会超出界线了。</p>
<h2 id="绘制触控标线"><a href="#绘制触控标线" class="headerlink" title="绘制触控标线"></a>绘制触控标线</h2><p>实现思路: 重写onTouchEvent方法，获取当手指按下时候事件，记录按下的x坐标值，判断x在哪个区域，然后在相应的区域绘制一条标线。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public boolean onTouchEvent(MotionEvent event) &#123;</div><div class="line">	float downX = event.getX();</div><div class="line">	switch (event.getAction())&#123;</div><div class="line">		case MotionEvent.ACTION_DOWN:</div><div class="line">			mDownX = downX;</div><div class="line">			postInvalidateDelayed(50);</div><div class="line">			//invalidate();</div><div class="line">			break;</div><div class="line">	&#125;</div><div class="line">        return super.onTouchEvent(event);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在onDraw()方法中判断是否有按下的记录，有则绘制标线，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div></pre></td><td class="code"><pre><div class="line">if (mDownX != -1f)&#123;</div><div class="line">    mVerticalPaint.setColor(Color.WHITE);</div><div class="line">    mVerticalPaint.setStrokeWidth(2f);</div><div class="line">    final float intervalX = (mWidth - 2f * mMarginLeftRight) / 11f;//间隔</div><div class="line">    Log.d(TAG, &quot;onDraw: intervalX = &quot; + intervalX);</div><div class="line">    Log.d(TAG, &quot;onDraw: mDownX = &quot; + mDownX);</div><div class="line">    Path trianglePath = new Path();</div><div class="line">    if ((mDownX &gt; (mMarginLeftRight)) &amp;&amp; (mDownX &lt; (mMarginLeftRight + intervalX/2f)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; (mMarginLeftRight + intervalX/2f)) &amp;&amp; (mDownX &lt; ((mMarginLeftRight + intervalX/2f)+intervalX*1)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*1,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*1,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*1, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*1 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*1 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*1)) &amp;&amp; (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*2)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*2,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*2,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*2, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*2 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*2 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*2)) &amp;&amp; (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*3)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*3,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*3,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*3, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*3 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*3 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*3)) &amp;&amp; (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*4)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*4,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*4,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*4, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*4 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*4 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*4)) &amp;&amp;</div><div class="line">            (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*5)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*5,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*5,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*5, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*5 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*5 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*5)) &amp;&amp;</div><div class="line">            (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*6)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*6,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*6,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*6, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*6 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*6 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*6)) &amp;&amp;</div><div class="line">            (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*7)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*7,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*7,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*7, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*7 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*7 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*7)) &amp;&amp;</div><div class="line">            (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*8)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*8,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*8,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*8, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*8 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*8 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*8)) &amp;&amp;</div><div class="line">            (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*9)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*9,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*9,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*9, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*9 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*9 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*9)) &amp;&amp;</div><div class="line">            (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*10)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*10,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*10,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*10, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*10 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*10 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line">    else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*10)) &amp;&amp;</div><div class="line">            (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*11)))&#123;</div><div class="line">        canvas.drawLine(</div><div class="line">                mMarginLeftRight + intervalX*11,</div><div class="line">                mMarginTopBottom,</div><div class="line">                mMarginLeftRight + intervalX*11,</div><div class="line">                mHeight - mMarginTopBottom,</div><div class="line">                mVerticalPaint);</div><div class="line">        trianglePath.moveTo(mMarginLeftRight + intervalX*11, mHeight - mMarginTopBottom - 20f);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*11 - 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.lineTo(mMarginLeftRight + intervalX*11 + 20f, mHeight - mMarginTopBottom);</div><div class="line">        trianglePath.close();</div><div class="line">        canvas.drawPath(trianglePath,mVerticalPaint);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    canvas.save();</div><div class="line">    mDownX = -1f;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>关于区域的划分，例如横坐标起点1:00 到 最后终点12:00,可以分为12个区域，其中第一个区域和地十二个区域只是其他区域的一半，因为12个点可以分为11段。那么其他区域就是以坐标点为中心左右扩展半个区域，组成自己的区域，当按下的x坐标落在某个区域，就在相应区域的中心(原始坐标点的x值)，绘制一条竖线。</p>
<h2 id="绘制标线底下的三角形"><a href="#绘制标线底下的三角形" class="headerlink" title="绘制标线底下的三角形"></a>绘制标线底下的三角形</h2><p>在前面绘制标线的基础上，已经知道了有关的坐标，三角形的中点就是x值，高就向上偏移几个像素，左右两点分别在x值基础上，向左向右偏移几个像素，就绘制出三角形了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">//代码同上</div></pre></td></tr></table></figure></p>
<h2 id="绘制标值"><a href="#绘制标值" class="headerlink" title="绘制标值"></a>绘制标值</h2><p>还记得List<linedataset> mLineDataSetList 保存的数据吗？保存了oldPointF原始坐标，可以根据原始坐标转换成坐标轴相应的坐标newPointF<br>oldPointF用来显示值，<br>newPointF用来确定绘制的位置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div></pre></td><td class="code"><pre><div class="line">//绘制标注-----------------------------------------------------------------------------</div><div class="line">for (int position=0; position &lt; mLineDataSetList.size(); position++)&#123;</div><div class="line">    List&lt;PointF&gt; newPointF = changePoint(mLineDataSetList.get(position).getOldPointFsList(),&quot;&quot;);</div><div class="line">    //绘制标注值及</div><div class="line">    List&lt;PointF&gt; oldPointF = mLineDataSetList.get(position).getOldPointFsList();//显示的数值</div><div class="line">    //绘制标注数值及方框</div><div class="line">    if (mDownX != -1f)&#123;</div><div class="line">        final float intervalX = (mWidth - 2f * mMarginLeftRight) / 11f;</div><div class="line">        if ((mDownX &gt; (mMarginLeftRight)) &amp;&amp;</div><div class="line">                (mDownX &lt; (mMarginLeftRight + intervalX/2f)))&#123;</div><div class="line">            mSelectedPositon = 0;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; (mMarginLeftRight + intervalX/2f)) &amp;&amp;</div><div class="line">                (mDownX &lt; ((mMarginLeftRight + intervalX/2f)+intervalX*1)))&#123;</div><div class="line">            mSelectedPositon = 1;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*1)) &amp;&amp;</div><div class="line">                (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*2)))&#123;</div><div class="line">            mSelectedPositon = 2;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*2)) &amp;&amp;</div><div class="line">                (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*3)))&#123;</div><div class="line">            mSelectedPositon = 3;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*3)) &amp;&amp;</div><div class="line">                (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*4)))&#123;</div><div class="line">            mSelectedPositon = 4;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*4)) &amp;&amp;</div><div class="line">                (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*5)))&#123;</div><div class="line">            mSelectedPositon = 5;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*5)) &amp;&amp;</div><div class="line">                (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*6)))&#123;</div><div class="line">            mSelectedPositon = 6;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*6)) &amp;&amp;</div><div class="line">                (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*7)))&#123;</div><div class="line">            mSelectedPositon = 7;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*7)) &amp;&amp;</div><div class="line">                (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*8)))&#123;</div><div class="line">            mSelectedPositon = 8;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*8)) &amp;&amp;</div><div class="line">                (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*9)))&#123;</div><div class="line">            mSelectedPositon = 9;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*9)) &amp;&amp;</div><div class="line">                (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*10)))&#123;</div><div class="line">            mSelectedPositon = 10;</div><div class="line">        &#125;</div><div class="line">        else if ((mDownX &gt; ((mMarginLeftRight + intervalX/2f)+intervalX*10)) &amp;&amp;</div><div class="line">                (mDownX &lt;((mMarginLeftRight + intervalX/2f)+intervalX*11)))&#123;</div><div class="line">            mSelectedPositon = 11;</div><div class="line">        &#125;</div><div class="line">        if (mSelectedPositon == -1)&#123;</div><div class="line">            continue;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        //设置颜色和渐变</div><div class="line">        int lineColor = mLineDataSetList.get(position).getColor();</div><div class="line">        LinearGradient mLinearGradient = null;</div><div class="line">        if (mLineDataSetList.get(position).getGradientColors() != null)&#123;</div><div class="line">            //设置渐变</div><div class="line">            mLinearGradient = new LinearGradient(</div><div class="line">                    0,</div><div class="line">                    0,</div><div class="line">                    0,</div><div class="line">                    getMeasuredHeight(),</div><div class="line">                    mLineDataSetList.get(position).getGradientColors(),</div><div class="line">                    null,</div><div class="line">                    Shader.TileMode.CLAMP</div><div class="line">            );</div><div class="line">        &#125;else &#123;</div><div class="line">            mLinearGradient = new LinearGradient(</div><div class="line">                    0,</div><div class="line">                    0,</div><div class="line">                    0,</div><div class="line">                    getMeasuredHeight(),</div><div class="line">                    new int[]&#123;lineColor,lineColor,lineColor,lineColor,lineColor&#125;,</div><div class="line">                    null,</div><div class="line">                    Shader.TileMode.CLAMP);</div><div class="line">        &#125;</div><div class="line">        mRectPaint.setShader(mLinearGradient);</div><div class="line"></div><div class="line">        mRectPaint.setColor(lineColor);</div><div class="line">        mRectPaint.setStyle(Paint.Style.FILL);</div><div class="line">        mTextPaint.setColor(Color.WHITE);</div><div class="line">        mTextPaint.setTextSize(DensityUtil.sp2px(mContext,12f));</div><div class="line">        String drawText = oldPointF.get(mSelectedPositon).y + &quot;&quot;;</div><div class="line">        mTextPaint.setAntiAlias(true);//去除锯齿</div><div class="line">        mRectPaint.setAntiAlias(true);//去除锯齿</div><div class="line">        if (position % 2==0)&#123;</div><div class="line">            if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</div><div class="line">                canvas.drawRoundRect(</div><div class="line">                        newPointF.get(mSelectedPositon).x,</div><div class="line">                        newPointF.get(mSelectedPositon).y,</div><div class="line">                        newPointF.get(mSelectedPositon).x + DensityUtil.dip2px(mContext,50),</div><div class="line">                        newPointF.get(mSelectedPositon).y + DensityUtil.dip2px(mContext,30),</div><div class="line">                        DensityUtil.dip2px(mContext,8f),</div><div class="line">                        DensityUtil.dip2px(mContext,8f),</div><div class="line">                        mRectPaint);</div><div class="line">                canvas.drawText(</div><div class="line">                        drawText,</div><div class="line">                        0,</div><div class="line">                        drawText.length(),</div><div class="line">                        newPointF.get(mSelectedPositon).x+DensityUtil.dip2px(mContext,5f),</div><div class="line">                        newPointF.get(mSelectedPositon).y+DensityUtil.dip2px(mContext,20f),</div><div class="line">                        mTextPaint);</div><div class="line">            &#125;else &#123;</div><div class="line">                canvas.drawRect(</div><div class="line">                        newPointF.get(mSelectedPositon).x,</div><div class="line">                        newPointF.get(mSelectedPositon).y,</div><div class="line">                        newPointF.get(mSelectedPositon).x + DensityUtil.dip2px(mContext,50),</div><div class="line">                        newPointF.get(mSelectedPositon).y + DensityUtil.dip2px(mContext,30),</div><div class="line">                        mRectPaint);</div><div class="line">                canvas.drawText(</div><div class="line">                        drawText,</div><div class="line">                        0,</div><div class="line">                        drawText.length(),</div><div class="line">                        newPointF.get(mSelectedPositon).x+DensityUtil.dip2px(mContext,5f),</div><div class="line">                        newPointF.get(mSelectedPositon).y+DensityUtil.dip2px(mContext,20f),</div><div class="line">                        mTextPaint);</div><div class="line">            &#125;</div><div class="line">        &#125;else&#123;</div><div class="line">            if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</div><div class="line">                canvas.drawRoundRect(</div><div class="line">                        newPointF.get(mSelectedPositon).x - DensityUtil.dip2px(mContext,50),</div><div class="line">                        newPointF.get(mSelectedPositon).y - DensityUtil.dip2px(mContext,30),</div><div class="line">                        newPointF.get(mSelectedPositon).x ,</div><div class="line">                        newPointF.get(mSelectedPositon).y ,</div><div class="line">                        DensityUtil.dip2px(mContext,8f),</div><div class="line">                        DensityUtil.dip2px(mContext,8f),</div><div class="line">                        mRectPaint);</div><div class="line">                canvas.drawText(</div><div class="line">                        drawText,</div><div class="line">                        0,</div><div class="line">                        drawText.length(),</div><div class="line">                        newPointF.get(mSelectedPositon).x - DensityUtil.dip2px(mContext,50) + DensityUtil.dip2px(mContext, 5f),</div><div class="line">                        newPointF.get(mSelectedPositon).y - DensityUtil.dip2px(mContext,30) + DensityUtil.dip2px(mContext, 20f),</div><div class="line">                        mTextPaint);</div><div class="line">            &#125;else &#123;</div><div class="line">                canvas.drawRect(</div><div class="line">                        newPointF.get(mSelectedPositon).x - DensityUtil.dip2px(mContext,50),</div><div class="line">                        newPointF.get(mSelectedPositon).y - DensityUtil.dip2px(mContext,30),</div><div class="line">                        newPointF.get(mSelectedPositon).x ,</div><div class="line">                        newPointF.get(mSelectedPositon).y ,</div><div class="line">                        mRectPaint);</div><div class="line">                canvas.drawText(</div><div class="line">                        drawText,</div><div class="line">                        0,</div><div class="line">                        drawText.length(),</div><div class="line">                        newPointF.get(mSelectedPositon).x - DensityUtil.dip2px(mContext,50) + DensityUtil.dip2px(mContext, 5f),</div><div class="line">                        newPointF.get(mSelectedPositon).y - DensityUtil.dip2px(mContext,30) + DensityUtil.dip2px(mContext, 20f),</div><div class="line">                        mTextPaint);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        canvas.save();</div><div class="line">        mSelectedPositon = -1;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></linedataset></p>
<p>左右显示方法，根据position处2取余，0的就在标线右边绘制，1就在标线左边绘制<br>绘制圆角矩形是API21中的方法，如果版本低于21的就绘制一般矩形。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">@TargetApi(Build.VERSION_CODES.LOLLIPOP)</div><div class="line">@Override</div><div class="line">protected void onDraw(Canvas canvas) &#123;</div><div class="line">	if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</div><div class="line">                        canvas.drawRoundRect(</div><div class="line">                                newPointF.get(mSelectedPositon).x,</div><div class="line">                                newPointF.get(mSelectedPositon).y,</div><div class="line">                                newPointF.get(mSelectedPositon).x + DensityUtil.dip2px(mContext,50),</div><div class="line">                                newPointF.get(mSelectedPositon).y + DensityUtil.dip2px(mContext,30),</div><div class="line">                                DensityUtil.dip2px(mContext,8f),</div><div class="line">                                DensityUtil.dip2px(mContext,8f),</div><div class="line">                                mRectPaint);</div><div class="line">                        canvas.drawText(</div><div class="line">                                drawText,</div><div class="line">                                0,</div><div class="line">                                drawText.length(),</div><div class="line">                                newPointF.get(mSelectedPositon).x+DensityUtil.dip2px(mContext,5f),</div><div class="line">                                newPointF.get(mSelectedPositon).y+DensityUtil.dip2px(mContext,20f),</div><div class="line">                                mTextPaint);</div><div class="line">                    &#125;else &#123;</div><div class="line">                        canvas.drawRect(</div><div class="line">                                newPointF.get(mSelectedPositon).x,</div><div class="line">                                newPointF.get(mSelectedPositon).y,</div><div class="line">                                newPointF.get(mSelectedPositon).x + DensityUtil.dip2px(mContext,50),</div><div class="line">                                newPointF.get(mSelectedPositon).y + DensityUtil.dip2px(mContext,30),</div><div class="line">                                mRectPaint);</div><div class="line">                        canvas.drawText(</div><div class="line">                                drawText,</div><div class="line">                                0,</div><div class="line">                                drawText.length(),</div><div class="line">                                newPointF.get(mSelectedPositon).x+DensityUtil.dip2px(mContext,5f),</div><div class="line">                                newPointF.get(mSelectedPositon).y+DensityUtil.dip2px(mContext,20f),</div><div class="line">                                mTextPaint);</div><div class="line">                    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>效果图<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/line-03.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h1 id="第四版更新"><a href="#第四版更新" class="headerlink" title="第四版更新"></a>第四版更新</h1><p>活动显示具体数值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public boolean onTouchEvent(MotionEvent event) &#123;</div><div class="line">	float downX = event.getX();</div><div class="line">	switch (event.getAction())&#123;</div><div class="line">		case MotionEvent.ACTION_DOWN:</div><div class="line">			mDownX = downX;</div><div class="line">			//postInvalidateDelayed(50);</div><div class="line">			Log.d(TAG, &quot;onTouchEvent: ACTION_DOWN mDownX = &quot; + mDownX);</div><div class="line">			//invalidate();</div><div class="line">			break;</div><div class="line">		case MotionEvent.ACTION_MOVE:</div><div class="line">			Log.d(TAG, &quot;onTouchEvent: ACTION_MOVE mDownX = &quot; + mDownX);</div><div class="line">			mDownX = event.getX();</div><div class="line">			invalidate();</div><div class="line">			//postInvalidateDelayed(50);</div><div class="line">			break;</div><div class="line">		case MotionEvent.ACTION_UP:</div><div class="line">			mDownX = event.getX();</div><div class="line">			invalidate();</div><div class="line">			Log.d(TAG, &quot;onTouchEvent: ACTION_UP mDownX = &quot; + mDownX);</div><div class="line">			//postInvalidateDelayed(50);</div><div class="line">			break;</div><div class="line">	&#125;</div><div class="line">	//postInvalidateDelayed(50);</div><div class="line">	return true;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>是ACTION_MOVE的时候就记录坐标值,然后重绘</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;功能概述：&quot;&gt;&lt;a href=&quot;#功能概述：&quot; class=&quot;headerlink&quot; title=&quot;功能概述：&quot;&gt;&lt;/a&gt;功能概述：&lt;/h1&gt;&lt;p&gt;给定一系列坐标，绘制它的贝塞尔曲线，并有渐变效果，如图:&lt;/p&gt;
&lt;p&gt;第一版：&lt;br&gt;&lt;figure class=
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="自定义View" scheme="https://devallever.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89View/"/>
    
  </entry>
  
  <entry>
    <title>Android  选择器</title>
    <link href="https://devallever.github.io/2017/07/30/selected-demo/"/>
    <id>https://devallever.github.io/2017/07/30/selected-demo/</id>
    <published>2017-07-30T06:13:16.000Z</published>
    <updated>2017-07-30T15:23:26.127Z</updated>
    
    <content type="html"><![CDATA[<h1 id="功能概述："><a href="#功能概述：" class="headerlink" title="功能概述："></a>功能概述：</h1><p>选中状态：选中时候变为蓝色，并有个减号，里面也是蓝色，<br>未选中状态：未选中时候为空白，并有个加号，<br>点中选中的状态变为未选中状态，点击未选中状态变为选中状态，当仅剩下一个选中时候，减号消失，表示不允许改变当前状态，即最少有一个选中状态</p>
<p>效果图1：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/selected-item-01.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>效果图2：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/selected-item-02.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h1 id="实现思路："><a href="#实现思路：" class="headerlink" title="实现思路："></a>实现思路：</h1><p>UI：因为背景是透明的，所以使用shape逐个绘图，然后把这些绘图用layer组合起来。<br>逻辑：可以有两中方式<br>1.每一项是一个布局，然后在这个布局添加内容，对这个布局使用单击监听。<br>2.使用列表RecyclerView。</p>
<h1 id="详细实现"><a href="#详细实现" class="headerlink" title="详细实现"></a>详细实现</h1><h2 id="画UI图"><a href="#画UI图" class="headerlink" title="画UI图"></a>画UI图</h2><h3 id="绘制蓝色背景："><a href="#绘制蓝色背景：" class="headerlink" title="绘制蓝色背景："></a>绘制蓝色背景：</h3><p>target_item_one_selected.xml<br>这个很简单，就是画个矩形，使用圆角和填充颜色<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/bg_blue.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:shape=&quot;rectangle&quot;&gt;</div><div class="line">    &lt;solid</div><div class="line">        android:color=&quot;@color/deep_blue&quot; /&gt;</div><div class="line">    &lt;corners</div><div class="line">        android:radius=&quot;10dp&quot;/&gt;</div><div class="line">&lt;/shape&gt;</div></pre></td></tr></table></figure></p>
<h3 id="绘制白色边框："><a href="#绘制白色边框：" class="headerlink" title="绘制白色边框："></a>绘制白色边框：</h3><p>target_item_none_selected_framework.xml<br>这个跟上面差不多，不适用填充，设置边框颜色和圆角即可<br>效果图：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/bg_framework.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:shape=&quot;rectangle&quot;&gt;</div><div class="line"></div><div class="line">    &lt;stroke</div><div class="line">        android:width=&quot;1dp&quot;</div><div class="line">        android:color=&quot;@color/white&quot;/&gt;</div><div class="line">    &lt;corners</div><div class="line">        android:radius=&quot;10dp&quot;/&gt;</div><div class="line">&lt;/shape&gt;</div></pre></td></tr></table></figure></p>
<h3 id="绘制减号"><a href="#绘制减号" class="headerlink" title="绘制减号"></a>绘制减号</h3><p>首先绘制一个圆形：target_item_selected_circle_delete.xml<br>画一个圆形，填充蓝色，边框白色<br>效果图:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/delete_circle.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:shape=&quot;oval&quot;&gt;</div><div class="line">    &lt;solid</div><div class="line">        android:color=&quot;@color/deep_blue&quot;/&gt;</div><div class="line">    &lt;stroke</div><div class="line">        android:width=&quot;1dp&quot;</div><div class="line">        android:color=&quot;@color/white&quot;/&gt;</div><div class="line">    &lt;size</div><div class="line">        android:width=&quot;20dp&quot;</div><div class="line">        android:height=&quot;20dp&quot;/&gt;</div><div class="line">&lt;/shape&gt;</div></pre></td></tr></table></figure></p>
<p>绘制减号的横线：target_item_selected_line.xml<br>效果图：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/h_line.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:shape=&quot;line&quot;</div><div class="line">    android:gravity=&quot;bottom|right&quot;&gt;</div><div class="line">        &lt;stroke android:width=&quot;1dp&quot;</div><div class="line">            android:color=&quot;@color/white&quot; /&gt;</div><div class="line">        &lt;size</div><div class="line">            android:width=&quot;10dp&quot;</div><div class="line">            android:height=&quot;20dp&quot; /&gt;</div><div class="line">        &lt;padding</div><div class="line">            android:left=&quot;10dp&quot;</div><div class="line">            android:right=&quot;10dp&quot;/&gt;</div><div class="line">&lt;/shape&gt;</div></pre></td></tr></table></figure></p>
<p>绘制减号：target_item_delete.xml<br>使用layer把上面两个shape组合起来<br>效果图：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/delete.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line">    &lt;item</div><div class="line">        android:drawable=&quot;@drawable/target_item_selected_circle_delete&quot;</div><div class="line">        android:gravity=&quot;bottom|right&quot;&gt;</div><div class="line">    &lt;/item&gt;</div><div class="line">    &lt;item</div><div class="line">        android:gravity=&quot;bottom|right&quot;</div><div class="line">        android:drawable=&quot;@drawable/target_item_selected_line&quot;</div><div class="line">        android:right=&quot;5dp&quot;&gt;</div><div class="line">    &lt;/item&gt;</div><div class="line">&lt;/layer-list&gt;</div></pre></td></tr></table></figure></p>
<h3 id="绘制加号"><a href="#绘制加号" class="headerlink" title="绘制加号"></a>绘制加号</h3><p>首先绘制一个圆:target_item_none_selected_circle.xml<br>填充白色，边框白色<br>效果图：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/add_circle.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:shape=&quot;oval&quot;&gt;</div><div class="line">    &lt;solid</div><div class="line">        android:color=&quot;@color/black&quot;/&gt;</div><div class="line">    &lt;stroke</div><div class="line">        android:width=&quot;1dp&quot;</div><div class="line">        android:color=&quot;@color/white&quot;/&gt;</div><div class="line">    &lt;size</div><div class="line">        android:width=&quot;20dp&quot;</div><div class="line">        android:height=&quot;20dp&quot;/&gt;</div><div class="line">&lt;/shape&gt;</div></pre></td></tr></table></figure></p>
<p>绘制加号的横线，跟上面的横线相同的</p>
<p>绘制加号的竖线：target_item_none_selected_vertical_line.xml<br>就是把横线旋转90度即形成竖直的线<br>效果图：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/v_line.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;rotate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:fromDegrees=&quot;90&quot;</div><div class="line">    android:toDegrees=&quot;90&quot;&gt;</div><div class="line"></div><div class="line">    &lt;shape</div><div class="line">        android:shape=&quot;line&quot;&gt;</div><div class="line">        &lt;stroke</div><div class="line">            android:width=&quot;1dp&quot;</div><div class="line">            android:color=&quot;@color/white&quot;/&gt;</div><div class="line">        &lt;size</div><div class="line">            android:width=&quot;10dp&quot;</div><div class="line">            android:height=&quot;10dp&quot;/&gt;</div><div class="line">    &lt;/shape&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;/rotate&gt;</div></pre></td></tr></table></figure></p>
<p>最后把以上三个shape组合起来就成了一个加号：target_item_add.xml<br>效果图：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://github.com/devallever/DataProject/blob/master/data/bicycle/add.png?raw=true" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line">    &lt;item</div><div class="line">        android:drawable=&quot;@drawable/target_item_none_selected_circle&quot;</div><div class="line">        android:gravity=&quot;bottom|right&quot;&gt;</div><div class="line">    &lt;/item&gt;</div><div class="line">    &lt;item</div><div class="line">        android:drawable=&quot;@drawable/target_item_none_selected_vertical_line&quot;</div><div class="line">        android:gravity=&quot;bottom|right&quot;</div><div class="line">        android:right=&quot;5dp&quot;</div><div class="line">        android:bottom=&quot;5dp&quot;&gt;</div><div class="line">    &lt;/item&gt;</div><div class="line">    &lt;item</div><div class="line">        android:gravity=&quot;bottom|right&quot;</div><div class="line">        android:drawable=&quot;@drawable/target_item_none_selected_line&quot;</div><div class="line">        android:right=&quot;5dp&quot;&gt;</div><div class="line">    &lt;/item&gt;</div><div class="line">&lt;/layer-list&gt;</div></pre></td></tr></table></figure></p>
<h3 id="UI组合"><a href="#UI组合" class="headerlink" title="UI组合"></a>UI组合</h3><p>我觉得这里的难点就是右下角的加减好在边框上向右下方移动那么一点点，这里及解决方法就是，用一个总体父布局，里面包含两部分，第一部分是中心框部分，把这部分设置居中，并且在四周留有空间，第二部分是加减号，设置在父布局的右下方，这样看起来就是个效果了。当然还有其他方法，例如找图片，这种图片应该很难找得到，或者是知己制作这种图片，设置给父布局就好了。</p>
<h1 id="逻辑实现"><a href="#逻辑实现" class="headerlink" title="逻辑实现"></a>逻辑实现</h1><p>这里有两种方式：<br>第一种就是每一项就是一个布局，总共有八个布局<br>第二种就是使用列表RecyclerView</p>
<h2 id="布局实现方式"><a href="#布局实现方式" class="headerlink" title="布局实现方式"></a>布局实现方式</h2><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>在布局文件中放这八个布局<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:background=&quot;@mipmap/bg1&quot;</div><div class="line">    android:gravity=&quot;right&quot;&gt;</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:id=&quot;@+id/id_target_ll_first_line&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;0dp&quot;</div><div class="line">        android:layout_weight=&quot;1&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot;</div><div class="line">        android:layout_alignParentRight=&quot;true&quot;</div><div class="line">        android:layout_marginTop=&quot;10dp&quot;&gt;</div><div class="line"></div><div class="line">        &lt;RelativeLayout</div><div class="line">            android:layout_width=&quot;110dp&quot;</div><div class="line">            android:layout_height=&quot;110dp&quot;</div><div class="line">            android:padding=&quot;10dp&quot;&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_container_speed&quot;</div><div class="line">                android:layout_width=&quot;80dp&quot;</div><div class="line">                android:layout_height=&quot;80dp&quot;</div><div class="line">                android:layout_centerInParent=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_one_selected&quot;&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;速度&quot;</div><div class="line">                    android:layout_centerHorizontal=&quot;true&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginTop=&quot;10dp&quot;/&gt;</div><div class="line">                &lt;TextView</div><div class="line">                    android:id=&quot;@+id/id_target_item_tv_speed&quot;</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;6&quot;</div><div class="line">                    android:textSize=&quot;30sp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_centerHorizontal=&quot;true&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;10dp&quot;/&gt;</div><div class="line"></div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_rl_speed_option&quot;</div><div class="line">                android:layout_width=&quot;wrap_content&quot;</div><div class="line">                android:layout_height=&quot;wrap_content&quot;</div><div class="line">                android:layout_alignParentRight=&quot;true&quot;</div><div class="line">                android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_one_selected&quot;&gt;</div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">        &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">        &lt;RelativeLayout</div><div class="line">            android:layout_width=&quot;110dp&quot;</div><div class="line">            android:layout_height=&quot;110dp&quot;</div><div class="line">            android:padding=&quot;10dp&quot;&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_container_distance&quot;</div><div class="line">                android:layout_width=&quot;80dp&quot;</div><div class="line">                android:layout_height=&quot;80dp&quot;</div><div class="line">                android:layout_centerInParent=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_none_selected_framework&quot;&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;距离&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginTop=&quot;10dp&quot;/&gt;</div><div class="line">                &lt;TextView</div><div class="line">                    android:id=&quot;@+id/id_target_item_tv_distance&quot;</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;0.7&quot;</div><div class="line">                    android:textSize=&quot;30sp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;10dp&quot;/&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;km&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;15dp&quot;</div><div class="line">                    android:layout_marginLeft=&quot;2dp&quot;</div><div class="line">                    android:layout_toRightOf=&quot;@id/id_target_item_tv_distance&quot; /&gt;</div><div class="line"></div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_rl_distance_option&quot;</div><div class="line">                android:layout_width=&quot;wrap_content&quot;</div><div class="line">                android:layout_height=&quot;wrap_content&quot;</div><div class="line">                android:layout_alignParentRight=&quot;true&quot;</div><div class="line">                android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_add&quot;&gt;</div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">        &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">        &lt;RelativeLayout</div><div class="line">            android:layout_width=&quot;110dp&quot;</div><div class="line">            android:layout_height=&quot;110dp&quot;</div><div class="line">            android:padding=&quot;10dp&quot;</div><div class="line">            android:layout_alignParentRight=&quot;true&quot;&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_container_power&quot;</div><div class="line">                android:layout_width=&quot;80dp&quot;</div><div class="line">                android:layout_height=&quot;80dp&quot;</div><div class="line">                android:layout_centerInParent=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_none_selected_framework&quot;&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;功率&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginTop=&quot;10dp&quot;/&gt;</div><div class="line">                &lt;TextView</div><div class="line">                    android:id=&quot;@+id/id_target_item_tv_power&quot;</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;74&quot;</div><div class="line">                    android:textSize=&quot;30sp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;10dp&quot;/&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;w&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;15dp&quot;</div><div class="line">                    android:layout_marginLeft=&quot;2dp&quot;</div><div class="line">                    android:layout_toRightOf=&quot;@id/id_target_item_tv_power&quot; /&gt;</div><div class="line"></div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_rl_power_option&quot;</div><div class="line">                android:layout_width=&quot;wrap_content&quot;</div><div class="line">                android:layout_height=&quot;wrap_content&quot;</div><div class="line">                android:layout_alignParentRight=&quot;true&quot;</div><div class="line">                android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_add&quot;&gt;</div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">        &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line"></div><div class="line">    &lt;!-- The Second line--&gt;</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:id=&quot;@+id/id_target_ll_second_line&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;0dp&quot;</div><div class="line">        android:layout_weight=&quot;1&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot;</div><div class="line">        android:layout_alignParentRight=&quot;true&quot;</div><div class="line">        android:layout_below=&quot;@id/id_target_ll_first_line&quot;&gt;</div><div class="line"></div><div class="line">        &lt;RelativeLayout</div><div class="line">            android:layout_width=&quot;110dp&quot;</div><div class="line">            android:layout_height=&quot;110dp&quot;</div><div class="line">            android:padding=&quot;10dp&quot;</div><div class="line">            android:layout_alignParentRight=&quot;true&quot;&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_container_slope_degree&quot;</div><div class="line">                android:layout_width=&quot;80dp&quot;</div><div class="line">                android:layout_height=&quot;80dp&quot;</div><div class="line">                android:layout_centerInParent=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_none_selected_framework&quot;&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;坡度&quot;</div><div class="line">                    android:layout_centerHorizontal=&quot;true&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginTop=&quot;10dp&quot;/&gt;</div><div class="line">                &lt;!-- slope degree 坡度--&gt;</div><div class="line">                &lt;TextView</div><div class="line">                    android:id=&quot;@+id/id_target_item_tv_slope_degree&quot;</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;5&quot;</div><div class="line">                    android:textSize=&quot;30sp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_centerHorizontal=&quot;true&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;10dp&quot;/&gt;</div><div class="line"></div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_rl_slope_degree_option&quot;</div><div class="line">                android:layout_width=&quot;wrap_content&quot;</div><div class="line">                android:layout_height=&quot;wrap_content&quot;</div><div class="line">                android:layout_alignParentRight=&quot;true&quot;</div><div class="line">                android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_add&quot;&gt;</div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">        &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">        &lt;RelativeLayout</div><div class="line">            android:layout_width=&quot;110dp&quot;</div><div class="line">            android:layout_height=&quot;110dp&quot;</div><div class="line">            android:padding=&quot;10dp&quot;&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_container_patch_speed&quot;</div><div class="line">                android:layout_width=&quot;80dp&quot;</div><div class="line">                android:layout_height=&quot;80dp&quot;</div><div class="line">                android:layout_centerInParent=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_none_selected_framework&quot;&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;配速&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginTop=&quot;10dp&quot;/&gt;</div><div class="line">                &lt;TextView</div><div class="line">                    android:id=&quot;@+id/id_target_item_tv_patch_speed&quot;</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;00:30&quot;</div><div class="line">                    android:textSize=&quot;25sp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;15dp&quot;/&gt;</div><div class="line"></div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_rl_patch_speed_option&quot;</div><div class="line">                android:layout_width=&quot;wrap_content&quot;</div><div class="line">                android:layout_height=&quot;wrap_content&quot;</div><div class="line">                android:layout_alignParentRight=&quot;true&quot;</div><div class="line">                android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_add&quot;&gt;</div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">        &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">        &lt;RelativeLayout</div><div class="line">            android:layout_width=&quot;110dp&quot;</div><div class="line">            android:layout_height=&quot;110dp&quot;</div><div class="line">            android:padding=&quot;10dp&quot;</div><div class="line">            android:layout_alignParentRight=&quot;true&quot;&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_container_calorie&quot;</div><div class="line">                android:layout_width=&quot;80dp&quot;</div><div class="line">                android:layout_height=&quot;80dp&quot;</div><div class="line">                android:layout_centerInParent=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_none_selected_framework&quot;&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;卡路里&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginTop=&quot;10dp&quot;/&gt;</div><div class="line">                &lt;TextView</div><div class="line">                    android:id=&quot;@+id/id_target_item_tv_calorie&quot;</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;119&quot;</div><div class="line">                    android:textSize=&quot;25sp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;15dp&quot;/&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;kcal&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;20dp&quot;</div><div class="line">                    android:layout_marginLeft=&quot;2dp&quot;</div><div class="line">                    android:layout_toRightOf=&quot;@id/id_target_item_tv_calorie&quot; /&gt;</div><div class="line"></div><div class="line"></div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_rl_calorie_option&quot;</div><div class="line">                android:layout_width=&quot;wrap_content&quot;</div><div class="line">                android:layout_height=&quot;wrap_content&quot;</div><div class="line">                android:layout_alignParentRight=&quot;true&quot;</div><div class="line">                android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_add&quot;&gt;</div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">        &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line"></div><div class="line">    &lt;!-- The Third line --&gt;</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:id=&quot;@+id/id_target_ll_third_line&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;0dp&quot;</div><div class="line">        android:layout_weight=&quot;1&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot;</div><div class="line">        android:layout_alignParentRight=&quot;true&quot;</div><div class="line">        android:layout_below=&quot;@id/id_target_ll_second_line&quot;&gt;</div><div class="line"></div><div class="line">        &lt;RelativeLayout</div><div class="line">            android:layout_width=&quot;110dp&quot;</div><div class="line">            android:layout_height=&quot;110dp&quot;</div><div class="line">            android:padding=&quot;10dp&quot;</div><div class="line">            android:layout_alignParentRight=&quot;true&quot;&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_container_time&quot;</div><div class="line">                android:layout_width=&quot;80dp&quot;</div><div class="line">                android:layout_height=&quot;80dp&quot;</div><div class="line">                android:layout_centerInParent=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_none_selected_framework&quot;&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;时间&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginTop=&quot;10dp&quot;/&gt;</div><div class="line">                &lt;TextView</div><div class="line">                    android:id=&quot;@+id/id_target_item_tv_time&quot;</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;02:30&quot;</div><div class="line">                    android:textSize=&quot;25sp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;15dp&quot;/&gt;</div><div class="line"></div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_rl_time_option&quot;</div><div class="line">                android:layout_width=&quot;wrap_content&quot;</div><div class="line">                android:layout_height=&quot;wrap_content&quot;</div><div class="line">                android:layout_alignParentRight=&quot;true&quot;</div><div class="line">                android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_add&quot;&gt;</div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">        &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">        &lt;RelativeLayout</div><div class="line">            android:layout_width=&quot;110dp&quot;</div><div class="line">            android:layout_height=&quot;110dp&quot;</div><div class="line">            android:padding=&quot;10dp&quot;&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_container_bmp&quot;</div><div class="line">                android:layout_width=&quot;80dp&quot;</div><div class="line">                android:layout_height=&quot;80dp&quot;</div><div class="line">                android:layout_centerInParent=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_none_selected_framework&quot;&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;心率&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginTop=&quot;10dp&quot;/&gt;</div><div class="line">                &lt;TextView</div><div class="line">                    android:id=&quot;@+id/id_target_item_tv_bmp&quot;</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;68&quot;</div><div class="line">                    android:textSize=&quot;30sp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;10dp&quot;/&gt;</div><div class="line"></div><div class="line">                &lt;TextView</div><div class="line">                    android:layout_width=&quot;wrap_content&quot;</div><div class="line">                    android:layout_height=&quot;wrap_content&quot;</div><div class="line">                    android:text=&quot;bmp&quot;</div><div class="line">                    android:textColor=&quot;@color/white&quot;</div><div class="line">                    android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                    android:layout_marginBottom=&quot;15dp&quot;</div><div class="line">                    android:layout_marginLeft=&quot;2dp&quot;</div><div class="line">                    android:layout_toRightOf=&quot;@id/id_target_item_tv_bmp&quot; /&gt;</div><div class="line"></div><div class="line"></div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">            &lt;RelativeLayout</div><div class="line">                android:id=&quot;@+id/id_target_item_rl_bmp_option&quot;</div><div class="line">                android:layout_width=&quot;wrap_content&quot;</div><div class="line">                android:layout_height=&quot;wrap_content&quot;</div><div class="line">                android:layout_alignParentRight=&quot;true&quot;</div><div class="line">                android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">                android:background=&quot;@drawable/target_item_add&quot;&gt;</div><div class="line">            &lt;/RelativeLayout&gt;</div><div class="line">        &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">        &lt;RelativeLayout</div><div class="line">            android:layout_width=&quot;110dp&quot;</div><div class="line">            android:layout_height=&quot;110dp&quot;</div><div class="line">            android:padding=&quot;10dp&quot;</div><div class="line">            android:layout_alignParentRight=&quot;true&quot;&gt;</div><div class="line">        &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure></p>
<p>文件有一点长，并且很多都是重复的，所以我推荐使用这种方式，但是我第一次想到就是这种方式，所以试试看，因为使用列表的话，其他方面会很复杂，因为每个项其实是有些不同的。</p>
<h3 id="本地数据库"><a href="#本地数据库" class="headerlink" title="本地数据库"></a>本地数据库</h3><p>TargetItem表<br>name：每一项的名称，根据这个名称进行更新状态操作<br>valeu：数值<br>flag_selected：选中状态 0 和 1<br>index：索引，列表方式使用到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">package com.allever.bicycle.bean;</div><div class="line"></div><div class="line">import org.litepal.crud.DataSupport;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by allever on 17-7-26.</div><div class="line"> */</div><div class="line"></div><div class="line">public class TargetItem extends DataSupport&#123;</div><div class="line">    private int id;</div><div class="line">    private String name;</div><div class="line">    private String value;</div><div class="line">    private int flag_selected;</div><div class="line">    private int index;</div><div class="line"></div><div class="line">    public int getId() &#123;</div><div class="line">        return id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setId(int id) &#123;</div><div class="line">        this.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getName() &#123;</div><div class="line">        return name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setName(String name) &#123;</div><div class="line">        this.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getValue() &#123;</div><div class="line">        return value;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setValue(String value) &#123;</div><div class="line">        this.value = value;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int getFlag_selected() &#123;</div><div class="line">        return flag_selected;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setFlag_selected(int flag_selected) &#123;</div><div class="line">        this.flag_selected = flag_selected;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int getIndex() &#123;</div><div class="line">        return index;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setIndex(int index) &#123;</div><div class="line">        this.index = index;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="交互逻辑"><a href="#交互逻辑" class="headerlink" title="交互逻辑"></a>交互逻辑</h3><p>首次启动创建数据库表和初始化数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">final List&lt;TargetItem&gt; targetItems = DataSupport.findAll(TargetItem.class);</div><div class="line">if (targetItems.size()==0)&#123;</div><div class="line">	initData();</div><div class="line">	//Toast.makeText(this,&quot;initData&quot;,Toast.LENGTH_LONG).show();</div><div class="line">&#125;</div><div class="line">showData();</div></pre></td></tr></table></figure></p>
<p>initData()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 初始化数据</div><div class="line"> * */</div><div class="line">private void initData()&#123;</div><div class="line">    DataSupport.deleteAll(TargetItem.class);</div><div class="line"></div><div class="line">    TargetItem targetSpeed = new TargetItem();</div><div class="line">    targetSpeed.setName(&quot;speed&quot;);</div><div class="line">    targetSpeed.setValue(&quot;6&quot;);</div><div class="line">    targetSpeed.setFlag_selected(1);</div><div class="line">    targetSpeed.save();</div><div class="line"></div><div class="line">    TargetItem targetDistance = new TargetItem();</div><div class="line">    targetDistance.setName(&quot;distance&quot;);</div><div class="line">    targetDistance.setValue(&quot;0.7&quot;);</div><div class="line">    targetDistance.setFlag_selected(0);</div><div class="line">    targetDistance.save();</div><div class="line"></div><div class="line">    TargetItem targetPower = new TargetItem();</div><div class="line">    targetPower.setName(&quot;power&quot;);</div><div class="line">    targetPower.setValue(&quot;74&quot;);</div><div class="line">    targetPower.setFlag_selected(0);</div><div class="line">    targetPower.save();</div><div class="line"></div><div class="line"></div><div class="line">    TargetItem targetSlopeDegree = new TargetItem();</div><div class="line">    targetSlopeDegree.setName(&quot;slope_degree&quot;);</div><div class="line">    targetSlopeDegree.setValue(&quot;5&quot;);</div><div class="line">    targetSlopeDegree.setFlag_selected(0);</div><div class="line">    targetSlopeDegree.save();</div><div class="line"></div><div class="line"></div><div class="line">    TargetItem targetPatchSpeed = new TargetItem();</div><div class="line">    targetPatchSpeed.setName(&quot;patch_speed&quot;);</div><div class="line">    targetPatchSpeed.setValue(&quot;00:29&quot;);</div><div class="line">    targetPatchSpeed.setFlag_selected(0);</div><div class="line">    targetPatchSpeed.save();</div><div class="line"></div><div class="line"></div><div class="line">    TargetItem targetCalorie = new TargetItem();</div><div class="line">    targetCalorie.setName(&quot;calorie&quot;);</div><div class="line">    targetCalorie.setValue(&quot;119&quot;);</div><div class="line">    targetCalorie.setFlag_selected(0);</div><div class="line">    targetCalorie.save();</div><div class="line"></div><div class="line">    TargetItem targetTime = new TargetItem();</div><div class="line">    targetTime.setName(&quot;time&quot;);</div><div class="line">    targetTime.setValue(&quot;02:30&quot;);</div><div class="line">    targetTime.setFlag_selected(0);</div><div class="line">    targetTime.save();</div><div class="line"></div><div class="line">    TargetItem targetBmp = new TargetItem();</div><div class="line">    targetBmp.setName(&quot;bmp&quot;);</div><div class="line">    targetBmp.setValue(&quot;74&quot;);</div><div class="line">    targetBmp.setFlag_selected(0);</div><div class="line">    targetBmp.save();</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>showData()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">private void showData()&#123;</div><div class="line">    TargetItem targetSpeed = DataSupport.where(&quot;name=?&quot;, &quot;speed&quot;).find(TargetItem.class).get(0);</div><div class="line">    tv_speed.setText(targetSpeed.getValue());</div><div class="line">    refreshTargetItem(&quot;speed&quot;,false);</div><div class="line"></div><div class="line">    TargetItem targetDistance = DataSupport.where(&quot;name=?&quot;, &quot;distance&quot;).find(TargetItem.class).get(0);</div><div class="line">    tv_distance.setText(targetDistance.getValue());</div><div class="line">    refreshTargetItem(&quot;distance&quot;,false);</div><div class="line"></div><div class="line">    TargetItem targetPower = DataSupport.where(&quot;name=?&quot;, &quot;power&quot;).find(TargetItem.class).get(0);</div><div class="line">    tv_power.setText(targetPower.getValue());</div><div class="line">    refreshTargetItem(&quot;power&quot;,false);</div><div class="line"></div><div class="line">    TargetItem targetSlopeDegree = DataSupport.where(&quot;name=?&quot;, &quot;slope_degree&quot;).find(TargetItem.class).get(0);</div><div class="line">    tv_slope_degree.setText(targetSlopeDegree.getValue());</div><div class="line">    refreshTargetItem(&quot;slope_degree&quot;,false);</div><div class="line"></div><div class="line">    TargetItem targetPatchSpeed = DataSupport.where(&quot;name=?&quot;, &quot;patch_speed&quot;).find(TargetItem.class).get(0);</div><div class="line">    tv_patch_speed.setText(targetPatchSpeed.getValue());</div><div class="line">    refreshTargetItem(&quot;patch_speed&quot;,false);</div><div class="line"></div><div class="line">    TargetItem targetCalorie = DataSupport.where(&quot;name=?&quot;, &quot;calorie&quot;).find(TargetItem.class).get(0);</div><div class="line">    tv_calorie.setText(targetCalorie.getValue());</div><div class="line">    refreshTargetItem(&quot;calorie&quot;,false);</div><div class="line"></div><div class="line"></div><div class="line">    TargetItem targetTime = DataSupport.where(&quot;name=?&quot;, &quot;time&quot;).find(TargetItem.class).get(0);</div><div class="line">    tv_time.setText(targetTime.getValue());</div><div class="line">    refreshTargetItem(&quot;time&quot;,false);</div><div class="line"></div><div class="line">    TargetItem targetBmp = DataSupport.where(&quot;name=?&quot;, &quot;bmp&quot;).find(TargetItem.class).get(0);</div><div class="line">    tv_bmp.setText(targetBmp.getValue());</div><div class="line">    refreshTargetItem(&quot;bmp&quot;,false);</div><div class="line"></div><div class="line">    List&lt;TargetItem&gt; targetItems = DataSupport.where(&quot;flag_selected=?&quot;, &quot;1&quot;).find(TargetItem.class);</div><div class="line">    if (targetItems.size()==1)&#123;</div><div class="line">        refreshTargetItem(targetItems.get(0).getName(),true);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>默认状态选中是，蓝色背景+减号组成，<br>未选中是白色边框背景+加号组成，考虑到只用一种选中状态时，把减号去掉<br>因此，要判断选中状态的个数，如果是一个，则刷新这个显示方式。即<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">List&lt;TargetItem&gt; targetItems = DataSupport.where(&quot;flag_selected=?&quot;, &quot;1&quot;).find(TargetItem.class);</div><div class="line">if (targetItems.size()==1)&#123;</div><div class="line">	refreshTargetItem(targetItems.get(0).getName(),true);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>刷新界面：refreshTargetItem(String name, boolean isOneSelected)<br>isOneSelected：只有一种选中状态标记</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line">private void refreshTargetItem(String name, boolean isOneSelected)&#123;</div><div class="line">    TargetItem target = DataSupport.where(&quot;name=?&quot;, name).find(TargetItem.class).get(0);</div><div class="line">    switch (name)&#123;</div><div class="line">        case &quot;speed&quot;:</div><div class="line">            if (target.getFlag_selected()==1)&#123;</div><div class="line">                rl_container_speed.setBackgroundResource(R.drawable.target_item_one_selected);</div><div class="line">                rl_speed_option.setBackgroundResource(R.drawable.target_item_delete);</div><div class="line">                if (isOneSelected) rl_speed_option.setVisibility(View.INVISIBLE);</div><div class="line">                else rl_speed_option.setVisibility(View.VISIBLE);</div><div class="line">            &#125;else &#123;</div><div class="line">                rl_container_speed.setBackgroundResource(R.drawable.target_item_none_selected_framework);</div><div class="line">                rl_speed_option.setBackgroundResource(R.drawable.target_item_add);</div><div class="line">            &#125;</div><div class="line">            break;</div><div class="line"></div><div class="line">        case &quot;distance&quot;:</div><div class="line">            if (target.getFlag_selected()==1)&#123;</div><div class="line">                rl_container_distance.setBackgroundResource(R.drawable.target_item_one_selected);</div><div class="line">                rl_distance_option.setBackgroundResource(R.drawable.target_item_delete);</div><div class="line">                if (isOneSelected) rl_distance_option.setVisibility(View.INVISIBLE);</div><div class="line">                else rl_distance_option.setVisibility(View.VISIBLE);</div><div class="line">            &#125;else &#123;</div><div class="line">                rl_container_distance.setBackgroundResource(R.drawable.target_item_none_selected_framework);</div><div class="line">                rl_distance_option.setBackgroundResource(R.drawable.target_item_add);</div><div class="line">            &#125;</div><div class="line">            break;</div><div class="line">        case &quot;power&quot;:</div><div class="line">            if (target.getFlag_selected()==1)&#123;</div><div class="line">                rl_container_power.setBackgroundResource(R.drawable.target_item_one_selected);</div><div class="line">                rl_power_option.setBackgroundResource(R.drawable.target_item_delete);</div><div class="line">                if (isOneSelected) rl_power_option.setVisibility(View.INVISIBLE);</div><div class="line">                else rl_power_option.setVisibility(View.VISIBLE);</div><div class="line">            &#125;else &#123;</div><div class="line">                rl_container_power.setBackgroundResource(R.drawable.target_item_none_selected_framework);</div><div class="line">                rl_power_option.setBackgroundResource(R.drawable.target_item_add);</div><div class="line">            &#125;</div><div class="line">            break;</div><div class="line"></div><div class="line">        case &quot;slope_degree&quot;:</div><div class="line">            if (target.getFlag_selected()==1)&#123;</div><div class="line">                rl_container_slope_degree.setBackgroundResource(R.drawable.target_item_one_selected);</div><div class="line">                rl_slope_degree_option.setBackgroundResource(R.drawable.target_item_delete);</div><div class="line">                if (isOneSelected) rl_slope_degree_option.setVisibility(View.INVISIBLE);</div><div class="line">                else rl_slope_degree_option.setVisibility(View.VISIBLE);</div><div class="line">            &#125;else &#123;</div><div class="line">                rl_container_slope_degree.setBackgroundResource(R.drawable.target_item_none_selected_framework);</div><div class="line">                rl_slope_degree_option.setBackgroundResource(R.drawable.target_item_add);</div><div class="line">            &#125;</div><div class="line">            break;</div><div class="line"></div><div class="line">        case &quot;patch_speed&quot;:</div><div class="line">            if (target.getFlag_selected()==1)&#123;</div><div class="line">                rl_container_patch_speed.setBackgroundResource(R.drawable.target_item_one_selected);</div><div class="line">                rl_patch_speed_option.setBackgroundResource(R.drawable.target_item_delete);</div><div class="line">                if (isOneSelected) rl_patch_speed_option.setVisibility(View.INVISIBLE);</div><div class="line">                else rl_patch_speed_option.setVisibility(View.VISIBLE);</div><div class="line">            &#125;else &#123;</div><div class="line">                rl_container_patch_speed.setBackgroundResource(R.drawable.target_item_none_selected_framework);</div><div class="line">                rl_patch_speed_option.setBackgroundResource(R.drawable.target_item_add);</div><div class="line">            &#125;</div><div class="line">            break;</div><div class="line"></div><div class="line">        case &quot;calorie&quot;:</div><div class="line">            if (target.getFlag_selected()==1)&#123;</div><div class="line">                rl_container_calorie.setBackgroundResource(R.drawable.target_item_one_selected);</div><div class="line">                rl_calorie_option.setBackgroundResource(R.drawable.target_item_delete);</div><div class="line">                if (isOneSelected) rl_calorie_option.setVisibility(View.INVISIBLE);</div><div class="line">                else rl_calorie_option.setVisibility(View.VISIBLE);</div><div class="line">            &#125;else &#123;</div><div class="line">                rl_container_calorie.setBackgroundResource(R.drawable.target_item_none_selected_framework);</div><div class="line">                rl_calorie_option.setBackgroundResource(R.drawable.target_item_add);</div><div class="line">            &#125;</div><div class="line">            break;</div><div class="line">        case &quot;time&quot;:</div><div class="line">            if (target.getFlag_selected()==1)&#123;</div><div class="line">                rl_container_time.setBackgroundResource(R.drawable.target_item_one_selected);</div><div class="line">                rl_time_option.setBackgroundResource(R.drawable.target_item_delete);</div><div class="line">                if (isOneSelected) rl_time_option.setVisibility(View.INVISIBLE);</div><div class="line">                else rl_time_option.setVisibility(View.VISIBLE);</div><div class="line">            &#125;else &#123;</div><div class="line">                rl_container_time.setBackgroundResource(R.drawable.target_item_none_selected_framework);</div><div class="line">                rl_time_option.setBackgroundResource(R.drawable.target_item_add);</div><div class="line">            &#125;</div><div class="line">            break;</div><div class="line">        case &quot;bmp&quot;:</div><div class="line">            if (target.getFlag_selected()==1)&#123;</div><div class="line">                rl_container_bmp.setBackgroundResource(R.drawable.target_item_one_selected);</div><div class="line">                rl_bmp_option.setBackgroundResource(R.drawable.target_item_delete);</div><div class="line">                if (isOneSelected) rl_bmp_option.setVisibility(View.INVISIBLE);</div><div class="line">                else rl_bmp_option.setVisibility(View.VISIBLE);</div><div class="line">            &#125;else &#123;</div><div class="line">                rl_container_bmp.setBackgroundResource(R.drawable.target_item_none_selected_framework);</div><div class="line">                rl_bmp_option.setBackgroundResource(R.drawable.target_item_add);</div><div class="line">            &#125;</div><div class="line">            break;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>监听各个布局<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void onClick(View v) &#123;</div><div class="line">    int id  = v.getId();</div><div class="line">    switch (id)&#123;</div><div class="line">        case R.id.id_target_item_container_speed:</div><div class="line">            updateFlag(&quot;speed&quot;);</div><div class="line">            break;</div><div class="line">        case R.id.id_target_item_container_distance:</div><div class="line">            updateFlag(&quot;distance&quot;);</div><div class="line">            break;</div><div class="line">        case R.id.id_target_item_container_power:</div><div class="line">            updateFlag(&quot;power&quot;);</div><div class="line">            break;</div><div class="line">        case R.id.id_target_item_container_slope_degree:</div><div class="line">            updateFlag(&quot;slope_degree&quot;);</div><div class="line">            break;</div><div class="line">        case R.id.id_target_item_container_patch_speed:</div><div class="line">            updateFlag(&quot;patch_speed&quot;);</div><div class="line">            break;</div><div class="line">        case R.id.id_target_item_container_calorie:</div><div class="line">            updateFlag(&quot;calorie&quot;);</div><div class="line">            break;</div><div class="line">        case R.id.id_target_item_container_time:</div><div class="line">            updateFlag(&quot;time&quot;);</div><div class="line">            break;</div><div class="line">        case R.id.id_target_item_container_bmp:</div><div class="line">            updateFlag(&quot;bmp&quot;);</div><div class="line">            break;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>更新标记<br>首先根据name找到数据库中记录的状态值，如果是1，进行删除操作，如果是0进行添加操作，简单地说就是把标记改为相反。<br>删除操作：<br>首先，查找数据库中选中状态的数量，如果查找到的记录数小于2(即只有一个选中)则不允许删除操作，否则进行删除操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">target.setFlag_selected(0);</div><div class="line">target.save();</div></pre></td></tr></table></figure></p>
<p>删除之后还要判断，当前选中状态为1的记录数，如果记录数为1，则把刷新该记录的界面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">targetItems = DataSupport.where(&quot;flag_selected=?&quot;,&quot;1&quot;).find(TargetItem.class);</div><div class="line">if (targetItems.size() == 1)&#123;</div><div class="line">	refreshTargetItem(targetItems.get(0).getName(),true);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>添加操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">target.setFlag_selected(1);</div><div class="line">target.save();</div></pre></td></tr></table></figure></p>
<p>添加之后，还是判断当前选中状态为1的记录数，如果记录数为2，就刷新该记录的界面，因为原来只有一个选中时，减号是不显示的，要把原来的减号显示出来。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">targetItems = DataSupport.where(&quot;flag_selected=?&quot;,&quot;1&quot;).find(TargetItem.class);</div><div class="line">if (targetItems.size() == 2)&#123;</div><div class="line">	refreshTargetItem(targetItems.get(0).getName(),false);</div><div class="line">	refreshTargetItem(targetItems.get(1).getName(),false);</div><div class="line">&#125;else &#123;</div><div class="line">	refreshTargetItem(name,false);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>updateFlag()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">private void updateFlag(String name)&#123;</div><div class="line">    TargetItem target = DataSupport.where(&quot;name=?&quot;, name).find(TargetItem.class).get(0);</div><div class="line">    List&lt;TargetItem&gt; targetItems;</div><div class="line">    if (target.getFlag_selected()==1)&#123;</div><div class="line">        //删除操作</div><div class="line">        targetItems = DataSupport.where(&quot;flag_selected=?&quot;,&quot;1&quot;).find(TargetItem.class);</div><div class="line">        Log.d(TAG, &quot;selected count = &quot; + targetItems.size());</div><div class="line">        if (targetItems.size() &lt; 2)&#123;</div><div class="line">            //即只有一个选中,不允许操作</div><div class="line">            //Toast.makeText(this,&quot;不允许删除&quot;,Toast.LENGTH_LONG).show();</div><div class="line">        &#125;else &#123;</div><div class="line">            //进行删除操作</div><div class="line">            //Toast.makeText(this,&quot;许删除&quot;,Toast.LENGTH_LONG).show();</div><div class="line">            target.setFlag_selected(0);</div><div class="line">            target.save();</div><div class="line">            //刷新界面</div><div class="line">            refreshTargetItem(name,false);</div><div class="line">            //</div><div class="line">            targetItems = DataSupport.where(&quot;flag_selected=?&quot;,&quot;1&quot;).find(TargetItem.class);</div><div class="line">            if (targetItems.size() == 1)&#123;</div><div class="line">                refreshTargetItem(targetItems.get(0).getName(),true);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;else &#123;</div><div class="line">        //添加操作</div><div class="line">        //Toast.makeText(this,&quot;添加&quot;,Toast.LENGTH_LONG).show();</div><div class="line">        target.setFlag_selected(1);</div><div class="line">        target.save();</div><div class="line">        //刷新界面</div><div class="line">        targetItems = DataSupport.where(&quot;flag_selected=?&quot;,&quot;1&quot;).find(TargetItem.class);</div><div class="line">        if (targetItems.size() == 2)&#123;</div><div class="line">            refreshTargetItem(targetItems.get(0).getName(),false);</div><div class="line">            refreshTargetItem(targetItems.get(1).getName(),false);</div><div class="line">        &#125;else &#123;</div><div class="line">            refreshTargetItem(name,false);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="RecyclerView实现方式"><a href="#RecyclerView实现方式" class="headerlink" title="RecyclerView实现方式"></a>RecyclerView实现方式</h2><h3 id="列表项布局"><a href="#列表项布局" class="headerlink" title="列表项布局"></a>列表项布局</h3><p>跟上面布局中差不多，这里就只重复的那部分<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:layout_width=&quot;110dp&quot;</div><div class="line">    android:layout_height=&quot;110dp&quot;</div><div class="line">    android:padding=&quot;10dp&quot;&gt;</div><div class="line"></div><div class="line">    &lt;RelativeLayout</div><div class="line">        android:id=&quot;@+id/id_target_recycler_item_container&quot;</div><div class="line">        android:layout_width=&quot;80dp&quot;</div><div class="line">        android:layout_height=&quot;80dp&quot;</div><div class="line">        android:layout_centerInParent=&quot;true&quot;</div><div class="line">        android:background=&quot;@drawable/target_item_none_selected_framework&quot;&gt;</div><div class="line"></div><div class="line">        &lt;TextView</div><div class="line">            android:id=&quot;@+id/id_target_recycler_item_tv_name&quot;</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:text=&quot;距离&quot;</div><div class="line">            android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">            android:textColor=&quot;@color/white&quot;</div><div class="line">            android:layout_marginTop=&quot;10dp&quot;/&gt;</div><div class="line">        &lt;TextView</div><div class="line">            android:id=&quot;@+id/id_target_recycler_item_tv_value&quot;</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:text=&quot;0.7&quot;</div><div class="line">            android:textSize=&quot;25sp&quot;</div><div class="line">            android:textColor=&quot;@color/white&quot;</div><div class="line">            android:layout_marginLeft=&quot;10dp&quot;</div><div class="line">            android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">            android:layout_marginBottom=&quot;10dp&quot;/&gt;</div><div class="line"></div><div class="line">        &lt;TextView</div><div class="line">            android:id=&quot;@+id/id_target_recycler_item_tv_unit&quot;</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:text=&quot;km&quot;</div><div class="line">            android:textColor=&quot;@color/white&quot;</div><div class="line">            android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">            android:layout_marginBottom=&quot;15dp&quot;</div><div class="line">            android:layout_marginLeft=&quot;2dp&quot;</div><div class="line">            android:layout_toRightOf=&quot;@id/id_target_recycler_item_tv_value&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;/RelativeLayout&gt;</div><div class="line">    &lt;RelativeLayout</div><div class="line">        android:id=&quot;@+id/id_target_recycler_item_rl_option&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:layout_alignParentRight=&quot;true&quot;</div><div class="line">        android:layout_alignParentBottom=&quot;true&quot;</div><div class="line">        android:background=&quot;@drawable/target_item_add&quot;&gt;</div><div class="line">    &lt;/RelativeLayout&gt;</div><div class="line"></div><div class="line">&lt;/RelativeLayout&gt;</div></pre></td></tr></table></figure></p>
<h3 id="Adapter"><a href="#Adapter" class="headerlink" title="Adapter"></a>Adapter</h3><p>重点就是Adapter实现啦，其实也很简单，根据选中标记选择显示方式<br>初始显示之后判断选中状态为1的数量，如果只有一个选中，就把减号隐藏，这里设置了蓝色背景，可能是没设置大小的原因，看不出而已，正常因该是隐藏布局。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void onBindViewHolder(TargetItemViewHolder holder, int position) &#123;</div><div class="line">    TargetItem targetItem = targetItems.get(position);</div><div class="line">    holder.tv_value.setText(targetItem.getValue());</div><div class="line">    if (targetItem.getFlag_selected()==1)&#123;</div><div class="line">        holder.rl_container.setBackgroundResource(R.drawable.target_item_one_selected);</div><div class="line">        holder.rl_option.setBackgroundResource(R.drawable.target_item_delete);</div><div class="line">    &#125;else &#123;</div><div class="line">        holder.rl_container.setBackgroundResource(R.drawable.target_item_none_selected_framework);</div><div class="line">        holder.rl_option.setBackgroundResource(R.drawable.target_item_add);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    List&lt;TargetItem&gt; list = DataSupport.where(&quot;flag_selected=?&quot;,&quot;1&quot;).find(TargetItem.class);</div><div class="line"></div><div class="line">    if (list.size() == 1)&#123;</div><div class="line">        if (position == list.get(0).getIndex())&#123;</div><div class="line">            holder.rl_option.setBackgroundResource(R.drawable.target_item_one_selected);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    switch (position)&#123;</div><div class="line">        case 0:</div><div class="line">            holder.tv_name.setText(&quot;速度&quot;);</div><div class="line">            holder.tv_unit.setText(&quot;&quot;);</div><div class="line">            break;</div><div class="line"></div><div class="line">        case 1:</div><div class="line">            holder.tv_name.setText(&quot;距离&quot;);</div><div class="line">            holder.tv_unit.setText(&quot;km&quot;);</div><div class="line">            break;</div><div class="line"></div><div class="line">        case 2:</div><div class="line">            holder.tv_name.setText(&quot;功率&quot;);</div><div class="line">            holder.tv_unit.setText(&quot;w&quot;);</div><div class="line">            break;</div><div class="line"></div><div class="line">        case 3:</div><div class="line">            holder.tv_name.setText(&quot;坡度&quot;);</div><div class="line">            holder.tv_unit.setText(&quot;&quot;);</div><div class="line">            break;</div><div class="line"></div><div class="line">        case 4:</div><div class="line">            holder.tv_name.setText(&quot;配速&quot;);</div><div class="line">            holder.tv_unit.setText(&quot;&quot;);</div><div class="line">            break;</div><div class="line"></div><div class="line">        case 5:</div><div class="line">            holder.tv_name.setText(&quot;卡路里&quot;);</div><div class="line">            holder.tv_unit.setText(&quot;kcal&quot;);</div><div class="line">            break;</div><div class="line"></div><div class="line">        case 6:</div><div class="line">            holder.tv_name.setText(&quot;时间&quot;);</div><div class="line">            holder.tv_unit.setText(&quot;&quot;);</div><div class="line">            break;</div><div class="line"></div><div class="line">        case 7:</div><div class="line">            holder.tv_name.setText(&quot;心率&quot;);</div><div class="line">            holder.tv_unit.setText(&quot;bmp&quot;);</div><div class="line">            break;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h3><p>RecyclerItemClickListener<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">package com.allever.bicycle.listener;</div><div class="line"></div><div class="line">import android.content.Context;</div><div class="line">import android.support.v7.widget.RecyclerView;</div><div class="line">import android.view.GestureDetector;</div><div class="line">import android.view.MotionEvent;</div><div class="line">import android.view.View;</div><div class="line"></div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by Allever on 2016/11/5.</div><div class="line"> */</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">public class RecyclerItemClickListener implements RecyclerView.OnItemTouchListener &#123;</div><div class="line"></div><div class="line"></div><div class="line">    private OnItemClickListener mListener;</div><div class="line"></div><div class="line">    private GestureDetector mGestureDetector;</div><div class="line"></div><div class="line">    public RecyclerItemClickListener(Context context, final RecyclerView recyclerView, OnItemClickListener listener) &#123;</div><div class="line">        mListener = listener;</div><div class="line"></div><div class="line">        mGestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() &#123;</div><div class="line">            @Override</div><div class="line">            public boolean onSingleTapUp(MotionEvent e) &#123;</div><div class="line">                return true;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onLongPress(MotionEvent e) &#123;</div><div class="line">                View childView = recyclerView.findChildViewUnder(e.getX(), e.getY());</div><div class="line"></div><div class="line">                if (childView != null &amp;&amp; mListener != null) &#123;</div><div class="line">                    mListener.onItemLongClick(childView, recyclerView.getChildAdapterPosition(childView));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean onInterceptTouchEvent(RecyclerView view, MotionEvent e) &#123;</div><div class="line">        View childView = view.findChildViewUnder(e.getX(), e.getY());</div><div class="line">        if (childView != null &amp;&amp; mListener != null &amp;&amp; mGestureDetector.onTouchEvent(e)) &#123;</div><div class="line">            mListener.onItemClick(childView, view.getChildAdapterPosition(childView));</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    public void onTouchEvent(RecyclerView view, MotionEvent motionEvent) &#123;</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public interface OnItemClickListener &#123;</div><div class="line">        void onItemClick(View view, int position);</div><div class="line">        void onItemLongClick(View view, int position);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>RecyclerView设置监听<br>具体逻辑跟上面大同小异，注意这里是更新了数据库数据已更新了列表数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">recyclerView.addOnItemTouchListener(new RecyclerItemClickListener(this, recyclerView, new RecyclerItemClickListener.OnItemClickListener() &#123;</div><div class="line">    @Override</div><div class="line">    public void onItemClick(View view, int position) &#123;</div><div class="line">        //根据flag判断进行移除还是添加操作</div><div class="line">        TargetItem target = targetItems.get(position);</div><div class="line">        if (target.getFlag_selected()==1)&#123;</div><div class="line">            //移除操作</div><div class="line">            List&lt;TargetItem&gt; list = DataSupport.where(&quot;flag_selected=?&quot;,&quot;1&quot;).find(TargetItem.class);</div><div class="line">            if (list.size() &lt; 2)&#123;</div><div class="line">                //即只有一个选中,不允许操作</div><div class="line">                Toast.makeText(TargetItemListActivity.this,&quot;不允许删除&quot;,Toast.LENGTH_LONG).show();</div><div class="line">            &#125;else &#123;</div><div class="line">                //进行移除操作</div><div class="line">                //Toast.makeText(this,&quot;许删除&quot;,Toast.LENGTH_LONG).show();</div><div class="line">                target.setFlag_selected(0);</div><div class="line">                targetItems.set(position,target);</div><div class="line">                target.save();</div><div class="line">                targetItemAdapter.notifyDataSetChanged();</div><div class="line">            &#125;</div><div class="line">        &#125;else &#123;</div><div class="line">            //添加操作</div><div class="line">            target.setFlag_selected(1);</div><div class="line">            targetItems.set(position,target);</div><div class="line">            target.save();</div><div class="line">            //刷新界面</div><div class="line">            targetItemAdapter.notifyDataSetChanged();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onItemLongClick(View view, int position) &#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;));</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;功能概述：&quot;&gt;&lt;a href=&quot;#功能概述：&quot; class=&quot;headerlink&quot; title=&quot;功能概述：&quot;&gt;&lt;/a&gt;功能概述：&lt;/h1&gt;&lt;p&gt;选中状态：选中时候变为蓝色，并有个减号，里面也是蓝色，&lt;br&gt;未选中状态：未选中时候为空白，并有个加号，&lt;br&gt;点中
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="选择器" scheme="https://devallever.github.io/tags/%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>NoteBook-1</title>
    <link href="https://devallever.github.io/2017/07/15/notebook-1/"/>
    <id>https://devallever.github.io/2017/07/15/notebook-1/</id>
    <published>2017-07-15T07:22:53.000Z</published>
    <updated>2017-07-15T07:39:43.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="https://devallever.github.io/2016/07/14/101-choose-network-framework/">101.Android 选择适当的网络请求框架</a></li>
<li><a href="https://devallever.github.io/2016/07/14/102-mvc-in-android/">102.MVC在Android中的应用</a></li>
<li><a href="https://devallever.github.io/2016/07/15/104-self-study-in-android-to-find-job/">104.自学到什么程度才能找到工作</a></li>
<li><a href="https://devallever.github.io/2016/07/15/105-recyclerview-basic-using/">105.RecyclerView简单使用</a></li>
<li><a href="https://devallever.github.io/2016/07/15/107-viewpager-basic-using/">107.ViewPager 简单使用</a></li>
<li><a href="https://devallever.github.io/2016/07/15/108-listview-basic-using/">108.ListView 简单使用</a></li>
<li><a href="https://devallever.github.io/2016/07/15/111-toolbar-basic-using/">111. Toolbar 简单使用</a></li>
<li><a href="https://devallever.github.io/2016/07/15/112-property-animation-basic-using/">112.属性动画基本使用</a></li>
<li><a href="https://devallever.github.io/2016/07/15/123-retrofit-2-basic-using/">123.Retrofit 基本使用</a></li>
<li><a href="https://devallever.github.io/2016/07/15/133-first-code-android-chapter-1-note/">133. 第一行代码 第一章 Android架构 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/135-first-code-android-chapter-2-note-activity/">135. 第一行代码 第二章 Activity 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/140-first-code-android-chapter-3-note-ui/">140. 第一行代码 第三章 UI 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/141-first-code-android-chapter-4-note-fragment/">141. 第一行代码 第四章 Fragment 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/143-first-code-android-chapter-5-note-broadcast-receiver/">143. 第一行代码 第五章 Broadcast Receiver 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/145-java-basic/">145. Java 基础</a></li>
<li><a href="https://devallever.github.io/2016/07/15/147-java-basic-common-class/">147. Java常用类</a></li>
<li><a href="https://devallever.github.io/2016/07/15/150-first-code-android-chapter-6-note-file/">150. 第一行代码 第六章 持久化 File 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/151-first-code-android-chapter-6-note-share-preferences/">151. 第一行代码 第六章 持久化 SharePreferences 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/152-java-oop-concept/">152. 面向对象基本概念</a></li>
<li><a href="https://devallever.github.io/2016/07/15/155-java-inner-class/">155. Java 内部类</a></li>
<li><a href="https://devallever.github.io/2016/07/15/157-first-code-android-chapter-6-note-sqlite/">157. 第一行代码 第六章 持久化 Sqlite 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/159-java-list-set-map/">159. List Set Map</a></li>
<li><a href="https://devallever.github.io/2016/07/15/161-first-code-android-chapter-6-note-litepal/">161. 第一行代码 第六章 持久化 LitePal 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/163-first-code-android-chapter-8-note-notification/">163. 第一行代码 第八章 多媒体 Notification 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/165-first-code-android-chapter-8-note-camera/">165-first-code-android-chapter-8-note-camera 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/167-first-code-android-chapter-8-note-choose-pic/">167. 第一行代码 第八章 多媒体 选择图片 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/170-java-exception/">170. Java 异常</a></li>
<li><a href="https://devallever.github.io/2016/07/15/173-first-code-android-chapter-8-note-media/">173. 第一行代码 第八章 多媒体 音频视频 笔记</a></li>
<li><a href="https://devallever.github.io/2016/07/15/174-java-thread/">174. Java 多线程</a></li>
<li><a href="https://devallever.github.io/2016/07/15/176-java-async/">176. Java 同步</a></li>
<li><a href="https://devallever.github.io/2016/07/15/179-android-java-http-url-connection/">179. HttpUrlConnection</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devallever.github.io/2016/07/14/101-choose-netw
    
    </summary>
    
      <category term="NoteBook" scheme="https://devallever.github.io/categories/NoteBook/"/>
    
    
      <category term="NoteBook1" scheme="https://devallever.github.io/tags/NoteBook1/"/>
    
  </entry>
  
  <entry>
    <title>Java 线程池</title>
    <link href="https://devallever.github.io/2017/07/02/java-thread-pool-executor-basic/"/>
    <id>https://devallever.github.io/2017/07/02/java-thread-pool-executor-basic/</id>
    <published>2017-07-02T08:35:49.000Z</published>
    <updated>2017-07-02T09:42:58.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>当我们使用线程的时候就去创建一个线程，这样实现起来非常简便，但是就会有一个问题：<br>　　如果并发的线程数量很多，并且每个线程都是执行一个时间很短的任务就结束了，这样频繁创建线程就会大大降低系统的效率，因为频繁创建线程和销毁线程需要时间。<br>　　那么有没有一种办法使得线程可以复用，就是执行完一个任务，并不被销毁，而是可以继续执行其他的任务？<br>　　在Java中可以通过线程池来达到这样的效果。今天我们就来详细讲解一下Java的线程池。</p>
<h1 id="ThreadPoolEXecutor"><a href="#ThreadPoolEXecutor" class="headerlink" title="ThreadPoolEXecutor"></a>ThreadPoolEXecutor</h1><p>合理利用线程池能够带来三个好处。</p>
<ul>
<li>降低资源消耗。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。</li>
<li>提高响应速度。当任务到达时，任务可以不需要等到线程创建就能立即执行。</li>
<li>提高线程的可管理性。</li>
</ul>
<p>线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。但是要做到合理的利用线程池，必须对其原理了如指掌。</p>
<h1 id="构造方法详解"><a href="#构造方法详解" class="headerlink" title="构造方法详解"></a>构造方法详解</h1><p>构造方法有三个：<br>其一：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">public ThreadPoolExecutor(</div><div class="line">	int corePoolSize,</div><div class="line">	int maximumPoolSize,</div><div class="line">	long keepAliveTime,</div><div class="line">	TimeUnit unit,</div><div class="line">	BlockingQueue&lt;Runnable&gt; workQueue) </div><div class="line">&#123;</div><div class="line">        this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,</div><div class="line">             Executors.defaultThreadFactory(), defaultHandler);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其二：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public ThreadPoolExecutor(</div><div class="line">	int corePoolSize,</div><div class="line">	int maximumPoolSize,</div><div class="line">	long keepAliveTime,</div><div class="line">	TimeUnit unit,</div><div class="line">	BlockingQueue&lt;Runnable&gt; workQueue,</div><div class="line">	ThreadFactory threadFactory)</div><div class="line">&#123;</div><div class="line">        this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,</div><div class="line">             threadFactory, defaultHandler);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其三：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public ThreadPoolExecutor(</div><div class="line">	int corePoolSize,</div><div class="line">	int maximumPoolSize,</div><div class="line">	long keepAliveTime,</div><div class="line">	TimeUnit unit,</div><div class="line">	BlockingQueue&lt;Runnable&gt; workQueue,</div><div class="line">	RejectedExecutionHandler handler) </div><div class="line">&#123;</div><div class="line">        this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,</div><div class="line">             Executors.defaultThreadFactory(), handler);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>源码对各个参数介绍如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Creates a new &#123;@code ThreadPoolExecutor&#125; with the given initial</div><div class="line"> * parameters and default thread factory.</div><div class="line"> *</div><div class="line"> * @param corePoolSize the number of threads to keep in the pool, even</div><div class="line"> *        if they are idle, unless &#123;@code allowCoreThreadTimeOut&#125; is set</div><div class="line"> * @param maximumPoolSize the maximum number of threads to allow in the</div><div class="line"> *        pool</div><div class="line"> * @param keepAliveTime when the number of threads is greater than</div><div class="line"> *        the core, this is the maximum time that excess idle threads</div><div class="line"> *        will wait for new tasks before terminating.</div><div class="line"> * @param unit the time unit for the &#123;@code keepAliveTime&#125; argument</div><div class="line"> * @param workQueue the queue to use for holding tasks before they are</div><div class="line"> *        executed.  This queue will hold only the &#123;@code Runnable&#125;</div><div class="line"> *        tasks submitted by the &#123;@code execute&#125; method.</div><div class="line"> * @param handler the handler to use when execution is blocked</div><div class="line"> *        because the thread bounds and queue capacities are reached</div><div class="line"> * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;</div><div class="line"> *         &#123;@code corePoolSize &lt; 0&#125;&lt;br&gt;</div><div class="line"> *         &#123;@code keepAliveTime &lt; 0&#125;&lt;br&gt;</div><div class="line"> *         &#123;@code maximumPoolSize &lt;= 0&#125;&lt;br&gt;</div><div class="line"> *         &#123;@code maximumPoolSize &lt; corePoolSize&#125;</div><div class="line"> * @throws NullPointerException if &#123;@code workQueue&#125;</div><div class="line"> *         or &#123;@code handler&#125; is null</div><div class="line"> */</div></pre></td></tr></table></figure></p>
<p>看不懂？没关系，下面一一解释</p>
<ul>
<li>corePoolSize：线程池的核心线程数<br>当提交一个任务到线程池时，线程池会创建一个线程来执行任务，即使其他空闲的基本线程能够执行新任务也会创建线程，等到需要执行的任务数大于线程池基本大小时就不再创建。如果调用了线程池的prestartAllCoreThreads方法，线程池会提前创建并启动所有基本线程。</li>
<li>maximumPoolSize：线程池所能容纳的最大线程数<br>如果队列满了，并且已创建的线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是如果使用了无界的任务队列这个参数就没什么效果。</li>
<li>keepAliveTime：非核心线程闲置时的超时时长<br>线程池的工作线程空闲后，保持存活的时间。所以如果任务很多，并且每个任务执行的时间比较短，可以调大这个时间，提高线程的利用率。</li>
<li>unit：用于指定keepAliveTime参数的时间单位<br>可选的单位有天（DAYS），小时（HOURS），分钟（MINUTES），毫秒(TimeUnit.MILLISECONDS)，微秒(MICROSECONDS, 千分之一毫秒)和毫微秒(NANOSECONDS, 千分之一微秒)。常用的有分钟，秒，毫秒</li>
<li>workQueue：任务队列<br>用于保存等待执行的任务的阻塞队列。有一下几种<ul>
<li>ArrayBlockingQueue：<br>是一个基于数组结构的有界阻塞队列，此队列按 FIFO（先进先出）原则对元素进行排序。</li>
<li>LinkedBlockingQueue：<br>一个基于链表结构的阻塞队列，此队列按FIFO （先进先出） 排序元素，吞吐量通常要高于ArrayBlockingQueue。静态工厂方法Executors.newFixedThreadPool()使用了这个队列。</li>
<li>SynchronousQueue：<br>一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于LinkedBlockingQueue，静态工厂方法Executors.newCachedThreadPool使用了这个队列。</li>
<li>PriorityBlockingQueue：一个具有优先级的无限阻塞队列。</li>
</ul>
</li>
<li>handler：饱和策略(不常用)<br>当队列和线程池都满了，说明线程池处于饱和状态，那么必须采取一种策略处理提交的新任务。这个策略默认情况下是AbortPolicy，表示无法处理新任务时抛出异常。以下是JDK1.5提供的四种策略。<ul>
<li>AbortPolicy：直接抛出异常。</li>
<li>CallerRunsPolicy：只用调用者所在线程来运行任务。</li>
<li>DiscardOldestPolicy：丢弃队列里最近的一个任务，并执行当前任务。</li>
<li>DiscardPolicy：不处理，丢弃掉。</li>
<li>当然也可以根据应用场景需要来实现RejectedExecutionHandler接口自定义策略。如记录日志或持久化不能处理的任务。</li>
</ul>
</li>
</ul>
<h1 id="四种常用的线程池"><a href="#四种常用的线程池" class="headerlink" title="四种常用的线程池"></a>四种常用的线程池</h1><h2 id="FixedThreadPool"><a href="#FixedThreadPool" class="headerlink" title="FixedThreadPool"></a>FixedThreadPool</h2><p>是一种线程数量固定的线程池，当线程处于空闲状态时，它们并不会回收，除非线程池关闭了。当所有线程都处于活动状态时，新任务都会处于等待状态，知道有线程空闲出来。由于FixedThreadPool只有核心线程并且这些核心线程都不会被回收，意味着它能够更加快速的响应外界的请求。没有超时机制，任务队列也没有大小限制。  </p>
<p>创建实例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ExecutorService fixedThreadPoolExecutor = Executors.newFixedThreadPool(3);</div></pre></td></tr></table></figure></p>
<p>newFixedThreadPool()方法定义如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Creates a thread pool that reuses a fixed number of threads</div><div class="line"> * operating off a shared unbounded queue.  At any point, at most</div><div class="line"> * &#123;<span class="doctag">@code</span> nThreads&#125; threads will be active processing tasks.</div><div class="line"> * If additional tasks are submitted when all threads are active,</div><div class="line"> * they will wait in the queue until a thread is available.</div><div class="line"> * If any thread terminates due to a failure during execution</div><div class="line"> * prior to shutdown, a new one will take its place if needed to</div><div class="line"> * execute subsequent tasks.  The threads in the pool will exist</div><div class="line"> * until it is explicitly &#123;<span class="doctag">@link</span> ExecutorService#shutdown shutdown&#125;.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> nThreads the number of threads in the pool</div><div class="line"> * <span class="doctag">@return</span> the newly created thread pool</div><div class="line"> * <span class="doctag">@throws</span> IllegalArgumentException if &#123;<span class="doctag">@code</span> nThreads &lt;= 0&#125;</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title">newFixedThreadPool</span><span class="params">(<span class="keyword">int</span> nThreads)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ThreadPoolExecutor(nThreads, nThreads,</div><div class="line">                                  <span class="number">0L</span>, TimeUnit.MILLISECONDS,</div><div class="line">                                  <span class="keyword">new</span> LinkedBlockingQueue&lt;Runnable&gt;());</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>举个例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">private static void fixedThreadPoolTest()&#123;</div><div class="line">    ExecutorService fixedThreadPoolExecutor = Executors.newFixedThreadPool(3);</div><div class="line">    for (int i=0; i&lt;10; i++)&#123;</div><div class="line">        final int index = i;</div><div class="line">        System.out.println(System.currentTimeMillis() +</div><div class="line">                &quot;in main thread index = &quot; + index + &quot; &quot; +</div><div class="line">                &quot;Thread id = &quot; + Thread.currentThread().getId());</div><div class="line">        fixedThreadPoolExecutor.execute(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                System.out.println(System.currentTimeMillis() +</div><div class="line">                        &quot;in thread pool index = &quot; + index + &quot; &quot; +</div><div class="line">                        &quot;Thread id = &quot; + Thread.currentThread().getId());</div><div class="line">                try &#123;</div><div class="line">                    Thread.sleep(2000);</div><div class="line">                &#125;catch (InterruptedException itre)&#123;</div><div class="line">                    itre.printStackTrace();</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行结果<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="number">1498982458294</span>in main thread index = <span class="number">0</span> Thread id = <span class="number">1</span></div><div class="line"><span class="number">1498982458296</span>in main thread index = <span class="number">1</span> Thread id = <span class="number">1</span></div><div class="line"><span class="number">1498982458296</span>in thread pool index = <span class="number">0</span> Thread id = <span class="number">10</span></div><div class="line"><span class="number">1498982458296</span>in main thread index = <span class="number">2</span> Thread id = <span class="number">1</span></div><div class="line"><span class="number">1498982458302</span>in thread pool index = <span class="number">1</span> Thread id = <span class="number">11</span></div><div class="line"><span class="number">1498982458302</span>in main thread index = <span class="number">3</span> Thread id = <span class="number">1</span></div><div class="line"><span class="number">1498982458303</span>in main thread index = <span class="number">4</span> Thread id = <span class="number">1</span></div><div class="line"><span class="number">1498982458303</span>in main thread index = <span class="number">5</span> Thread id = <span class="number">1</span></div><div class="line"><span class="number">1498982458303</span>in main thread index = <span class="number">6</span> Thread id = <span class="number">1</span></div><div class="line"><span class="number">1498982458303</span>in main thread index = <span class="number">7</span> Thread id = <span class="number">1</span></div><div class="line"><span class="number">1498982458303</span>in main thread index = <span class="number">8</span> Thread id = <span class="number">1</span></div><div class="line"><span class="number">1498982458303</span>in main thread index = <span class="number">9</span> Thread id = <span class="number">1</span></div><div class="line"><span class="number">1498982458304</span>in thread pool index = <span class="number">2</span> Thread id = <span class="number">12</span></div><div class="line"><span class="comment">// 睡两秒</span></div><div class="line"><span class="number">1498982460296</span>in thread pool index = <span class="number">3</span> Thread id = <span class="number">10</span></div><div class="line"><span class="number">1498982460303</span>in thread pool index = <span class="number">4</span> Thread id = <span class="number">11</span></div><div class="line"><span class="number">1498982460304</span>in thread pool index = <span class="number">5</span> Thread id = <span class="number">12</span></div><div class="line"><span class="comment">// 睡两秒</span></div><div class="line"><span class="number">1498982462297</span>in thread pool index = <span class="number">6</span> Thread id = <span class="number">10</span></div><div class="line"><span class="number">1498982462303</span>in thread pool index = <span class="number">7</span> Thread id = <span class="number">11</span></div><div class="line"><span class="number">1498982462304</span>in thread pool index = <span class="number">8</span> Thread id = <span class="number">12</span></div><div class="line"><span class="comment">// 睡两秒</span></div><div class="line"><span class="number">1498982464297</span>in thread pool index = <span class="number">9</span> Thread id = <span class="number">10</span></div></pre></td></tr></table></figure></p>
<p>可以看到主线程很快就执行完了，它只负责创建了10个任务。然后交给线程池执行。<br>线程池数量为3，因此每次只执行其中3个任务，即打印连续3条记录，执行线程为10,11,12，其余任务处于等待状态。然后等待两秒，此时线程池所有线程应该是空闲的，下一次依然在线程10,11,12中执行3个任务，直到所有任务完成。</p>
<p>主线程id为1，子线程id为10,11,12<br>因为线程池只设置了核心线程数为3，并且最大线程数也是3。</p>
<h2 id="CacheThreadPool"><a href="#CacheThreadPool" class="headerlink" title="CacheThreadPool"></a>CacheThreadPool</h2><p>它是一种线程数量不固定的线程池，它只有非核心线程，并且虽大线程数为Integer.MAX_VALUE(一个很大的数)，相当于最大线程数可以任意大。当线程池中的线程都处于活动状态时，线程池会创建新的线程来处理新任务，否则就会利用空闲的线程来处理新任务。空闲线程有超时机制，60秒，超过60秒，回收空闲线程。<br>从CacheThreadPool的特性可以知道，这类线程池适合执行大量耗时少的任务。当整个线程池都处于闲置状态时候，线程池中的线程都会因为超时而被回收，几乎不占用任何系统资源。</p>
<p>创建实例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ExecutorService cacheThreadPoolExecutor = Executors.newCachedThreadPool();</div></pre></td></tr></table></figure></p>
<p>newCachedThreadPool()方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Creates a thread pool that creates new threads as needed, but</div><div class="line"> * will reuse previously constructed threads when they are</div><div class="line"> * available.  These pools will typically improve the performance</div><div class="line"> * of programs that execute many short-lived asynchronous tasks.</div><div class="line"> * Calls to &#123;<span class="doctag">@code</span> execute&#125; will reuse previously constructed</div><div class="line"> * threads if available. If no existing thread is available, a new</div><div class="line"> * thread will be created and added to the pool. Threads that have</div><div class="line"> * not been used for sixty seconds are terminated and removed from</div><div class="line"> * the cache. Thus, a pool that remains idle for long enough will</div><div class="line"> * not consume any resources. Note that pools with similar</div><div class="line"> * properties but different details (for example, timeout parameters)</div><div class="line"> * may be created using &#123;<span class="doctag">@link</span> ThreadPoolExecutor&#125; constructors.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span> the newly created thread pool</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title">newCachedThreadPool</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ThreadPoolExecutor(<span class="number">0</span>, Integer.MAX_VALUE,</div><div class="line">                                  <span class="number">60L</span>, TimeUnit.SECONDS,</div><div class="line">                                  <span class="keyword">new</span> SynchronousQueue&lt;Runnable&gt;());</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>举个例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">private static void cacheThreadPoolTest()&#123;</div><div class="line">    ExecutorService cacheThreadPoolExecutor = Executors.newCachedThreadPool();</div><div class="line"></div><div class="line">    for (int i=0; i&lt;10; i++)&#123;</div><div class="line">        final int index = i;</div><div class="line">        /*</div><div class="line">        try &#123;</div><div class="line">            Thread.sleep(1000);</div><div class="line">        &#125;catch (InterruptedException itre)&#123;</div><div class="line">            itre.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        */</div><div class="line">        </div><div class="line">        cacheThreadPoolExecutor.execute(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                System.out.println(System.currentTimeMillis() + &quot; &quot; +</div><div class="line">                        &quot;index = &quot; +  index + &quot; &quot; +</div><div class="line">                        &quot;Thread id = &quot; + Thread.currentThread().getId());</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行情况：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">1498985856125 index = 0 Thread id = 10</div><div class="line">1498985856126 index = 1 Thread id = 11</div><div class="line">1498985856126 index = 2 Thread id = 12</div><div class="line">1498985856127 index = 3 Thread id = 13</div><div class="line">1498985856127 index = 7 Thread id = 10</div><div class="line">1498985856127 index = 6 Thread id = 14</div><div class="line">1498985856127 index = 9 Thread id = 14</div><div class="line">1498985856127 index = 4 Thread id = 12</div><div class="line">1498985856127 index = 5 Thread id = 11</div><div class="line">1498985856131 index = 8 Thread id = 15</div></pre></td></tr></table></figure></p>
<p>可以看出，当线程池的所有线程活动的时候，线程池不断创建线程了执行新的任务</p>
<p>如果去掉线程等待的注释，再运行一次<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">private static void cacheThreadPoolTest()&#123;</div><div class="line">    ExecutorService cacheThreadPoolExecutor = Executors.newCachedThreadPool();</div><div class="line"></div><div class="line">    for (int i=0; i&lt;10; i++)&#123;</div><div class="line">        final int index = i;</div><div class="line">        </div><div class="line">        try &#123;</div><div class="line">            Thread.sleep(1000);</div><div class="line">        &#125;catch (InterruptedException itre)&#123;</div><div class="line">            itre.printStackTrace();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        cacheThreadPoolExecutor.execute(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                System.out.println(System.currentTimeMillis() + &quot; &quot; +</div><div class="line">                        &quot;index = &quot; +  index + &quot; &quot; +</div><div class="line">                        &quot;Thread id = &quot; + Thread.currentThread().getId());</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">1498985981855 index = 0 Thread id = 10</div><div class="line">// 间隔一秒</div><div class="line">1498985982854 index = 1 Thread id = 10</div><div class="line">// 间隔一秒</div><div class="line">1498985983854 index = 2 Thread id = 10</div><div class="line">// 间隔一秒 下同省略了</div><div class="line">1498985984854 index = 3 Thread id = 10</div><div class="line">1498985985855 index = 4 Thread id = 10</div><div class="line">1498985986855 index = 5 Thread id = 10</div><div class="line">1498985987855 index = 6 Thread id = 10</div><div class="line">1498985988855 index = 7 Thread id = 10</div><div class="line">1498985989855 index = 8 Thread id = 10</div><div class="line">1498985990855 index = 9 Thread id = 10</div></pre></td></tr></table></figure></p>
<p>可以看到，当等待的时候，活动线程已经执行完毕，变成闲置线程，由于等待时间少于60秒，闲置线程未被回收，因此始终在10号线程中执行。</p>
<h2 id="ScheduledThreadPool"><a href="#ScheduledThreadPool" class="headerlink" title="ScheduledThreadPool"></a>ScheduledThreadPool</h2><p>它的核心线程数量是固定的，而非核心线程数没有限制，并且非核心线程闲置时会立即被回收。这类线程池主要用于执行定时任务或具有固定周期的重复任务</p>
<p>创建实例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ScheduledExecutorService scheduledThreadPool = Executors.newScheduledThreadPool(4);</div></pre></td></tr></table></figure></p>
<p>newScheduledThreadPool()方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Creates a thread pool that can schedule commands to run after a</div><div class="line"> * given delay, or to execute periodically.</div><div class="line"> * <span class="doctag">@param</span> corePoolSize the number of threads to keep in the pool,</div><div class="line"> * even if they are idle</div><div class="line"> * <span class="doctag">@return</span> a newly created scheduled thread pool</div><div class="line"> * <span class="doctag">@throws</span> IllegalArgumentException if &#123;<span class="doctag">@code</span> corePoolSize &lt; 0&#125;</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ScheduledExecutorService <span class="title">newScheduledThreadPool</span><span class="params">(<span class="keyword">int</span> corePoolSize)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ScheduledThreadPoolExecutor(corePoolSize);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>ScheduledThreadPoolExecutor()构造如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Creates a new &#123;@code ScheduledThreadPoolExecutor&#125; with the</div><div class="line"> * given core pool size.</div><div class="line"> *</div><div class="line"> * @param corePoolSize the number of threads to keep in the pool, even</div><div class="line"> *        if they are idle, unless &#123;@code allowCoreThreadTimeOut&#125; is set</div><div class="line"> * @throws IllegalArgumentException if &#123;@code corePoolSize &lt; 0&#125;</div><div class="line"> */</div><div class="line">public ScheduledThreadPoolExecutor(int corePoolSize) &#123;</div><div class="line">    super(corePoolSize, Integer.MAX_VALUE, 0, NANOSECONDS,</div><div class="line">          new DelayedWorkQueue());</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>举个例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">private static void scheduledThreadPoolTest()&#123;</div><div class="line">    Runnable runnable = new Runnable() &#123;</div><div class="line">        @Override</div><div class="line">        public void run() &#123;</div><div class="line">            System.out.println(&quot;Thread id = &quot; + Thread.currentThread().getId());</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    ScheduledExecutorService scheduledThreadPool = Executors.newScheduledThreadPool(4);</div><div class="line">    //延时2s</div><div class="line">    scheduledThreadPool.schedule(runnable,2, TimeUnit.SECONDS);</div><div class="line">    //延迟1000ms后, 每隔500ms执行一次runnable</div><div class="line">    scheduledThreadPool.scheduleAtFixedRate(runnable,1000, 500, TimeUnit.MILLISECONDS);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="SingleThreadExecutor"><a href="#SingleThreadExecutor" class="headerlink" title="SingleThreadExecutor"></a>SingleThreadExecutor</h2><p>这类线程池内部只有一个核心线程，它确保所有的任务都在同一线程中按顺序执行。SingleThreadExecutor的意义在于同一所有的外界任务到一个线程中，这使得在这些任务之间不需要处理线程同步问题。</p>
<p>创建实例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ExecutorService singleThreadExecutor = Executors.newSingleThreadExecutor();</div></pre></td></tr></table></figure></p>
<p>newSingleThreadExecutor()方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Creates an Executor that uses a single worker thread operating</div><div class="line"> * off an unbounded queue. (Note however that if this single</div><div class="line"> * thread terminates due to a failure during execution prior to</div><div class="line"> * shutdown, a new one will take its place if needed to execute</div><div class="line"> * subsequent tasks.)  Tasks are guaranteed to execute</div><div class="line"> * sequentially, and no more than one task will be active at any</div><div class="line"> * given time. Unlike the otherwise equivalent</div><div class="line"> * &#123;<span class="doctag">@code</span> newFixedThreadPool(1)&#125; the returned executor is</div><div class="line"> * guaranteed not to be reconfigurable to use additional threads.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span> the newly created single-threaded Executor</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title">newSingleThreadExecutor</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> FinalizableDelegatedExecutorService</div><div class="line">        (<span class="keyword">new</span> ThreadPoolExecutor(<span class="number">1</span>, <span class="number">1</span>,</div><div class="line">                                <span class="number">0L</span>, TimeUnit.MILLISECONDS,</div><div class="line">                                <span class="keyword">new</span> LinkedBlockingQueue&lt;Runnable&gt;()));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>举个例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">private static void singleThreadExecutorTest()&#123;</div><div class="line">    ExecutorService singleThreadExecutor = Executors.newSingleThreadExecutor();</div><div class="line">    for (int i=0; i&lt;10; i++)&#123;</div><div class="line">        final int index = i;</div><div class="line">        singleThreadExecutor.execute(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                System.out.println(&quot;index = &quot; + index+ &quot; Thread id = &quot; + Thread.currentThread().getId());</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">index = 0 Thread id = 10</div><div class="line">index = 1 Thread id = 10</div><div class="line">index = 2 Thread id = 10</div><div class="line">index = 3 Thread id = 10</div><div class="line">index = 4 Thread id = 10</div><div class="line">index = 5 Thread id = 10</div><div class="line">index = 6 Thread id = 10</div><div class="line">index = 7 Thread id = 10</div><div class="line">index = 8 Thread id = 10</div><div class="line">index = 9 Thread id = 10</div></pre></td></tr></table></figure></p>
<p>可以看出，所有任务都在同一个线程中排队等待执行。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;当我们使用线程的时候就去创建一个线程，这样实现起来非常简便，但是就会有一个问题：&lt;br&gt;　　如果并发的线程数量很多，并且每个线程都是执行一个
    
    </summary>
    
      <category term="Java" scheme="https://devallever.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://devallever.github.io/tags/Java/"/>
    
      <category term="ThreadPoolExecutor" scheme="https://devallever.github.io/tags/ThreadPoolExecutor/"/>
    
  </entry>
  
  <entry>
    <title>IntentService 工作原理</title>
    <link href="https://devallever.github.io/2017/07/02/android-intent-service/"/>
    <id>https://devallever.github.io/2017/07/02/android-intent-service/</id>
    <published>2017-07-02T01:22:13.000Z</published>
    <updated>2017-07-02T01:50:58.132Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IntentService简介"><a href="#IntentService简介" class="headerlink" title="IntentService简介"></a>IntentService简介</h1><p>是一种特殊的Service，继承了Service并且是个抽象类，可用于执行后台耗时任务，当任务结束后自动停止，同时由于是服务的原因，它的优先级比普通线程高很多，因此不容易被系统杀死。在实现上，IntentService封装了HandlerThread和Handler。</p>
<h1 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h1><p>startService(intentService):<br>onCreate()-&gt;<br>onStartCommand()-&gt;<br>onStart()-&gt;<br>sendMessage()-&gt;<br>handlerMessage()-&gt;<br>onHandlerIntent()-&gt;<br>stopSelf(startId)-&gt;<br>onDestroy-&gt;</p>
<h1 id="详细解剖"><a href="#详细解剖" class="headerlink" title="详细解剖"></a>详细解剖</h1><h2 id="onCreate"><a href="#onCreate" class="headerlink" title="onCreate()"></a>onCreate()</h2><p>当服务第一次创建的时候调用onCreate()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void onCreate() &#123;</div><div class="line">    // TODO: It would be nice to have an option to hold a partial wakelock</div><div class="line">    // during processing, and to have a static startService(Context, Intent)</div><div class="line">    // method that would launch the service &amp; hand off a wakelock.</div><div class="line"></div><div class="line">    super.onCreate();</div><div class="line">    HandlerThread thread = new HandlerThread(&quot;IntentService[&quot; + mName + &quot;]&quot;);</div><div class="line">    thread.start();</div><div class="line"></div><div class="line">    mServiceLooper = thread.getLooper();</div><div class="line">    mServiceHandler = new ServiceHandler(mServiceLooper);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>该方法封装了HandlerThread 和 Handler</p>
<h2 id="onStartCommand"><a href="#onStartCommand" class="headerlink" title="onStartCommand()"></a>onStartCommand()</h2><p>每一次启动服务的时候调用onStartCommand()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public int onStartCommand(@Nullable Intent intent, int flags, int startId) &#123;</div><div class="line">    onStart(intent, startId);</div><div class="line">    return mRedelivery ? START_REDELIVER_INTENT : START_NOT_STICKY;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>该方法仅仅调用了onStart()方法</p>
<h2 id="onStart"><a href="#onStart" class="headerlink" title="onStart()"></a>onStart()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void onStart(@Nullable Intent intent, int startId) &#123;</div><div class="line">    Message msg = mServiceHandler.obtainMessage();</div><div class="line">    msg.arg1 = startId;</div><div class="line">    msg.obj = intent;</div><div class="line">    mServiceHandler.sendMessage(msg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>该方法把startService传来的Intent和startId封装成Message消息，然后通过handler发送消息，接着执行mServiceHandler.handleMessage()<br>其中ServiceHandler是IntentService的一个内部类，它的定义如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">private final class ServiceHandler extends Handler &#123;</div><div class="line">    public ServiceHandler(Looper looper) &#123;</div><div class="line">        super(looper);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void handleMessage(Message msg) &#123;</div><div class="line">        onHandleIntent((Intent)msg.obj);</div><div class="line">        stopSelf(msg.arg1);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="handleMessage"><a href="#handleMessage" class="headerlink" title="handleMessage()"></a>handleMessage()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void handleMessage(Message msg) &#123;</div><div class="line">	onHandleIntent((Intent)msg.obj);</div><div class="line">	stopSelf(msg.arg1);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>该方法会执行onHandleIntent()方法，它是个抽象方法，因此我们自定义IntentService的时候必须重写onHandleIntent()方法。因为发送消息那那个handler是HandlerThread所关联的，所以处理信息的时候是在子线程进行的。不会的可以看看HandlerThread原理。</p>
<h2 id="stopSelf"><a href="#stopSelf" class="headerlink" title="stopSelf()"></a>stopSelf()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void handleMessage(Message msg) &#123;</div><div class="line">	onHandleIntent((Intent)msg.obj);</div><div class="line">	stopSelf(msg.arg1);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当onHandleIntent()方法执行完毕之后，会调用stopSelf(int)方法结束服务</p>
<h2 id="onDestroy"><a href="#onDestroy" class="headerlink" title="onDestroy()"></a>onDestroy()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void onDestroy() &#123;</div><div class="line">    mServiceLooper.quit();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后销毁服务的时候，终止线程执行</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;IntentService简介&quot;&gt;&lt;a href=&quot;#IntentService简介&quot; class=&quot;headerlink&quot; title=&quot;IntentService简介&quot;&gt;&lt;/a&gt;IntentService简介&lt;/h1&gt;&lt;p&gt;是一种特殊的Service，继承了S
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="Thread" scheme="https://devallever.github.io/tags/Thread/"/>
    
      <category term="IntentService" scheme="https://devallever.github.io/tags/IntentService/"/>
    
      <category term="Service" scheme="https://devallever.github.io/tags/Service/"/>
    
  </entry>
  
  <entry>
    <title>HandlerThread简单使用</title>
    <link href="https://devallever.github.io/2017/07/01/handler-thread-basic/"/>
    <id>https://devallever.github.io/2017/07/01/handler-thread-basic/</id>
    <published>2017-07-01T08:59:50.000Z</published>
    <updated>2017-07-01T09:35:43.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HandlerThread简介"><a href="#HandlerThread简介" class="headerlink" title="HandlerThread简介"></a>HandlerThread简介</h1><p>HandlerThread继承了Thread，它是一种可以使用Handler的Thread，它的实现就是在run()方法中通过Looper.prepare()创建消息队列，并通过Looper.loop()开启消息循环。这样在实际使用中就允许在HandlerThread中创建Handler了。<br>由于HandlerThread的run()方法是一个无限循环，因此当明确不需要使用HandlerThread的时候可以通过Looper的quit()或quitSafely()来终止线程执行。</p>
<h1 id="使用Handler"><a href="#使用Handler" class="headerlink" title="使用Handler"></a>使用Handler</h1><p>通常我们会在主线程中创建Handler，在子线程中调用handler.post(runnable)传递消息到主线程的消息队列中处理runnable的run方法.这样完成了子线程到主线的切换。<br>在onCreate()方法中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mainHandler = new Handler();</div></pre></td></tr></table></figure></p>
<p>然后在子线程中post<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">btn_post_to_main_thread.setOnClickListener(new View.OnClickListener() &#123;</div><div class="line">	@Override</div><div class="line">	public void onClick(View v) &#123;</div><div class="line">		new Thread(new Runnable() &#123;</div><div class="line">			@Override</div><div class="line">			public void run() &#123;</div><div class="line">				Log.d(TAG, &quot;Thread id = &quot; + Thread.currentThread().getId());</div><div class="line">				mainHandler.post(runnable);</div><div class="line">			&#125;</div><div class="line">		&#125;).start();</div><div class="line">                </div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>runnable<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">private Runnable runnable = new Runnable() &#123;</div><div class="line">    @Override</div><div class="line">    public void run() &#123;</div><div class="line">        Log.d(TAG, &quot;Thread id = &quot; + Thread.currentThread().getId());</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>运行结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">HandlerThreadActivity: Thread id = 10383</div><div class="line">HandlerThreadActivity: Thread id = 1</div></pre></td></tr></table></figure></p>
<h1 id="使用HandlerThread"><a href="#使用HandlerThread" class="headerlink" title="使用HandlerThread"></a>使用HandlerThread</h1><p>先创建HandlerThread实例，在onCreate()方法中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">handlerThread = new HandlerThread(&quot;handlerThread&quot;);</div><div class="line">handlerThread.start();</div></pre></td></tr></table></figure></p>
<p>这样就开启了一个带Looper的子线程，因为HandlerThread是继承自Thread，它的run方法是这样定义的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public void run() &#123;</div><div class="line">    mTid = Process.myTid();</div><div class="line">    Looper.prepare();</div><div class="line">    synchronized (this) &#123;</div><div class="line">        mLooper = Looper.myLooper();</div><div class="line">        notifyAll();</div><div class="line">    &#125;</div><div class="line">    Process.setThreadPriority(mPriority);</div><div class="line">    onLooperPrepared();</div><div class="line">    Looper.loop();</div><div class="line">    mTid = -1;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>关于Looper原理，可以参考《Android开发艺术探索》中的消息机制，我的理解是:</p>
<ul>
<li>Looper.prepare();创建Looper实例</li>
<li>Looper.loop();进入一个无限循环中，不断监听消息队列中是否有消息，有则把他取出来分发给handler的handlerMessage()中处理。</li>
</ul>
<p>因为线程中需要有一个Looper，线程绑定的handler才可以发送消息到消息队列中，那么相应的线程才会得到处理。</p>
<p>然后就是利用handlerThread获取到Looper用来创建Handler实例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">handler = new Handler(handlerThread.getLooper());</div></pre></td></tr></table></figure></p>
<p>此时这个handler即使实在主线程中创建，但是它与子线程的Looper关联了，所以处理消息时候也会在子线程中处理的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">btn_post_to_sub_thread.setOnClickListener(new View.OnClickListener() &#123;</div><div class="line">	@Override</div><div class="line">	public void onClick(View v) &#123;</div><div class="line">		handler.post(runnable);</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>运行结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">HandlerThreadActivity: Thread id = 10382</div><div class="line">HandlerThreadActivity: Thread id = 10382</div><div class="line">HandlerThreadActivity: Thread id = 10382</div></pre></td></tr></table></figure></p>
<p>可以知道是在子线程中处理的。</p>
<h1 id="HandlerThread和Thread的区别"><a href="#HandlerThread和Thread的区别" class="headerlink" title="HandlerThread和Thread的区别"></a>HandlerThread和Thread的区别</h1><ul>
<li>普通Thread主要用于在run()方法中执行一个耗时的任务</li>
<li>HandlerThread内部创建消息队列，需要handler消息方式来通知HandlerThread去执行一个具体的任务。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HandlerThread简介&quot;&gt;&lt;a href=&quot;#HandlerThread简介&quot; class=&quot;headerlink&quot; title=&quot;HandlerThread简介&quot;&gt;&lt;/a&gt;HandlerThread简介&lt;/h1&gt;&lt;p&gt;HandlerThread继承了Th
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="Thread" scheme="https://devallever.github.io/tags/Thread/"/>
    
      <category term="HandlerThread" scheme="https://devallever.github.io/tags/HandlerThread/"/>
    
  </entry>
  
  <entry>
    <title>OkHttp的简单使用</title>
    <link href="https://devallever.github.io/2017/06/30/okhttp-sample/"/>
    <id>https://devallever.github.io/2017/06/30/okhttp-sample/</id>
    <published>2017-06-30T12:07:13.000Z</published>
    <updated>2017-06-30T12:46:53.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OkHttp简介"><a href="#OkHttp简介" class="headerlink" title="OkHttp简介"></a>OkHttp简介</h1><p>关于Okhttp的简介，相信大家都不陌生了，这里就不讲了。</p>
<h1 id="初级用法"><a href="#初级用法" class="headerlink" title="初级用法"></a>初级用法</h1><h2 id="Get请求"><a href="#Get请求" class="headerlink" title="Get请求"></a>Get请求</h2><p>比如这里的使用get方法进行登录操作<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doLoginGet</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">final</span> String url = <span class="string">"xxxxx?username=allever?password=123456"</span></div><div class="line">    OkHttpUtil.loginGet(url, <span class="keyword">new</span> Callback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, <span class="keyword">final</span> Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">            handleLogin(response.body().string(););</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>loginGet方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loginGet</span><span class="params">(String url, Callback callback)</span></span>&#123;</div><div class="line">    OkHttpClient client = <span class="keyword">new</span> OkHttpClient();</div><div class="line">    Request request = <span class="keyword">new</span> Request.Builder()</div><div class="line">            .url(url)</div><div class="line">            .build();</div><div class="line">    client.newCall(request).enqueue(callback);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>是不是很简单，创建OkhttpClient实例，创建请求，然后执行请求，然后进行回调</p>
<p>处理结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">private void handleLogin(final String result)&#123;</div><div class="line">    runOnUiThread(new Runnable() &#123;</div><div class="line">        @Override</div><div class="line">        public void run() &#123;</div><div class="line">            Gson gson = new Gson();</div><div class="line">            LoginRoot loginRoot = gson.fromJson(result,LoginRoot.class);</div><div class="line">            User user = loginRoot.getUser();</div><div class="line">            tv_result.setText(user.getNickname() + &quot;\n&quot; + user.getSignature());</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>因为回调方法在子线程中，所以要切回到主线程中，方法有很多，可以使用Handler，这里直接runOnUiThread()就好了。简单起见，另外Gson处理json数据不在讨论范围之内，</p>
<h2 id="Post请求"><a href="#Post请求" class="headerlink" title="Post请求"></a>Post请求</h2><p>例子同上，登录操作<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doLoginPost</span><span class="params">()</span></span>&#123;</div><div class="line">    OkHttpUtil.loginPost(username, password, <span class="keyword">new</span> Callback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">            handleLogin(response.body().string());</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">public static void loginPost(String username, String password, Callback callback)&#123;</div><div class="line">    String url = BASE_URL + &quot;LoginServlet&quot;;</div><div class="line">    OkHttpClient client = new OkHttpClient();</div><div class="line">    FormBody.Builder builder = new FormBody.Builder();</div><div class="line">    builder.add(&quot;username&quot;,username);</div><div class="line">    RequestBody requestBody = builder.build();</div><div class="line">    Request request = new Request.Builder()</div><div class="line">            .url(url)</div><div class="line">            .post(requestBody)</div><div class="line">            .build();</div><div class="line">    client.newCall(request).enqueue(callback);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>唯一不同的就是这里啦，首先还是创建OkhttpClient实例，这里使用了FormBody表单, 用这个表单创建请求体，然后创建请求，最后执行请求，回调<br>最后的处理方法同上。</p>
<h2 id="异步请求"><a href="#异步请求" class="headerlink" title="异步请求"></a>异步请求</h2><p>上面两个例子都是异步请求，因为不用咋们手动开启子线程，它会自动的开启线程去处理的</p>
<h2 id="同步请求"><a href="#同步请求" class="headerlink" title="同步请求"></a>同步请求</h2><p>例如，退出登录的例子<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doLogoutTongBu</span><span class="params">()</span></span>&#123;</div><div class="line">        OkHttpUtil.logoutTongBu(handler);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">logoutTongBu</span><span class="params">(<span class="keyword">final</span> Handler handler)</span></span>&#123;</div><div class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            String url = <span class="string">"xxxxx/logout"</span>;</div><div class="line">            OkHttpClient client = <span class="keyword">new</span> OkHttpClient();</div><div class="line">            FormBody.Builder builder = <span class="keyword">new</span> FormBody.Builder();</div><div class="line">            <span class="keyword">if</span> (!SharePreferenceUtil.getSessionId().equals(<span class="string">""</span>))&#123;</div><div class="line">                RequestBody requestBody = builder.build();</div><div class="line">                Request request = <span class="keyword">new</span> Request.Builder()</div><div class="line">                        .url(url)</div><div class="line">                        .post(requestBody)</div><div class="line">                        .addHeader(<span class="string">"Cookie"</span>, <span class="string">"JSESSIONID="</span> + SharePreferenceUtil.getSessionId())</div><div class="line">                        .build();</div><div class="line">                Response response = <span class="keyword">null</span>;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    response = client.newCall(request).execute();</div><div class="line">                    String result = response.body().string();</div><div class="line">                    Message message = <span class="keyword">new</span> Message();</div><div class="line">                    message.what = MESSAGE_LOGOUT;</div><div class="line">                    message.obj = result;</div><div class="line">                    handler.sendMessage(message);</div><div class="line">                &#125;<span class="keyword">catch</span> (IOException ioe)&#123;</div><div class="line">                    ioe.printStackTrace();</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;<span class="keyword">else</span> &#123;</div><div class="line">                Message message = <span class="keyword">new</span> Message();</div><div class="line">                message.what = MESSAGE_LOGOUT;</div><div class="line">                message.obj = <span class="string">"未登录"</span>;</div><div class="line">                handler.sendMessage(message);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;).start();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里手动开启了一个线程进行网络请求，还是使用Post方法，跟上面的没啥区别，注意这里<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">addHeader(&quot;Cookie&quot;, &quot;JSESSIONID=&quot; + SharePreferenceUtil.getSessionId())</div></pre></td></tr></table></figure></p>
<p>添加Cookie的头部信息，Cookie就是用来持久化用户登录<br>还有就是执行请求的方法有些区别，同步执行是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">response = client.newCall(request).execute();</div></pre></td></tr></table></figure></p>
<p>异步执行是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">client.newCall(request).enqueue(callback);</div></pre></td></tr></table></figure></p>
<p>同步执行的结果为Response对象，就是服务器返回的数据</p>
<h1 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h1><h2 id="上传文件和表单数据"><a href="#上传文件和表单数据" class="headerlink" title="上传文件和表单数据"></a>上传文件和表单数据</h2><p>例如发一条说说，包括图片和文字<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doAddNews</span><span class="params">(String content)</span></span>&#123;</div><div class="line">    OkHttpUtil.addNews(content, <span class="keyword">new</span> Callback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">            Log.d(TAG, <span class="string">"onResponse: result = "</span> + response.body().string());</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">public static void addNews(String content,Callback callback)&#123;</div><div class="line">    OkHttpClient client = new OkHttpClient();</div><div class="line">    MultipartBody multipartBody = new MultipartBody.Builder()</div><div class="line">            .setType(MultipartBody.FORM)</div><div class="line">            .addFormDataPart(&quot;content&quot;,content)</div><div class="line">            .addFormDataPart(&quot;city&quot;,&quot;番禺&quot;)</div><div class="line">            .addFormDataPart(&quot;longitude&quot;,&quot;111.22&quot;)</div><div class="line">            .addFormDataPart(&quot;latitude&quot;,&quot;22.22&quot;)</div><div class="line">            .addPart(Headers.of(&quot;Content-Disposition&quot;,</div><div class="line">                    &quot;form-data; name=\&quot;part1&quot;+ &quot;\&quot;&quot;),</div><div class="line">                    RequestBody.create(</div><div class="line">                            MediaType.parse(&quot;application/octet-stream&quot;),</div><div class="line">                            new File(Environment.getExternalStorageDirectory().getPath()+&quot;/&quot;,&quot;jiaxin.png&quot;)))</div><div class="line">            .build();</div><div class="line"></div><div class="line">    if (SharePreferenceUtil.getSessionId().equals(&quot;&quot;))&#123;</div><div class="line">    &#125;</div><div class="line">    Request request = new Request.Builder()</div><div class="line">            .url(BASE_URL + &quot;AddNewsServlet&quot;)</div><div class="line">            .post(multipartBody)</div><div class="line">            .addHeader(&quot;Cookie&quot;, &quot;JSESSIONID=&quot; + SharePreferenceUtil.getSessionId())</div><div class="line">            .build();</div><div class="line"></div><div class="line">    client.newCall(request).enqueue(callback);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>设置表单类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">setType(MultipartBody.FORM)</div></pre></td></tr></table></figure></p>
<p>使用MultipartBody对象把表单数据和文件数据形式封装，表单使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">addFormDataPart(&quot;content&quot;,content)</div></pre></td></tr></table></figure></p>
<p>用键值对保存</p>
<p>文件用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">.addPart(Headers.of(&quot;Content-Disposition&quot;,</div><div class="line">                        &quot;form-data; name=\&quot;part1&quot;+ &quot;\&quot;&quot;),</div><div class="line">                        RequestBody.create(</div><div class="line">                                MediaType.parse(&quot;application/octet-stream&quot;),</div><div class="line">                                fileObject))</div></pre></td></tr></table></figure></p>
<p>其中：part1是服务器根据键找到part的那个键<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">request.getPart(&quot;part1&quot;);</div></pre></td></tr></table></figure></p>
<p>如果多文件的话就多次调用addPart()</p>
<blockquote>
<p>必须设置表单类型</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">setType(MultipartBody.FORM)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;OkHttp简介&quot;&gt;&lt;a href=&quot;#OkHttp简介&quot; class=&quot;headerlink&quot; title=&quot;OkHttp简介&quot;&gt;&lt;/a&gt;OkHttp简介&lt;/h1&gt;&lt;p&gt;关于Okhttp的简介，相信大家都不陌生了，这里就不讲了。&lt;/p&gt;
&lt;h1 id=&quot;初级用法
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="Network" scheme="https://devallever.github.io/tags/Network/"/>
    
      <category term="OkHttp" scheme="https://devallever.github.io/tags/OkHttp/"/>
    
  </entry>
  
  <entry>
    <title>社交圈</title>
    <link href="https://devallever.github.io/2017/06/21/social-app/"/>
    <id>https://devallever.github.io/2017/06/21/social-app/</id>
    <published>2017-06-21T13:17:26.000Z</published>
    <updated>2017-06-24T11:45:08.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h1><p>一款社交 APP<br>附近人模块:中可以关注,聊天,加好友,好友分组管理。查找,筛选用户<br>动态模块:可以,点赞,评论。可以发布语音动态,和语音评论并且实时通知。<br>聊天模块,集成环信 IM。文本,表情,图片,位置,语音通话,视频聊天。设置在<br>线状态,离开自动回复。<br>推荐模块包括热点(浏览量最多的动态)、圈子(好友的动态)、定位(查看好友登录地<br>理位置)<br>通知模块:使用极光推送。刷新,发布动态,评论,点赞,好友请求。<br>其他功能:查看关注用户,粉丝用户,谁看过我,照片墙。</p>
<h1 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h1><ul>
<li>发现<ul>
<li>用户<ul>
<li>查看用户资料</li>
<li>查找用户</li>
<li>添加好友 删除好友</li>
<li>关注</li>
<li>聊天</li>
</ul>
</li>
<li>动态<ul>
<li>查看动态详细信息</li>
<li>发布动态</li>
<li>评论</li>
<li>点赞</li>
</ul>
</li>
</ul>
</li>
<li>聊天<ul>
<li>消息列表</li>
<li>好友管理<ul>
<li>分组管理：添加分组，删除分组，修改分组</li>
<li>修改好友备注，移动分组</li>
</ul>
</li>
</ul>
</li>
<li>推荐<ul>
<li>热点：浏览量最多的动态</li>
<li>圈子：好友的动态</li>
<li>足迹(定位)：好友位置</li>
</ul>
</li>
<li>我的<ul>
<li>修改用户资料</li>
<li>修改在线状态</li>
<li>动态数，关注数，粉丝数</li>
<li>照片墙：添加照片，删除照片</li>
<li>访客：访问主页，访问动态</li>
<li>设置：视频聊天，清理缓存，自动回复</li>
</ul>
</li>
</ul>
<h1 id="功能实现细节"><a href="#功能实现细节" class="headerlink" title="功能实现细节"></a>功能实现细节</h1><h1 id="欢迎界面"><a href="#欢迎界面" class="headerlink" title="欢迎界面"></a>欢迎界面</h1><h1 id="登录-注册"><a href="#登录-注册" class="headerlink" title="登录-注册"></a>登录-注册</h1><h1 id="刷刷"><a href="#刷刷" class="headerlink" title="刷刷"></a>刷刷</h1><h1 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h1><h2 id="发现"><a href="#发现" class="headerlink" title="发现"></a>发现</h2><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><h4 id="用户列表"><a href="#用户列表" class="headerlink" title="用户列表"></a>用户列表</h4><h4 id="查找用户"><a href="#查找用户" class="headerlink" title="查找用户"></a>查找用户</h4><h4 id="用户资料"><a href="#用户资料" class="headerlink" title="用户资料"></a>用户资料</h4><h4 id="添加好友"><a href="#添加好友" class="headerlink" title="添加好友"></a>添加好友</h4><h4 id="删除好友"><a href="#删除好友" class="headerlink" title="删除好友"></a>删除好友</h4><h4 id="关注-粉丝数"><a href="#关注-粉丝数" class="headerlink" title="关注-粉丝数"></a>关注-粉丝数</h4><h3 id="动态"><a href="#动态" class="headerlink" title="动态"></a>动态</h3><h4 id="发布动态"><a href="#发布动态" class="headerlink" title="发布动态"></a>发布动态</h4><h4 id="查看动态"><a href="#查看动态" class="headerlink" title="查看动态"></a>查看动态</h4><h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><h4 id="点赞"><a href="#点赞" class="headerlink" title="点赞"></a>点赞</h4><h4 id="查看大图"><a href="#查看大图" class="headerlink" title="查看大图"></a>查看大图</h4><h2 id="聊天"><a href="#聊天" class="headerlink" title="聊天"></a>聊天</h2><h3 id="好友管理"><a href="#好友管理" class="headerlink" title="好友管理"></a>好友管理</h3><h4 id="好友列表"><a href="#好友列表" class="headerlink" title="好友列表"></a>好友列表</h4><h4 id="分组管理"><a href="#分组管理" class="headerlink" title="分组管理"></a>分组管理</h4><h4 id="添加分组"><a href="#添加分组" class="headerlink" title="添加分组"></a>添加分组</h4><h4 id="修改分组"><a href="#修改分组" class="headerlink" title="修改分组"></a>修改分组</h4><h4 id="删除分组"><a href="#删除分组" class="headerlink" title="删除分组"></a>删除分组</h4><h4 id="移动分组"><a href="#移动分组" class="headerlink" title="移动分组"></a>移动分组</h4><h4 id="修改备注"><a href="#修改备注" class="headerlink" title="修改备注"></a>修改备注</h4><p>##推荐</p>
<h3 id="热点"><a href="#热点" class="headerlink" title="热点"></a>热点</h3><h3 id="圈子"><a href="#圈子" class="headerlink" title="圈子"></a>圈子</h3><h3 id="足迹-定位"><a href="#足迹-定位" class="headerlink" title="足迹(定位)"></a>足迹(定位)</h3><h3 id="排行榜"><a href="#排行榜" class="headerlink" title="排行榜"></a>排行榜</h3><h2 id="我的"><a href="#我的" class="headerlink" title="我的"></a>我的</h2><h3 id="修改用户资料"><a href="#修改用户资料" class="headerlink" title="修改用户资料"></a>修改用户资料</h3><h3 id="修改在线状态"><a href="#修改在线状态" class="headerlink" title="修改在线状态"></a>修改在线状态</h3><h3 id="照片墙"><a href="#照片墙" class="headerlink" title="照片墙"></a>照片墙</h3><h3 id="访客"><a href="#访客" class="headerlink" title="访客"></a>访客</h3><h3 id="动态数-关注数-粉丝数"><a href="#动态数-关注数-粉丝数" class="headerlink" title="动态数-关注数-粉丝数"></a>动态数-关注数-粉丝数</h3><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><h4 id="视频聊天"><a href="#视频聊天" class="headerlink" title="视频聊天"></a>视频聊天</h4><h4 id="清理缓存"><a href="#清理缓存" class="headerlink" title="清理缓存"></a>清理缓存</h4><h4 id="自动回复"><a href="#自动回复" class="headerlink" title="自动回复"></a>自动回复</h4>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;项目简介&quot;&gt;&lt;a href=&quot;#项目简介&quot; class=&quot;headerlink&quot; title=&quot;项目简介&quot;&gt;&lt;/a&gt;项目简介&lt;/h1&gt;&lt;p&gt;一款社交 APP&lt;br&gt;附近人模块:中可以关注,聊天,加好友,好友分组管理。查找,筛选用户&lt;br&gt;动态模块:可以,点赞,评论
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="Project" scheme="https://devallever.github.io/tags/Project/"/>
    
      <category term="社交" scheme="https://devallever.github.io/tags/%E7%A4%BE%E4%BA%A4/"/>
    
  </entry>
  
  <entry>
    <title>深入理解Java垃圾回收机制</title>
    <link href="https://devallever.github.io/2017/06/11/java-gc/"/>
    <id>https://devallever.github.io/2017/06/11/java-gc/</id>
    <published>2017-06-11T02:43:45.000Z</published>
    <updated>2017-06-15T05:26:47.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="垃圾回收机制的意义"><a href="#垃圾回收机制的意义" class="headerlink" title="垃圾回收机制的意义"></a>垃圾回收机制的意义</h1><p>Java语言中一个显著的特点就是引入了垃圾回收机制，使c++程序员最头疼的内存管理的问题迎刃而解，它使得Java程序员在编写程序的时候不再需要考虑内存管理。由于有个垃圾回收机制，Java中的对象不再有“作用域”的概念，只有对象的引用才有“作用域”。垃圾回收可以有效的防止内存泄露，有效的使用空闲的内存。  </p>
<p>　　ps:内存泄露是指该内存空间使用完毕之后未回收，在不涉及复杂数据结构的一般情况下，Java 的内存泄露表现为一个内存对象的生命周期超出了程序需要它的时间长度，我们有时也将其称为“对象游离”。
　　</p>
<h1 id="垃圾回收机制中的算法"><a href="#垃圾回收机制中的算法" class="headerlink" title="垃圾回收机制中的算法"></a>垃圾回收机制中的算法</h1><p>　Java语言规范没有明确地说明JVM使用哪种垃圾回收算法，但是任何一种垃圾回收算法一般要做2件基本的事情：<br>　（1）发现无用信息对象；<br>　（2）回收被无用对象占用的内存空间，使该空间可被程序再次使用。
　</p>
<h1 id="Jvm-Java虚拟机-内存模型"><a href="#Jvm-Java虚拟机-内存模型" class="headerlink" title="Jvm(Java虚拟机)内存模型"></a>Jvm(Java虚拟机)内存模型</h1><p>在了解垃圾回收算法之前先简单了解一下jvm内存模型.<br>从Jvm内存模型中入手对于理解GC会有很大的帮助，不过这里只需要了解一个大概，说多了反而混淆视线。  </p>
<p>Jvm(Java虚拟机)主要管理两种类型内存：堆和非堆。</p>
<ul>
<li>堆是运行时数据区域，所有类实例和数组的内存均从此处分配。</li>
<li>非堆是JVM留给自己用的，包含方法区、JVM内部处理或优化所需的内存（如 JIT Compiler，Just-in-time Compiler，即时编译后的代码缓存）、每个类结构（如运行时常数池、字段和方法数据）以及方法和构造方法的代码。</li>
</ul>
<p>简言之，Java程序内存主要（这里强调主要二字）分两部分，堆和非堆。大家一般new的对象和数组都是在堆中的，而GC主要回收的内存也是这块堆内存。  </p>
<p>配一张示意图总结一下：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://www.jayfeng.com/images/gc_jvm_memory.gif" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<blockquote>
<p>堆内存（Heap Memory）： 存放Java对象<br>非堆内存（Non-Heap Memory）： 存放类加载信息和其它meta-data<br>其它（Other）： 存放JVM 自身代码等</p>
</blockquote>
<p>重点是堆内存，我们就再看看堆的内存模型。</p>
<ul>
<li>堆内存由垃圾回收器的自动内存管理系统回收。</li>
<li>堆内存分为两大部分：新生代和老年代。比例为1：2。</li>
<li>老年代主要存放应用程序中生命周期长的存活对象。</li>
<li>新生代又分为三个部分：一个Eden区和两个Survivor区，比例为8：1：1。</li>
<li>Eden区存放新生的对象。</li>
<li>Survivor存放每次垃圾回收后存活的对象。</li>
</ul>
<p><img src="http://www.jayfeng.com/images/gc_heap.png" alt=""></p>
<p>其实只需要关注这几个问题:</p>
<ul>
<li>为什么要分新生代和老年代？</li>
<li>新生代为什么分一个Eden区和两个Survivor区?</li>
<li>一个Eden区和两个Survivor区的比例为什么是8:1:1？</li>
</ul>
<p>现在还不能解释为什么，但这几个问题都是垃圾回收机制所采用的算法决定的。<br>所以问题转化为，是何种算法？为什么要采用此种算法？</p>
<h1 id="可回收对象的判定"><a href="#可回收对象的判定" class="headerlink" title="可回收对象的判定"></a>可回收对象的判定</h1><p>讲算法之前，我们先要搞清楚一个问题，什么样的对象是垃圾（无用对象），需要被回收？<br>目前市面上有两种算法用来判定一个对象是否为垃圾。</p>
<ul>
<li>引用计数算法</li>
<li>可达性分析算法（根搜索算法）</li>
</ul>
<h2 id="引用计数法-Reference-Counting-Collector"><a href="#引用计数法-Reference-Counting-Collector" class="headerlink" title="引用计数法(Reference Counting Collector)"></a>引用计数法(Reference Counting Collector)</h2><h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><p>引用计数是垃圾收集器中的早期策略。在这种方法中，堆中每个对象实例都有一个引用计数。当一个对象被创建时，且将该对象实例分配给一个变量，该变量计数设置为1。当任何其它变量被赋值为这个对象的引用时，计数加1（a = b,则b引用的对象实例的计数器+1），但当一个对象实例的某个引用超过了生命周期或者被设置为一个新值时，对象实例的引用计数器减1。任何引用计数器为0的对象实例可以被当作垃圾收集。当一个对象实例被垃圾收集时，它引用的任何对象实例的引用计数器减1。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://www.jayfeng.com/images/gc_recycled_object.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><ul>
<li>优点: 简单，高效<br>引用计数收集器可以很快的执行，交织在程序运行中。对程序需要不被长时间打断的实时环境比较有利。</li>
<li>缺点: 无法检测出循环引用<br> 如父对象有一个对子对象的引用，子对象反过来引用父对象。这样，他们的引用计数永远不可能为0.</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        MyObject object1 = <span class="keyword">new</span> MyObject();</div><div class="line">        MyObject object2 = <span class="keyword">new</span> MyObject();</div><div class="line">         </div><div class="line">        object1.object = object2;</div><div class="line">        object2.object = object1;</div><div class="line">         </div><div class="line">        object1 = <span class="keyword">null</span>;</div><div class="line">        object2 = <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后面两句将object1和object2赋值为null，也就是说object1和object2指向的对象已经不可能再被访问，但是由于它们互相引用对方，导致它们的引用计数器都不为0，那么垃圾收集器就永远不会回收它们。</p>
<h2 id="可达性分析算法（根搜索算法）"><a href="#可达性分析算法（根搜索算法）" class="headerlink" title="可达性分析算法（根搜索算法）"></a>可达性分析算法（根搜索算法）</h2><h3 id="算法分析-1"><a href="#算法分析-1" class="headerlink" title="算法分析"></a>算法分析</h3><p>根搜索算法是从离散数学中的图论引入的，程序把所有的引用关系看作一张图，从一个节点GC ROOT开始，寻找对应的引用节点，找到这个节点以后，继续寻找这个节点的引用节点，当所有的引用节点寻找完毕之后，剩余的节点则被认为是没有被引用到的节点，即无用的节点。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://images0.cnblogs.com/blog2015/694841/201506/141050566294022.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>java中可作为GC Root的对象有:</p>
<ul>
<li>虚拟机栈中引用的对象（本地变量表）</li>
<li>方法区中静态属性引用的对象</li>
<li>方法区中常量引用的对象</li>
<li>本地方法栈中引用的对象（Native对象）</li>
</ul>
<h3 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h3><ul>
<li>优点:<br>  解决循环引用问题</li>
<li>缺点:</li>
</ul>
<h1 id="Stop-The-World"><a href="#Stop-The-World" class="headerlink" title="Stop The World"></a>Stop The World</h1><p>在学习GC前，你应该知道一个技术名词:这个词是“stop-the-world。“ 无论你选择哪种GC算法，Stop-the-world都会发生。Stop-the-world意味着JVM停止应用程序，而去进行垃圾回收。当stop-the-world发生时，除了进行垃圾回收的线程，其他所有线程都将停止运行。被中断的任务将在GC任务完成后恢复执行。GC调优往往意味着减少stop-the-world的时间.  </p>
<p>垃圾回收的时候，需要整个的引用状态保持不变，否则判定是判定垃圾，等我稍后回收的时候它又被引用了，这就全乱套了。所以，GC的时候，其他所有的程序执行处于暂停状态，卡住了。  </p>
<p>幸运的是，这个卡顿是非常短（尤其是新生代），对程序的影响微乎其微 （关于其他GC比如并发GC之类的，在此不讨论）。<br>所以GC的卡顿问题由此而来，也是情有可原，暂时无可避免。</p>
<h1 id="垃圾回收算法"><a href="#垃圾回收算法" class="headerlink" title="垃圾回收算法"></a>垃圾回收算法</h1><h2 id="标记清除算法-Mark-Sweep"><a href="#标记清除算法-Mark-Sweep" class="headerlink" title="标记清除算法 (Mark-Sweep)"></a>标记清除算法 (Mark-Sweep)</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>分为两个阶段: 标记阶段(Mark) 和清除阶段(Sweep):</p>
<ul>
<li>标记阶段:<br>  collector从mutator根对象开始进行遍历，对从mutator根对象可以访问到的对象都打上一个标识，一般是在对象的header中，将其记录为可达对象。</li>
<li>清除阶段:<br>  collector对堆内存(heap memory)从头到尾进行线性的遍历，如果发现某个对象没有标记为可达对象-通过读取对象的header信息，则就将其回收。</li>
</ul>
<blockquote>
<p>collector指的就是垃圾收集器，而mutator是指除了垃圾收集器之外的部分，比如说我们应用程序本身。mutator的职责一般是NEW(分配内存),READ(从内存中读取内容),WRITE(将内容写入内存)，而collector则就是回收不再使用的内存来供mutator进行NEW操作的使用。<br>mutator根对象一般指的是分配在堆内存之外，可以直接被mutator直接访问到的对象，一般是指静态/全局变量以及Thread-Local变量<br>可达对象的定义，从mutator根对象开始进行遍历，可以被访问到的对象都称为是可达对象。这些对象也是mutator(你的应用程序)正在使用的对象。</p>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://www.processon.com/chart_image/530043e10cf2a3dc99dd9439.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h3 id="优缺点-2"><a href="#优缺点-2" class="headerlink" title="优缺点"></a>优缺点</h3><ul>
<li>优点:简单,容易实现</li>
<li>缺点:容易产生内存碎片，碎片太多可能会导致后续过程中需要为大对象分配空间时无法找到足够的空间而提前触发新的一次垃圾收集动作。</li>
</ul>
<h2 id="复制算法-Copying"><a href="#复制算法-Copying" class="headerlink" title="复制算法 (Copying)"></a>复制算法 (Copying)</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p>复制算法将内存划分为两个区间,活动区和空闲区，在任意时间点，所有动态分配的对象都只能分配在活动区<br>当有效内存空间耗尽时，JVM将暂停程序运行，开启复制算法GC线程。接下来GC线程会将活动区间内的存活对象，全部复制到空闲区间，且严格按照内存地址依次排列，与此同时，GC线程将更新存活对象的内存引用地址指向新的内存地址。<br>此时，空闲区间已经与活动区间交换，而垃圾对象现在已经全部留在了原来的活动区间，也就是现在的空闲区间。事实上，在活动区间转换为空间区间的同时，垃圾对象已经被一次性全部回收。</p>
<p>清理前:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://images.cnitblog.com/blog/558323/201308/20004315-b6d8b69879b94b518e98b5854b12f0f1.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>清理后:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://images.cnitblog.com/blog/558323/201308/20004628-0ff08e1b8cd04e448703b01f0461e266.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<blockquote>
<p>通俗的讲,就是:<br>    复制算法将可用内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块的内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用的内存空间一次清理掉，这样一来就不容易出现内存碎片的问题。</p>
</blockquote>
<p><img src="http://jayfeng.com/images/gc_copying.png" alt=""></p>
<h3 id="优缺点-3"><a href="#优缺点-3" class="headerlink" title="优缺点"></a>优缺点</h3><ul>
<li>优点:实现简单，运行高效且不容易产生内存碎片</li>
<li>缺点:浪费内存</li>
</ul>
<h2 id="标记整理算法-Mark-Compact"><a href="#标记整理算法-Mark-Compact" class="headerlink" title="标记整理算法 (Mark-Compact)"></a>标记整理算法 (Mark-Compact)</h2><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><p>分为两个阶段: 标记阶段(Mark) 和整理阶段(Compact)</p>
<ul>
<li>标记阶段: 与标记/清除算法是一模一样</li>
<li>整理阶段: 移动所有存活的对象，且按照内存地址次序依次排列，然后将末端内存地址以后的内存全部回收。</li>
</ul>
<p>标记-整理算法采用标记-清除算法一样的方式进行对象的标记，但在清除时不同，在回收不存活的对象占用的空间后，会将所有的存活对象往左端空闲空间移动，并更新对应的指针。标记-整理算法是在标记-清除算法的基础上，又进行了对象的移动，因此成本更高，但是却解决了内存碎片的问题。</p>
<h3 id="优缺点-4"><a href="#优缺点-4" class="headerlink" title="优缺点"></a>优缺点</h3><ul>
<li>优点: 标记/整理算法不仅可以弥补标记/清除算法当中，内存区域分散的缺点，也消除了复制算法当中，内存减半的高额代价</li>
<li>缺点: 低效</li>
</ul>
<h2 id="分代回收算法-Generational-Collector"><a href="#分代回收算法-Generational-Collector" class="headerlink" title="分代回收算法(Generational Collector)"></a>分代回收算法(Generational Collector)</h2><p>分代回收算法其实不算一种新的算法，而是根据复制算法和标记整理算法的的特点综合而成。这种综合是考虑到java的语言特性的。<br>这里重复一下两种老算法的适用场景：</p>
<ul>
<li>复制算法：适用于存活对象很少。回收对象多</li>
<li><p>适用用于存活对象多，回收对象少</p>
<p>复习下面这个图:</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://www.jayfeng.com/images/gc_heap.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
</li>
</ul>
<p>解析：</p>
<ul>
<li>堆内存分为两大部分：新生代和老年代。比例为1：2。</li>
<li>新生代又分为三个部分：一个Eden区和两个Survivor区，比例为8：1：1。</li>
<li>Eden区存放新生的对象。new</li>
<li>Survivor存放每次垃圾回收后存活的对象。</li>
<li>老年代主要存放应用程序中生命周期长的存活对象。</li>
</ul>
<h3 id="原理-过程"><a href="#原理-过程" class="headerlink" title="原理(过程)"></a>原理(过程)</h3><p>所有新生成的对象首先都是放在年轻代的。年轻代的目标就是尽可能快速的收集掉那些生命周期短的对象。</p>
<ul>
<li>分配对象时，保存在Eden区</li>
<li>Eden区满，触发GC(Minor GC), 将Eden区存活对象复制到一个survivor0区，然后清空Eden区</li>
<li>当这个survivor0区也存放满了时，则将eden区和survivor0区存活对象复制到另一个survivor1区，然后清空eden和这个survivor0区</li>
<li>此时survivor0区是空的，然后将survivor0区和survivor1区交换，即保持survivor1区为空， 如此往复</li>
<li>当survivor1区不足以存放 eden和survivor0的存活对象时，就将存活对象直接存放到老年代。若是老年代也满了就会触发一次Full GC，也就是新生代、老年代都进行回收</li>
</ul>
<h3 id="年轻代-年老代-持久代"><a href="#年轻代-年老代-持久代" class="headerlink" title="年轻代 年老代 持久代"></a>年轻代 年老代 持久代</h3><ul>
<li>年轻代(Young Generation)：<br>  所有新生成的对象首先都是放在年轻代的。年轻代的目标就是尽可能快速的收集掉那些生命周期短的对象。<br>  新生代发生的GC也叫做Minor GC，MinorGC发生频率比较高(不一定等Eden区满了才触发)</li>
<li>年老代(Old Generation)：<br>  年老代中存放的都是一些生命周期较长的对象。<br>  老年代内存满时触发Major GC即Full GC，Full GC发生频率比较低，老年代对象存活时间比较长，存活率标记高。</li>
<li>持久代(Permanent Generation)：<br>  用于存放静态文件，如Java类、方法等。持久代对垃圾回收没有显著影响，但是有些应用可能动态生成或者调用一些class，例如Hibernate 等，在这种时候需要设置一个比较大的持久代空间来存放这些运行过程中新增的类。</li>
</ul>
<h1 id="深入理解分代回收算法"><a href="#深入理解分代回收算法" class="headerlink" title="深入理解分代回收算法"></a>深入理解分代回收算法</h1><h2 id="为什么不是一块Survivor空间而是两块？"><a href="#为什么不是一块Survivor空间而是两块？" class="headerlink" title="为什么不是一块Survivor空间而是两块？"></a>为什么不是一块Survivor空间而是两块？</h2><p>这里涉及到一个新生代和老年代的存活周期的问题，比如一个对象在新生代经历15次（仅供参考）GC，就可以移到老年代了。问题来了，当我们第一次GC的时候，我们可以把Eden区的存活对象放到Survivor A空间，但是第二次GC的时候，Survivor A空间的存活对象也需要再次用Copying算法，放到Survivor B空间上，而把刚刚的Survivor A空间和Eden空间清除。第三次GC时，又把Survivor B空间的存活对象复制到Survivor A空间，如此反复。<br>所以，这里就需要两块Survivor空间来回倒腾</p>
<h2 id="为什么Eden空间这么大而Survivor空间要分的少一点？"><a href="#为什么Eden空间这么大而Survivor空间要分的少一点？" class="headerlink" title="为什么Eden空间这么大而Survivor空间要分的少一点？"></a>为什么Eden空间这么大而Survivor空间要分的少一点？</h2><p>新创建的对象都是放在Eden空间，这是很频繁的，尤其是大量的局部变量产生的临时对象，这些对象绝大部分都应该马上被回收，能存活下来被转移到survivor空间的往往不多。所以，设置较大的Eden空间和较小的Survivor空间是合理的，大大提高了内存的使用率，缓解了Copying算法的缺点。<br>我看8：1：1就挺好的，当然这个比例是可以调整的，包括上面的新生代和老年代的1：2的比例也是可以调整的。<br>新的问题又来了，从Eden空间往Survivor空间转移的时候Survivor空间不够了怎么办？直接放到老年代去</p>
<h1 id="垃圾收集器"><a href="#垃圾收集器" class="headerlink" title="垃圾收集器"></a>垃圾收集器</h1><ul>
<li>新生代收集器使用的收集器：Serial、PraNew、Parallel Scavenge</li>
<li>老年代收集器使用的收集器：Serial Old、Parallel Old、CMS</li>
</ul>
<p><img src="http://images0.cnblogs.com/blog2015/694841/201506/141513122384006.jpg" alt=""></p>
<h2 id="Serial收集器（复制算法"><a href="#Serial收集器（复制算法" class="headerlink" title="Serial收集器（复制算法)"></a>Serial收集器（复制算法)</h2><p>　　新生代单线程收集器，标记和清理都是单线程，优点是简单高效。</p>
<h2 id="Serial-Old收集器-标记-整理算法"><a href="#Serial-Old收集器-标记-整理算法" class="headerlink" title="Serial Old收集器(标记-整理算法)"></a>Serial Old收集器(标记-整理算法)</h2><p>　　老年代单线程收集器，Serial收集器的老年代版本。</p>
<h2 id="ParNew收集器-停止-复制算法"><a href="#ParNew收集器-停止-复制算法" class="headerlink" title="ParNew收集器(停止-复制算法)　"></a>ParNew收集器(停止-复制算法)　</h2><p>　　新生代收集器，可以认为是Serial收集器的多线程版本,在多核CPU环境下有着比Serial更好的表现。<br>Parallel Scavenge收集器(停止-复制算法)<br>并行收集器，追求高吞吐量，高效利用CPU。吞吐量一般为99%， 吞吐量= 用户线程时间/(用户线程时间+GC线程时间)。适合后台应用等对交互相应要求不高的场景。</p>
<h2 id="Parallel-Old收集器-停止-复制算法"><a href="#Parallel-Old收集器-停止-复制算法" class="headerlink" title="Parallel Old收集器(停止-复制算法)"></a>Parallel Old收集器(停止-复制算法)</h2><p>　　Parallel Scavenge收集器的老年代版本，并行收集器，吞吐量优先</p>
<h2 id="CMS-Concurrent-Mark-Sweep-收集器（标记-清理算法）"><a href="#CMS-Concurrent-Mark-Sweep-收集器（标记-清理算法）" class="headerlink" title="CMS(Concurrent Mark Sweep)收集器（标记-清理算法）"></a>CMS(Concurrent Mark Sweep)收集器（标记-清理算法）</h2><p>　　高并发、低停顿，追求最短GC回收停顿时间，cpu占用比较高，响应时间快，停顿时间短，多核cpu 追求高响应时间的选择</p>
<h1 id="GC的执行机制"><a href="#GC的执行机制" class="headerlink" title="GC的执行机制"></a>GC的执行机制</h1><h2 id="Scavenge-GC-Minor-GC"><a href="#Scavenge-GC-Minor-GC" class="headerlink" title="Scavenge GC(Minor GC)"></a>Scavenge GC(Minor GC)</h2><p>一般情况下，当新对象生成，并且在Eden申请空间失败时，就会触发Scavenge GC，对Eden区域进行GC，清除非存活对象，并且把尚且存活的对象移动到Survivor区。然后整理Survivor的两个区。这种方式的GC是对年轻代的Eden区进行，不会影响到年老代。因为大部分对象都是从Eden区开始的，同时Eden区不会分配的很大，所以Eden区的GC会频繁进行。因而，一般在这里需要使用速度快、效率高的算法，使Eden去能尽快空闲出来。</p>
<h2 id="Full-GC"><a href="#Full-GC" class="headerlink" title="Full GC"></a>Full GC</h2><p>对整个堆进行整理，包括Young、Tenured和Perm。Full GC因为需要对整个堆进行回收，所以比Scavenge GC要慢，因此应该尽可能减少Full GC的次数。在对JVM调优的过程中，很大一部分工作就是对于FullGC的调节。有如下原因可能导致Full GC：</p>
<ul>
<li>年老代（Tenured）被写满</li>
<li>持久代（Perm）被写满 </li>
<li>System.gc()被显示调用 </li>
<li>上一次GC之后Heap的各域分配策略动态变化</li>
</ul>
<blockquote>
<p>参考:</p>
<p><a href="http://www.cnblogs.com/sunniest/p/4575144.html" target="_blank" rel="external">深入理解java垃圾回收机制</a><br><a href="http://jayfeng.com/2016/03/11/%E7%90%86%E8%A7%A3Java%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/" target="_blank" rel="external">理解Java垃圾回收机制</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;垃圾回收机制的意义&quot;&gt;&lt;a href=&quot;#垃圾回收机制的意义&quot; class=&quot;headerlink&quot; title=&quot;垃圾回收机制的意义&quot;&gt;&lt;/a&gt;垃圾回收机制的意义&lt;/h1&gt;&lt;p&gt;Java语言中一个显著的特点就是引入了垃圾回收机制，使c++程序员最头疼的内存管理的
    
    </summary>
    
      <category term="Java" scheme="https://devallever.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://devallever.github.io/tags/Java/"/>
    
      <category term="GC" scheme="https://devallever.github.io/tags/GC/"/>
    
  </entry>
  
  <entry>
    <title>Adapter中的观察者模式</title>
    <link href="https://devallever.github.io/2017/06/02/observer-adapter/"/>
    <id>https://devallever.github.io/2017/06/02/observer-adapter/</id>
    <published>2017-06-02T01:02:15.000Z</published>
    <updated>2017-06-02T02:01:03.218Z</updated>
    
    <content type="html"><![CDATA[<p>当我们调用Adapter.notifyDataSetChanged()时候, 会调用被观察者的()方法，</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseAdapter</span> <span class="keyword">implements</span> <span class="title">ListAdapter</span>, <span class="title">SpinnerAdapter</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">//数据集被观察者</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DataSetObservable mDataSetObservable = <span class="keyword">new</span> DataSetObservable();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasStableIds</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerDataSetObserver</span><span class="params">(DataSetObserver observer)</span> </span>&#123;</div><div class="line">        mDataSetObservable.registerObserver(observer);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unregisterDataSetObserver</span><span class="params">(DataSetObserver observer)</span> </span>&#123;</div><div class="line">        mDataSetObservable.unregisterObserver(observer);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">        <span class="comment">/**</span></div><div class="line">     * Notifies the attached observers that the underlying data has been changed</div><div class="line">     * and any View reflecting the data set should refresh itself.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyDataSetChanged</span><span class="params">()</span> </span>&#123;</div><div class="line">    	<span class="comment">//通知观察者更新</span></div><div class="line">        mDataSetObservable.notifyChanged();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>//</p>
<p>在DataSetObservable.notifyChanged()方法中，遍历每个观察者，并调用观察者的onChanged()方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSetObservable</span> <span class="keyword">extends</span> <span class="title">Observable</span>&lt;<span class="title">DataSetObserver</span>&gt; </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Invokes &#123;<span class="doctag">@link</span> DataSetObserver#onChanged&#125; on each observer.</div><div class="line">     * Called when the contents of the data set have changed.  The recipient</div><div class="line">     * will obtain the new contents the next time it queries the data set.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyChanged</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">synchronized</span>(mObservers) &#123;</div><div class="line">            <span class="comment">// since onChanged() is implemented by the app, it could do anything, including</span></div><div class="line">            <span class="comment">// removing itself from &#123;@link mObservers&#125; - and that could cause problems if</span></div><div class="line">            <span class="comment">// an iterator is used on the ArrayList &#123;@link mObservers&#125;.</span></div><div class="line">            <span class="comment">// to avoid such problems, just march thru the list in the reverse order.</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = mObservers.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</div><div class="line">                mObservers.get(i).onChanged();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>//<br>这些观察者从哪里来的，又是什么时候绑定到DataSetObservable中的?<br>查看ListView的setAdapter()方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">  <span class="comment">/**</span></div><div class="line">   * Sets the data behind this ListView.</div><div class="line">   *</div><div class="line">   * The adapter passed to this method may be wrapped by a &#123;<span class="doctag">@link</span> WrapperListAdapter&#125;,</div><div class="line">   * depending on the ListView features currently in use. For instance, adding</div><div class="line">   * headers and/or footers will cause the adapter to be wrapped.</div><div class="line">   *</div><div class="line">   * <span class="doctag">@param</span> adapter The ListAdapter which is responsible for maintaining the</div><div class="line">   *        data backing this list and for producing a view to represent an</div><div class="line">   *        item in that data set.</div><div class="line">   *</div><div class="line">   * <span class="doctag">@see</span> #getAdapter() </div><div class="line">   */</div><div class="line">  <span class="meta">@Override</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAdapter</span><span class="params">(ListAdapter adapter)</span> </span>&#123;</div><div class="line">   <span class="comment">//如果已存在adapter先注销原来Adapter对应的观察者</span></div><div class="line">      <span class="keyword">if</span> (mAdapter != <span class="keyword">null</span> &amp;&amp; mDataSetObserver != <span class="keyword">null</span>) &#123;</div><div class="line">          mAdapter.unregisterDataSetObserver(mDataSetObserver);</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      resetList();</div><div class="line">      mRecycler.clear();</div><div class="line"></div><div class="line">      <span class="keyword">if</span> (mHeaderViewInfos.size() &gt; <span class="number">0</span>|| mFooterViewInfos.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">          mAdapter = wrapHeaderListAdapterInternal(mHeaderViewInfos, mFooterViewInfos, adapter);</div><div class="line">      &#125; <span class="keyword">else</span> &#123;</div><div class="line">          mAdapter = adapter;</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      mOldSelectedPosition = INVALID_POSITION;</div><div class="line">      mOldSelectedRowId = INVALID_ROW_ID;</div><div class="line"></div><div class="line">      <span class="comment">// AbsListView#setAdapter will update choice mode states.</span></div><div class="line">      <span class="keyword">super</span>.setAdapter(adapter);</div><div class="line"></div><div class="line">      <span class="keyword">if</span> (mAdapter != <span class="keyword">null</span>) &#123;</div><div class="line">          mAreAllItemsSelectable = mAdapter.areAllItemsEnabled();</div><div class="line">          mOldItemCount = mItemCount;</div><div class="line">          mItemCount = mAdapter.getCount();</div><div class="line">          checkFocus();</div><div class="line"></div><div class="line"><span class="comment">//创建一个数据集观察者</span></div><div class="line">          mDataSetObserver = <span class="keyword">new</span> AdapterDataSetObserver();</div><div class="line">          </div><div class="line">          	<span class="comment">//注册观察者</span></div><div class="line">          mAdapter.registerDataSetObserver(mDataSetObserver);</div><div class="line"></div><div class="line">          mRecycler.setViewTypeCount(mAdapter.getViewTypeCount());</div><div class="line"></div><div class="line">          <span class="keyword">int</span> position;</div><div class="line">          <span class="keyword">if</span> (mStackFromBottom) &#123;</div><div class="line">              position = lookForSelectablePosition(mItemCount - <span class="number">1</span>, <span class="keyword">false</span>);</div><div class="line">          &#125; <span class="keyword">else</span> &#123;</div><div class="line">              position = lookForSelectablePosition(<span class="number">0</span>, <span class="keyword">true</span>);</div><div class="line">          &#125;</div><div class="line">          setSelectedPositionInt(position);</div><div class="line">          setNextSelectedPositionInt(position);</div><div class="line"></div><div class="line">          <span class="keyword">if</span> (mItemCount == <span class="number">0</span>) &#123;</div><div class="line">              <span class="comment">// Nothing selected</span></div><div class="line">              checkSelectionChanged();</div><div class="line">          &#125;</div><div class="line">      &#125; <span class="keyword">else</span> &#123;</div><div class="line">          mAreAllItemsSelectable = <span class="keyword">true</span>;</div><div class="line">          checkFocus();</div><div class="line">          <span class="comment">// Nothing selected</span></div><div class="line">          checkSelectionChanged();</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      requestLayout();</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>///<br>AdapterDataSetObserver是AbsListView中定义的内部类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdapterDataSetObserver</span> <span class="keyword">extends</span> <span class="title">AdapterView</span>&lt;<span class="title">ListAdapter</span>&gt;.<span class="title">AdapterDataSetObserver</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChanged</span><span class="params">()</span> </span>&#123;</div><div class="line">    	<span class="comment">//调用父类的onChange()方法。</span></div><div class="line">        <span class="keyword">super</span>.onChanged();</div><div class="line">        <span class="keyword">if</span> (mFastScroll != <span class="keyword">null</span>) &#123;</div><div class="line">            mFastScroll.onSectionsChanged();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInvalidated</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onInvalidated();</div><div class="line">        <span class="keyword">if</span> (mFastScroll != <span class="keyword">null</span>) &#123;</div><div class="line">            mFastScroll.onSectionsChanged();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>而它又继承AdapterView的AdapterDataSetObserver<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">  <span class="class"><span class="keyword">class</span> <span class="title">AdapterDataSetObserver</span> <span class="keyword">extends</span> <span class="title">DataSetObserver</span> </span>&#123;</div><div class="line"></div><div class="line">      <span class="keyword">private</span> Parcelable mInstanceState = <span class="keyword">null</span>;</div><div class="line"></div><div class="line"><span class="comment">//最终调用</span></div><div class="line">      <span class="meta">@Override</span></div><div class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChanged</span><span class="params">()</span> </span>&#123;</div><div class="line">          mDataChanged = <span class="keyword">true</span>;</div><div class="line">          mOldItemCount = mItemCount;</div><div class="line">          mItemCount = getAdapter().getCount();</div><div class="line"></div><div class="line">          <span class="comment">// Detect the case where a cursor that was previously invalidated has</span></div><div class="line">          <span class="comment">// been repopulated with new data.</span></div><div class="line">          <span class="keyword">if</span> (AdapterView.<span class="keyword">this</span>.getAdapter().hasStableIds() &amp;&amp; mInstanceState != <span class="keyword">null</span></div><div class="line">                  &amp;&amp; mOldItemCount == <span class="number">0</span> &amp;&amp; mItemCount &gt; <span class="number">0</span>) &#123;</div><div class="line">              AdapterView.<span class="keyword">this</span>.onRestoreInstanceState(mInstanceState);</div><div class="line">              mInstanceState = <span class="keyword">null</span>;</div><div class="line">          &#125; <span class="keyword">else</span> &#123;</div><div class="line">              rememberSyncState();</div><div class="line">          &#125;</div><div class="line">          checkFocus();</div><div class="line">          requestLayout();</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="meta">@Override</span></div><div class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInvalidated</span><span class="params">()</span> </span>&#123;</div><div class="line">          mDataChanged = <span class="keyword">true</span>;</div><div class="line"></div><div class="line">          <span class="keyword">if</span> (AdapterView.<span class="keyword">this</span>.getAdapter().hasStableIds()) &#123;</div><div class="line">              <span class="comment">// Remember the current state for the case where our hosting activity is being</span></div><div class="line">              <span class="comment">// stopped and later restarted</span></div><div class="line">              mInstanceState = AdapterView.<span class="keyword">this</span>.onSaveInstanceState();</div><div class="line">          &#125;</div><div class="line"></div><div class="line">          <span class="comment">// Data is invalid so we should reset our state</span></div><div class="line">          mOldItemCount = mItemCount;</div><div class="line">          mItemCount = <span class="number">0</span>;</div><div class="line">          mSelectedPosition = INVALID_POSITION;</div><div class="line">          mSelectedRowId = INVALID_ROW_ID;</div><div class="line">          mNextSelectedPosition = INVALID_POSITION;</div><div class="line">          mNextSelectedRowId = INVALID_ROW_ID;</div><div class="line">          mNeedSync = <span class="keyword">false</span>;</div><div class="line"></div><div class="line">          checkFocus();</div><div class="line">          requestLayout();</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearSavedState</span><span class="params">()</span> </span>&#123;</div><div class="line">          mInstanceState = <span class="keyword">null</span>;</div><div class="line">      &#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p>
<p>我们只关注onChanged()方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChanged</span><span class="params">()</span> </span>&#123;</div><div class="line">    mDataChanged = <span class="keyword">true</span>;</div><div class="line">    mOldItemCount = mItemCount;</div><div class="line">    mItemCount = getAdapter().getCount();</div><div class="line"></div><div class="line">    <span class="comment">// Detect the case where a cursor that was previously invalidated has</span></div><div class="line">    <span class="comment">// been repopulated with new data.</span></div><div class="line">    <span class="keyword">if</span> (AdapterView.<span class="keyword">this</span>.getAdapter().hasStableIds() &amp;&amp; mInstanceState != <span class="keyword">null</span></div><div class="line">            &amp;&amp; mOldItemCount == <span class="number">0</span> &amp;&amp; mItemCount &gt; <span class="number">0</span>) &#123;</div><div class="line">        AdapterView.<span class="keyword">this</span>.onRestoreInstanceState(mInstanceState);</div><div class="line">        mInstanceState = <span class="keyword">null</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        rememberSyncState();</div><div class="line">    &#125;</div><div class="line">    checkFocus();</div><div class="line">    requestLayout();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>它会调用requestLayout()方法进行重新布局，从而刷新listvew(GridView ， AdapterView)界面</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当我们调用Adapter.notifyDataSetChanged()时候, 会调用被观察者的()方法，&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;li
    
    </summary>
    
      <category term="设计模式" scheme="https://devallever.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="设计模式" scheme="https://devallever.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="观察者模式" scheme="https://devallever.github.io/tags/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式(四) 抽象工厂模式</title>
    <link href="https://devallever.github.io/2017/05/25/abstract-factory-patterns/"/>
    <id>https://devallever.github.io/2017/05/25/abstract-factory-patterns/</id>
    <published>2017-05-25T01:03:48.000Z</published>
    <updated>2017-05-25T01:55:13.783Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><h1 id="UML类图"><a href="#UML类图" class="headerlink" title="UML类图"></a>UML类图</h1><h1 id="简单实现"><a href="#简单实现" class="headerlink" title="简单实现"></a>简单实现</h1><h2 id="最基本的数据访问程序"><a href="#最基本的数据访问程序" class="headerlink" title="最基本的数据访问程序"></a>最基本的数据访问程序</h2><h3 id="User表"><a href="#User表" class="headerlink" title="User表"></a>User表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">public class User &#123;</div><div class="line">    private int id;</div><div class="line">    private String name;</div><div class="line"></div><div class="line">    public int getId() &#123;</div><div class="line">        return id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setId(int id) &#123;</div><div class="line">        this.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getName() &#123;</div><div class="line">        return name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setName(String name) &#123;</div><div class="line">        this.name = name;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="SqlServerUser类"><a href="#SqlServerUser类" class="headerlink" title="SqlServerUser类"></a>SqlServerUser类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public class SqlServerUser &#123;</div><div class="line">    private static final String TAG = &quot;SqlServerUser&quot;;</div><div class="line">    public void insertUser(User user)&#123;</div><div class="line">        Log.d(TAG, &quot;insert: 在SQL Server中录入一个用户记录&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public User getUser(int id)&#123;</div><div class="line">        Log.d(TAG, &quot;getUser: 在SQL Server中获取一个用户记录&quot;);</div><div class="line">        return null;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="客户端调用"><a href="#客户端调用" class="headerlink" title="客户端调用"></a>客户端调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">User user = <span class="keyword">new</span> User();</div><div class="line">user.setId(<span class="number">1</span>);</div><div class="line">user.setName(<span class="string">"Allever"</span>);</div><div class="line">SqlServerUser sqlServerUser = <span class="keyword">new</span> SqlServerUser();</div><div class="line">sqlServerUser.insertUser(user);</div><div class="line">sqlServerUser.getUser(<span class="number">1</span>);</div></pre></td></tr></table></figure>
<p>如果换为MySQL数据库改动就很多</p>
<h2 id="使用工厂方法改进"><a href="#使用工厂方法改进" class="headerlink" title="使用工厂方法改进"></a>使用工厂方法改进</h2><h3 id="IUser接口"><a href="#IUser接口" class="headerlink" title="IUser接口"></a>IUser接口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public interface IUser &#123;</div><div class="line">    void insertUser(User user);</div><div class="line">    User getUser(int id);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="SqlServerUser类-1"><a href="#SqlServerUser类-1" class="headerlink" title="SqlServerUser类"></a>SqlServerUser类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">public class SqlServerUser implements IUser &#123;</div><div class="line"></div><div class="line">    private static final String TAG = &quot;SqlServerUser&quot;;</div><div class="line">    @Override</div><div class="line">    public void insertUser(User user)&#123;</div><div class="line">        Log.d(TAG, &quot;insert: 在SQL Server中录入一个用户记录&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public User getUser(int id)&#123;</div><div class="line">        Log.d(TAG, &quot;getUser: 在SQL Server中获取一个用户记录&quot;);</div><div class="line">        return null;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="MySQLUser类"><a href="#MySQLUser类" class="headerlink" title="MySQLUser类"></a>MySQLUser类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">public class MySQLUser implements IUser &#123;</div><div class="line">    private static final String TAG = &quot;MySQLUser&quot;;</div><div class="line">    @Override</div><div class="line">    public void insertUser(User user)&#123;</div><div class="line">        Log.d(TAG, &quot;insert: 在MySQL Server中录入一个用户记录&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public User getUser(int id)&#123;</div><div class="line">        Log.d(TAG, &quot;getUser: 在MySQL Server中获取一个用户记录&quot;);</div><div class="line">        return null;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="IFactory抽象工厂接口"><a href="#IFactory抽象工厂接口" class="headerlink" title="IFactory抽象工厂接口"></a>IFactory抽象工厂接口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">public interface IFactory &#123;</div><div class="line">    IUser createUser();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="SqlServerFactory具体工厂类"><a href="#SqlServerFactory具体工厂类" class="headerlink" title="SqlServerFactory具体工厂类"></a>SqlServerFactory具体工厂类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">public class SqlServerFactory implements IFactory &#123;</div><div class="line">    @Override</div><div class="line">    public IUser createUser() &#123;</div><div class="line">        return new SqlServerUser();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="MySQLServerFactory具体工厂"><a href="#MySQLServerFactory具体工厂" class="headerlink" title="MySQLServerFactory具体工厂"></a>MySQLServerFactory具体工厂</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">public class MySQLServerFactory implements IFactory &#123;</div><div class="line">    @Override</div><div class="line">    public IUser createUser() &#123;</div><div class="line">        return new MySQLUser();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="客户端调用-1"><a href="#客户端调用-1" class="headerlink" title="客户端调用"></a>客户端调用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">User user = new User();</div><div class="line">user.setId(1);</div><div class="line">user.setName(&quot;Allever&quot;);</div><div class="line"></div><div class="line">IFactory factory = new SqlServerFactory();</div><div class="line">IUser iUser = factory.createUser();</div><div class="line">iUser.insertUser(user);</div><div class="line">iUser.getUser(1);</div></pre></td></tr></table></figure>
<p>如果改为MySQL数据库，这改动这里<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IFactory factory = new MySQLServerFactory();</div></pre></td></tr></table></figure></p>
<h2 id="使用抽象工厂"><a href="#使用抽象工厂" class="headerlink" title="使用抽象工厂"></a>使用抽象工厂</h2><h3 id="新增Department表"><a href="#新增Department表" class="headerlink" title="新增Department表"></a>新增Department表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">public class Department &#123;</div><div class="line">    private int id;</div><div class="line">    private String deptName;</div><div class="line"></div><div class="line">    public int getId() &#123;</div><div class="line">        return id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setId(int id) &#123;</div><div class="line">        this.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getDeptName() &#123;</div><div class="line">        return deptName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setDeptName(String deptName) &#123;</div><div class="line">        this.deptName = deptName;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="新增IDepartment接口"><a href="#新增IDepartment接口" class="headerlink" title="新增IDepartment接口"></a>新增IDepartment接口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public interface IDepartment &#123;</div><div class="line">    void insertDepartment(Department department);</div><div class="line">    Department getDepartment(int id);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="新增SqlServerDepartment类"><a href="#新增SqlServerDepartment类" class="headerlink" title="新增SqlServerDepartment类"></a>新增SqlServerDepartment类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">public class SqlServerDepartment implements IDepartment &#123;</div><div class="line">    private static final String TAG = &quot;SqlServerDepartment&quot;;</div><div class="line">    @Override</div><div class="line">    public void insertDepartment(Department department) &#123;</div><div class="line">        Log.d(TAG, &quot;insertDepartment: 在Sql Server 中插入Department&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public Department getDepartment(int id) &#123;</div><div class="line">        Log.d(TAG, &quot;insertDepartment: 在Sql Server 中获取Department&quot;);</div><div class="line">        return null;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="新增MySQLDepartment类"><a href="#新增MySQLDepartment类" class="headerlink" title="新增MySQLDepartment类"></a>新增MySQLDepartment类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">public class MySQLDepartment implements IDepartment &#123;</div><div class="line">    private static final String TAG = &quot;MySQLDepartment&quot;;</div><div class="line">    @Override</div><div class="line">    public void insertDepartment(Department department) &#123;</div><div class="line">        Log.d(TAG, &quot;insertDepartment: 在MySQL 中插入Department&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public Department getDepartment(int id) &#123;</div><div class="line">        Log.d(TAG, &quot;insertDepartment: 在MySQL 中获取Department&quot;);</div><div class="line">        return null;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="修改IFactory接口"><a href="#修改IFactory接口" class="headerlink" title="修改IFactory接口"></a>修改IFactory接口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public interface IFactory &#123;</div><div class="line">    IUser createUser();</div><div class="line">    IDepartment createDepartment();	//新增</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="修改SqlServerFactory类"><a href="#修改SqlServerFactory类" class="headerlink" title="修改SqlServerFactory类"></a>修改SqlServerFactory类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public class SqlServerFactory implements IFactory &#123;</div><div class="line">    @Override</div><div class="line">    public IUser createUser() &#123;</div><div class="line">        return new SqlServerUser();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public IDepartment createDepartment() &#123;</div><div class="line">        return new SqlServerDepartment();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="修改MySQLServerFactory类"><a href="#修改MySQLServerFactory类" class="headerlink" title="修改MySQLServerFactory类"></a>修改MySQLServerFactory类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public class MySQLServerFactory implements IFactory &#123;</div><div class="line">    @Override</div><div class="line">    public IUser createUser() &#123;</div><div class="line">        return new MySQLUser();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public IDepartment createDepartment() &#123;</div><div class="line">        return new MySQLDepartment();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="客户端调用-2"><a href="#客户端调用-2" class="headerlink" title="客户端调用"></a>客户端调用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">User user = new User();</div><div class="line">user.setId(1);</div><div class="line">user.setName(&quot;Allever&quot;);</div><div class="line">Department department = new Department();</div><div class="line">department.setId(1);</div><div class="line">department.setDeptName(&quot;Computer&quot;);</div><div class="line"></div><div class="line">IFactory factory = new MySQLServerFactory();</div><div class="line">IUser iUser = factory.createUser();</div><div class="line">iUser.insertUser(user);</div><div class="line">iUser.getUser(1);</div><div class="line"></div><div class="line">IDepartment iDepartment = factory.createDepartment();</div><div class="line">iDepartment.insertDepartment(department);</div><div class="line">iDepartment.getDepartment(1);</div></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>只有一个User类和User操作类的时候，只需要工厂方法模式， 但现在数据库中有很多表， 而SQL Server 和 MySQL 又是两大不同的分类， 所以解决这种涉及到多个产品系列的时候，就要用到抽象工厂模式。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h1&gt;&lt;h1 id=&quot;UML类图&quot;&gt;&lt;a href=&quot;#UML类图&quot; class=&quot;headerlink&quot; title=&quot;UML类图&quot;&gt;&lt;/a&gt;UML类
    
    </summary>
    
      <category term="设计模式" scheme="https://devallever.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://devallever.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="抽象工厂" scheme="https://devallever.github.io/tags/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/"/>
    
  </entry>
  
  <entry>
    <title>Android动画实例</title>
    <link href="https://devallever.github.io/2017/05/24/animation-demo-1/"/>
    <id>https://devallever.github.io/2017/05/24/animation-demo-1/</id>
    <published>2017-05-24T06:54:12.000Z</published>
    <updated>2017-05-24T07:13:15.040Z</updated>
    
    <content type="html"><![CDATA[<h1 id="灵动菜单"><a href="#灵动菜单" class="headerlink" title="灵动菜单"></a>灵动菜单</h1><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>把菜单项目放在菜单按钮同一位置, 当点击带单按钮时候, 每个菜单项开始动画, 从原来位置,移动到指定位置  </p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>布局文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;&gt;</div><div class="line">    &lt;ImageView</div><div class="line">        android:id=&quot;@+id/id_dynamic_activity_fab_left&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:src=&quot;@mipmap/ic_launcher&quot;</div><div class="line">        android:layout_centerInParent=&quot;true&quot;</div><div class="line">        android:visibility=&quot;visible&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;ImageView</div><div class="line">        android:id=&quot;@+id/id_dynamic_activity_fab_top&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:src=&quot;@mipmap/ic_launcher&quot;</div><div class="line">        android:layout_centerInParent=&quot;true&quot;</div><div class="line">        android:visibility=&quot;visible&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;ImageView</div><div class="line">        android:id=&quot;@+id/id_dynamic_activity_fab_right&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:src=&quot;@mipmap/ic_launcher&quot;</div><div class="line">        android:layout_centerInParent=&quot;true&quot;</div><div class="line">        android:visibility=&quot;visible&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;ImageView</div><div class="line">        android:id=&quot;@+id/id_dynamic_activity_fab_bottom&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:src=&quot;@mipmap/ic_launcher&quot;</div><div class="line">        android:layout_centerInParent=&quot;true&quot;</div><div class="line">        android:visibility=&quot;visible&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;ImageView</div><div class="line">        android:id=&quot;@+id/id_dynamic_activity_fab_main&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:background=&quot;@mipmap/ic_launcher&quot;</div><div class="line">        android:layout_centerInParent=&quot;true&quot;/&gt;</div><div class="line"></div><div class="line">&lt;/RelativeLayout&gt;</div></pre></td></tr></table></figure></p>
<p>展开菜单:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startMenu</span><span class="params">()</span></span>&#123;</div><div class="line">        ObjectAnimator mainAnimator = ObjectAnimator.ofFloat(ivMain,<span class="string">"alpha"</span>,<span class="number">1f</span>,<span class="number">0.5f</span>);</div><div class="line"></div><div class="line">        <span class="keyword">float</span> leftCurrentX = ivLeft.getTranslationX();</div><div class="line">        ObjectAnimator leftAnimator = ObjectAnimator.ofFloat(ivLeft,<span class="string">"translationX"</span>,leftCurrentX,-<span class="number">200f</span>);</div><div class="line"></div><div class="line">        <span class="keyword">float</span> rightCurrentX = ivRight.getTranslationX();</div><div class="line">        ObjectAnimator rightAnimator = ObjectAnimator.ofFloat(ivRight,<span class="string">"translationX"</span>,rightCurrentX,<span class="number">200f</span>);</div><div class="line"></div><div class="line">        <span class="keyword">float</span> topCurrentY = ivTop.getTranslationY();</div><div class="line">        ObjectAnimator topAnimator = ObjectAnimator.ofFloat(ivTop,<span class="string">"translationY"</span>,topCurrentY,-<span class="number">200f</span>);</div><div class="line"></div><div class="line">        <span class="keyword">float</span> bottomCurrentY = ivBottom.getTranslationY();</div><div class="line">        ObjectAnimator bottomAnimator = ObjectAnimator.ofFloat(ivBottom,<span class="string">"translationY"</span>,bottomCurrentY,<span class="number">200f</span>);</div><div class="line"></div><div class="line"></div><div class="line">        AnimatorSet animatorSet = <span class="keyword">new</span> AnimatorSet();</div><div class="line">        animatorSet.playTogether(mainAnimator,leftAnimator,rightAnimator,topAnimator,bottomAnimator);</div><div class="line">        animatorSet.setDuration(<span class="number">500</span>);</div><div class="line">        animatorSet.setInterpolator(<span class="keyword">new</span> BounceInterpolator());</div><div class="line">        animatorSet.start();</div><div class="line"></div><div class="line">        flag = <span class="keyword">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>关闭菜单:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">closeMenu</span><span class="params">()</span></span>&#123;</div><div class="line">        ObjectAnimator mainAnimator = ObjectAnimator.ofFloat(ivMain,<span class="string">"alpha"</span>,<span class="number">0.5f</span>,<span class="number">1f</span>);</div><div class="line"></div><div class="line">        <span class="keyword">float</span> leftCurrentX = ivLeft.getTranslationX();</div><div class="line">        ObjectAnimator leftAnimator = ObjectAnimator.ofFloat(ivLeft,<span class="string">"translationX"</span>,leftCurrentX, <span class="number">0f</span>);</div><div class="line"></div><div class="line">        <span class="keyword">float</span> rightCurrentX = ivRight.getTranslationX();</div><div class="line">        ObjectAnimator rightAnimator = ObjectAnimator.ofFloat(ivRight,<span class="string">"translationX"</span>,rightCurrentX,<span class="number">0f</span>);</div><div class="line"></div><div class="line">        <span class="keyword">float</span> topCurrentY = ivTop.getTranslationY();</div><div class="line">        ObjectAnimator topAnimator = ObjectAnimator.ofFloat(ivTop,<span class="string">"translationY"</span>,topCurrentY,<span class="number">0f</span>);</div><div class="line"></div><div class="line">        <span class="keyword">float</span> bottomCurrentY = ivBottom.getTranslationY();</div><div class="line">        ObjectAnimator bottomAnimator = ObjectAnimator.ofFloat(ivBottom,<span class="string">"translationY"</span>,bottomCurrentY,<span class="number">0f</span>);</div><div class="line"></div><div class="line"></div><div class="line">        AnimatorSet animatorSet = <span class="keyword">new</span> AnimatorSet();</div><div class="line">        animatorSet.playTogether(mainAnimator,leftAnimator,rightAnimator,topAnimator,bottomAnimator);</div><div class="line">        animatorSet.setDuration(<span class="number">500</span>);</div><div class="line">        animatorSet.setInterpolator(<span class="keyword">new</span> BounceInterpolator());</div><div class="line">        animatorSet.start();</div><div class="line"></div><div class="line">        flag = <span class="keyword">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>对主菜单按钮监听<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ivMain.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span> (flag) startMenu();</div><div class="line">		<span class="keyword">else</span> closeMenu();</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h1 id="下拉展开动画"><a href="#下拉展开动画" class="headerlink" title="下拉展开动画"></a>下拉展开动画</h1><h2 id="实现思路-1"><a href="#实现思路-1" class="headerlink" title="实现思路"></a>实现思路</h2><p>两个LinearLayout, 一个visibility为显示,另一个为gone. 当点击showVIew时,把隐藏的LinearLayout设置为visibility,对这个过程使用动画.</p>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><p>布局文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;&gt;</div><div class="line"></div><div class="line">    &lt;LinearLayout</div><div class="line">        android:id=&quot;@+id/id_show_hide_ll_show_view&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:gravity=&quot;center_vertical&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot;&gt;</div><div class="line">        &lt;ImageView</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:src=&quot;@mipmap/ic_launcher&quot;/&gt;</div><div class="line"></div><div class="line">        &lt;TextView</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:text=&quot;click me&quot;/&gt;</div><div class="line"></div><div class="line"></div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">    &lt;LinearLayout</div><div class="line">        android:id=&quot;@+id/id_show_hide_ll_hide_view&quot;</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;40dp&quot;</div><div class="line">        android:gravity=&quot;center_vertical&quot;</div><div class="line">        android:visibility=&quot;gone&quot;</div><div class="line">        android:background=&quot;@color/colorPrimary&quot;&gt;</div><div class="line"></div><div class="line">        &lt;ImageView</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:src=&quot;@mipmap/ic_launcher&quot;/&gt;</div><div class="line"></div><div class="line">        &lt;TextView</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:text=&quot;I am hide&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure></p>
<p>获取ValueAnimator:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">private ValueAnimator createValueAnimator(final View view, int start, int end)&#123;</div><div class="line">        final ValueAnimator animator = ValueAnimator.ofInt(start,end);</div><div class="line">        animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onAnimationUpdate(ValueAnimator valueAnimator) &#123;</div><div class="line">                int value = (int)valueAnimator.getAnimatedValue();</div><div class="line">                ViewGroup.LayoutParams params = view.getLayoutParams();</div><div class="line">                params.height = value;</div><div class="line">                view.setLayoutParams(params);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        return animator;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>展开动画:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">private void openAnimation(View view)&#123;</div><div class="line">        view.setVisibility(View.VISIBLE);</div><div class="line">        ValueAnimator valueAnimator = createValueAnimator(view,0,measureHiddenViewHeight);</div><div class="line">        valueAnimator.start();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>关闭动画:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">private void closeAnimation(final View view) &#123;</div><div class="line">	int origHeight = view.getHeight();</div><div class="line">	ValueAnimator valueAnimator = createValueAnimator(view,origHeight,0);</div><div class="line">	valueAnimator.addListener(new AnimatorListenerAdapter() &#123;</div><div class="line">		@Override</div><div class="line">		public void onAnimationEnd(Animator animation) &#123;</div><div class="line">			view.setVisibility(View.GONE);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">	valueAnimator.start();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;灵动菜单&quot;&gt;&lt;a href=&quot;#灵动菜单&quot; class=&quot;headerlink&quot; title=&quot;灵动菜单&quot;&gt;&lt;/a&gt;灵动菜单&lt;/h1&gt;&lt;h2 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a
    
    </summary>
    
      <category term="Android" scheme="https://devallever.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devallever.github.io/tags/Android/"/>
    
      <category term="动画" scheme="https://devallever.github.io/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>设计模式(三) 工厂方法模式</title>
    <link href="https://devallever.github.io/2017/05/24/factory-method-patterns/"/>
    <id>https://devallever.github.io/2017/05/24/factory-method-patterns/</id>
    <published>2017-05-24T03:51:32.000Z</published>
    <updated>2017-05-24T04:20:19.029Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>定义一个用于创建对象的接口,让子类决定实例化那个类</p>
<h1 id="UML类图"><a href="#UML类图" class="headerlink" title="UML类图"></a>UML类图</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://timgsa.baidu.com/timg?image&quality=80&size=b10000_10000&sec=1495597696&di=b6e459e489113ecdbc79ac8f57f17f19&src=http://pic002.cnblogs.com/images/2012/448009/2012102412230955.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>解读: </p>
<ul>
<li>Product: 产品抽象类, </li>
<li>ConcreteProduct: 产品实现类</li>
<li>Creator: 工厂抽象类, 返回一个Product实例</li>
<li>ConcreteCreator: 工厂实现类, 返回一个ConcreteProduct实例</li>
</ul>
<h1 id="简单实现"><a href="#简单实现" class="headerlink" title="简单实现"></a>简单实现</h1><p>##　Fruit: 作为产品抽象类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Fruit</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">getName</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>##　Banana: 作为产品实现类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Banana</span> <span class="keyword">extends</span> <span class="title">Fruit</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"I am banana"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Apple-作为产品实现类"><a href="#Apple-作为产品实现类" class="headerlink" title="Apple: 作为产品实现类"></a>Apple: 作为产品实现类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Apple</span> <span class="keyword">extends</span> <span class="title">Fruit</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"I am apple"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="FruitFactory-作为抽象工厂类"><a href="#FruitFactory-作为抽象工厂类" class="headerlink" title="FruitFactory: 作为抽象工厂类"></a>FruitFactory: 作为抽象工厂类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitFactory</span>  </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">abstract</span> Fruit <span class="title">createFruit</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="AppleFactory-作为工厂实现类"><a href="#AppleFactory-作为工厂实现类" class="headerlink" title="AppleFactory: 作为工厂实现类"></a>AppleFactory: 作为工厂实现类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppleFactory</span> <span class="keyword">extends</span> <span class="title">FruitFactory</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function">Fruit <span class="title">createFruit</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Apple();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="BananaFactory-作为工厂实现类"><a href="#BananaFactory-作为工厂实现类" class="headerlink" title="BananaFactory: 作为工厂实现类"></a>BananaFactory: 作为工厂实现类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BananaFactory</span> <span class="keyword">extends</span> <span class="title">FruitFactory</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function">Fruit <span class="title">createFruit</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Banana();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在需要哪一个产品时就生产哪个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">FruitFactory fruitFactory = new AppleFactory();</div><div class="line">Fruit apple = fruitFactory.createFruit();</div><div class="line">apple.getName();</div></pre></td></tr></table></figure></p>
<h2 id="使用反射"><a href="#使用反射" class="headerlink" title="使用反射"></a>使用反射</h2><h3 id="FruitFactory"><a href="#FruitFactory" class="headerlink" title="FruitFactory"></a>FruitFactory</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitFactory</span>  </span>&#123;</div><div class="line">    <span class="keyword">abstract</span> &lt;T extends Fruit&gt; <span class="function">T <span class="title">createFruit</span><span class="params">(Class&lt;T&gt; className)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>###　ConcreteFruitFactory: 具体工厂类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConcreteFruitFactory</span> <span class="keyword">extends</span> <span class="title">FruitFactory</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    &lt;T extends Fruit&gt; <span class="function">T <span class="title">createFruit</span><span class="params">(Class&lt;T&gt; className)</span> </span>&#123;</div><div class="line">        Fruit fruit = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            fruit = (Fruit)Class.forName(className.getName()).newInstance();</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> (T)fruit;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p>需要哪个类对象就传入那个类的类型<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">FruitFactory fruitFactory = <span class="keyword">new</span> ConcreteFruitFactory();</div><div class="line">Fruit apple = fruitFactory.createFruit(Apple.class);</div><div class="line">apple.getName();</div></pre></td></tr></table></figure></p>
<h1 id="简单工厂方法模式"><a href="#简单工厂方法模式" class="headerlink" title="简单工厂方法模式"></a>简单工厂方法模式</h1><p>当工厂只有一个的时候, 只需将对应的工厂方法改为静态方法, 并去掉abstract关键字, 此时就变成了简单工厂模式或者静态工厂模式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public class FruitFactory  &#123;</div><div class="line">    static Fruit createFruit()&#123;</div><div class="line">        return new Apple();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h1&gt;&lt;p&gt;定义一个用于创建对象的接口,让子类决定实例化那个类&lt;/p&gt;
&lt;h1 id=&quot;UML类图&quot;&gt;&lt;a href=&quot;#UML类图&quot; class=&quot;h
    
    </summary>
    
      <category term="设计模式" scheme="https://devallever.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://devallever.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="工厂方法模式" scheme="https://devallever.github.io/tags/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
