{"meta":{"title":"Allever Blog","subtitle":null,"description":"Allever Blog","author":"Allever","url":"https://devallever.github.io"},"pages":[],"posts":[{"title":"Java连接数据库","slug":"Java连接数据库","date":"2017-04-21T05:49:27.000Z","updated":"2017-04-21T07:10:18.529Z","comments":true,"path":"2017/04/21/Java连接数据库/","link":"","permalink":"https://devallever.github.io/2017/04/21/Java连接数据库/","excerpt":"","text":"MySQL provides standards-based drivers for JDBC, ODBC, and .Net enabling developers to build database applications in their language of choice. In addition, a native C library allows developers to embed MySQL directly into their applications. 1.下载相关的驱动程序如 Java与MySQL的连接,可到MySQL官网上下载下载地址 2.数据库的URL格式如: jdbc:mysql://127.0.0.1/dbname在连接数据库时,我们必须使用各种与数据库类型相关的参数,例如主机名,端口号和数据库名jdbc的一般语法:jdbc:subprotocol:other stuff subprotocol:连接数据库的具体驱动程序 other stuff:随subprotocol的不同而不同,应查阅供应商的相关文档 3.注册驱动器类1Class.forName(\"com.mysql.jdbc.Driver\"); 字符串的内容为驱动器类所在包的全路径这条语句使得驱动器类被加载,由此将执行可以注册驱动器的静态初始化器 4.连接到数据库1Connection conn = DriverManager.getConnection(sqlUrl, username, password); 以上三个参数类型都是字符串类型, 连接成功会返回Connection对象,用它去执行SQL语句. 5.操作数据库5.1 基本方法1String sql = \"select nickname, phone from tuser where username='xm'\"; 执行sql命令首先创建Statement对象或其子类PreparedStatement对象12345statement = conn.createStatement();preparedStatement = conn.preparedStatement(sql);ResultSet resultSet = statement.executeQuery(sql);或resultSet = preparedStatement.executeQuery(); executeQuery()方法可以执行select 语句, executeUpdate()方法可以执行insert, update和delete之类的操作. 也可以执行create table 和drop table之类的数据定义语句. execute()方法可以执行任意的sql语句.","categories":[],"tags":[]},{"title":"Hello Android","slug":"helloAndroid","date":"2017-04-17T14:56:05.454Z","updated":"2017-04-17T14:56:05.438Z","comments":true,"path":"2017/04/17/helloAndroid/","link":"","permalink":"https://devallever.github.io/2017/04/17/helloAndroid/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-04-17T08:48:22.843Z","updated":"2017-04-17T08:48:22.843Z","comments":true,"path":"2017/04/17/hello-world/","link":"","permalink":"https://devallever.github.io/2017/04/17/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}